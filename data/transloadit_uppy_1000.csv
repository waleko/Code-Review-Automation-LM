,diff_hunk,human_review,created_at
251,"@@ -0,0 +1,10 @@
+const createSuperFocus = require('./createSuperFocus')
+
+describe('createSuperFocus', () => {
+  // superFocus.cancel() is used in dashboard
+  it('should return a function that can be cancelled', () => {","Confused, sorry, but where is `superFocus.cancel()` defined?",2019-05-03 18:49:06
728,"@@ -0,0 +1,100 @@
+---
+title: ""Uppy 2.1–2.3 or Recently in the Uppy Universe: Audio plugin, Unsplash update, switch to Yarn, Status Bar improvements and more"" ","I think the changes to companion are a huge thing and should be highlighted.

```suggestion
title: ""Uppy 2.1-2.3: Audio plugin, new fast and efficient streaming for Companion, production-ready Unsplash, and more"" 
```",2021-12-21 13:03:10
175,"@@ -0,0 +1,11 @@
+#!/usr/bin/env bash
+sh ../env.sh
+
+export UPPYSERVER_DATADIR=""./packages/@uppy/companion/output""",We may want to put the data directory in the repo root instead so we can never accidentally publish it.,2018-07-16 10:29:06
177,"@@ -0,0 +1,11 @@
+#!/usr/bin/env bash
+sh ../env.sh
+
+export UPPYSERVER_DATADIR=""./packages/@uppy/companion/output""
+export UPPYSERVER_DOMAIN=""localhost:3020""
+export UPPYSERVER_PROTOCOL=""http""
+export UPPYSERVER_PORT=3020
+export UPPY_ENDPOINTS=""""
+export UPPYSERVER_SECRET=""development""
+
+nodemon --exec node ./packages/@uppy/companion/src/standalone/start-server.js","nodemon watches everything in the working directory by default, so this will restart each time any Uppy client file is built or updated too. (try doing `npm start` in the repo root.) Using `--watch packages/@uppy/companion` would help there",2018-07-16 10:57:21
754,"@@ -0,0 +1,11 @@
+<!doctype html>
+<html lang=""en"">
+  <head>
+    <meta charset=""utf-8""/>
+    <title>dashboard-compressor</title>
+    <script defer type=""module"" src=""app.js""></script>
+  </head>
+  <body>
+    <div id=""app""></div>
+  </body>
+</html>","Something to fix in the generator script it seems
```suggestion
</html>

```",2022-02-10 20:58:13
454,"@@ -0,0 +1,114 @@
+const qs = require('qs')
+const moment = require('moment')
+
+const MIMETYPES = {
+  MP4: 'video/mp4',
+  M4A: 'audio/mp4',
+  CHAT: 'text/plain',
+  TRANSCRIPT: 'text/vtt',
+  CC: 'text/vtt',
+  TIMELINE: 'application/json'
+}
+const ICONS = {
+  MP4: 'video',
+  M4A: 'audio',
+  CHAT: 'text',
+  TRANSCRIPT: 'text',",[these are the icons supported by uppy](https://github.com/transloadit/uppy/blob/master/packages/%40uppy/provider-views/src/Item/components/ItemIcon.js#L32-L39). So maybe change _text_ and _audio_ to _file_?,2020-07-13 08:44:02
711,"@@ -0,0 +1,12 @@
+/**
+ * Takes an Integer value of seconds (e.g. 83) and converts it into a human-readable formatted string (e.g. '1:23').
+ *
+ * @param {Integer} seconds
+ * @returns {string} the formatted seconds (e.g. '1:23' for 1 minute and 23 seconds)
+ *
+ */
+module.exports = function formatSeconds (seconds) {",Might be worth to add a TODO comment to switch to https://tc39.es/proposal-temporal/docs/duration.html#toLocaleString when it's implemented on all supported browsers.,2021-11-26 14:15:38
358,"@@ -0,0 +1,12 @@
+const { h } = require('preact')
+const formatSeconds = require('./formatSeconds')
+
+module.exports = function RecordingLength ({ recordingLengthSeconds }) {
+  const formattedRecordingLengthSeconds = formatSeconds(recordingLengthSeconds)
+
+  return (
+    <div class=""uppy-Webcam-recordingLength"" title={formattedRecordingLengthSeconds} aria-label={formattedRecordingLengthSeconds}>","Ideally `aria-label` should say `Recording length 1:25`. We’d need a `Recording length: {number}` string added to Webcam’s `i18n`, please see: https://github.com/transloadit/uppy/blob/895498815718cf3ef4245593e176f0ccc6503fc3/packages/%40uppy/core/src/index.js#L53 and https://github.com/transloadit/uppy/blob/895498815718cf3ef4245593e176f0ccc6503fc3/packages/%40uppy/core/src/index.js#L830

Title should probably just say “Recording length”, since the number is visually available. We could also omit the `title` altogether, because if we keep it, we’ll have to add 2 `i18n` strings — one with the number, other without the number.",2019-11-26 17:54:20
714,"@@ -0,0 +1,12 @@
+import type { PluginOptions, UIPlugin, PluginTarget } from '@uppy/core'
+import AudioLocale from './generatedLocale'","```suggestion
import type AudioLocale from './generatedLocale'
```",2021-11-26 14:30:18
718,"@@ -0,0 +1,12 @@
+import type { PluginOptions, UIPlugin, PluginTarget } from '@uppy/core'
+import AudioLocale from './generatedLocale'
+
+export interface AudioOptions extends PluginOptions {
+    target?: PluginTarget
+    showVideoSourceDropdown?: boolean
+    locale?: AudioLocale
+}
+
+declare class Audio extends UIPlugin<AudioOptions> {}","any methods that should be publicly available through `.getPlugin`? If so, then they need to be typed here (or all made #private in the code itself)",2021-11-29 10:32:02
715,"@@ -0,0 +1,129 @@
+/* eslint-disable jsx-a11y/media-has-caption */
+const { h, Component } = require('preact')","Will we gradually switch to hooks? If so, might be good to do so with new plugins. Initial bundle size will increase a bit but that's inevitable if we would like to switch. ",2021-11-29 10:24:09
399,"@@ -0,0 +1,13 @@
+class NetworkError extends Error {
+  constructor (error = null, xhr = null) {","I understand why `xhr = null`, but I think adding `error = null` implies that this method should work even if we don't pass the `error` argument. Should we remove it?",2020-04-16 02:43:44
403,"@@ -0,0 +1,13 @@
+class NetworkError extends Error {
+  constructor (error = null, xhr = null) {
+    super(error.message)","is there a reason we are not setting  `""This looks like a network error ...""` as the primary message instead? And append the source error? Something like this:

```js
super(`This looks like a network error, the endpoint might be blocked by an ISP or a firewall. Source error [${error}]`)
```

That way, we won't have to worry about the punctuation and the concatenation done below `error.message + '. This looks ...'` which can be error prone for some error messages that already contain a period '.', or for cases where `error` is `null`.",2020-04-17 12:26:30
400,"@@ -0,0 +1,13 @@
+class NetworkError extends Error {
+  constructor (error = null, xhr = null) {
+    super(error.message)
+
+    this.isNetworkError = true
+    this.originalRequest = xhr","Do we need the `xhr` argument & setting `.originalRequest` here?
`xhr` is never passed, `.originalRequest` is never used & we assign `error.request = xhr` in most places anyway.",2020-04-16 04:22:08
114,"@@ -0,0 +1,133 @@
+const Plugin = require('../../core/Plugin')
+const { h } = require('preact')
+const Provider = require('../Provider')
+// const Utils = require('../../core/Utils')
+require('whatwg-fetch')
+
+/**
+ * Link
+ *
+ */
+module.exports = class Link extends Plugin {
+  constructor (uppy, opts) {
+    super(uppy, opts)
+    this.id = this.opts.id || 'Url'
+    this.title = 'Link'
+    this.type = 'acquirer'","I think we should consider not hardcoding these plugin types.

We could have `core.types = {ACQUIRER: 'acquirer', ...}`

then in our plugin we do:
`this.type = core.types.ACQUIRER`

it might be easier to maintain that way. Especially with custom plugins created outside this project.

what do you think?",2018-02-03 10:31:39
919,"@@ -0,0 +1,14 @@
+/* eslint-disable */
+import React from 'react'
+import { createRoot } from 'react-dom/client';
+import App from './App.jsx'
+
+import '@uppy/core/dist/style.css'
+import '@uppy/dashboard/dist/style.css'
+import '@uppy/drag-drop/dist/style.css'
+import '@uppy/file-input/dist/style.css'
+import '@uppy/progress-bar/dist/style.css'",nit: this should live in `App.jsx`,2022-08-18 09:21:38
768,"@@ -0,0 +1,14 @@
+import { setCompodocJson } from ""@storybook/addon-docs/angular"";
+import docJson from ""../documentation.json"";
+setCompodocJson(docJson);
+
+export const parameters = {
+  actions: { argTypesRegex: ""^on[A-Z].*"" },
+  controls: {
+    matchers: {
+      color: /(background|color)$/i,
+      date: /Date$/,
+    },
+  },
+  docs: { inlineStories: true },
+}","```suggestion
}

```",2022-02-25 20:14:20
787,"@@ -0,0 +1,144 @@
+const { nanoid } = require('nanoid/non-secure')
+
+class Uploader {
+  preProcessors = new Set()
+
+  uploaders = new Set()","I'm feel like exposing these as public properties is not so clean, if they are the concern of the Uploader class",2022-03-16 08:01:58
786,"@@ -0,0 +1,144 @@
+const { nanoid } = require('nanoid/non-secure')
+
+class Uploader {
+  preProcessors = new Set()
+
+  uploaders = new Set()
+
+  postProcessors = new Set()
+
+  constructor (getState, setState, emit, log, getFile, getOpts) {
+    this.getState = getState",shouldn't these all be private (prefixed with _ or #)?,2022-03-16 07:54:15
958,"@@ -0,0 +1,158 @@
+---
+title: ""Uppy 3.0: Future-proof, conveniently easy, stable as ever"" 
+date: 2022-09-01
+author: 
+  - aduh95
+  - arturi
+  - mifi
+  - murderlon
+image: ""https://uppy.io/images/blog/3.0/uppy-3-0.jpg""",Any reason to use a JPEG image instead of a PNG one?,2022-09-09 20:18:21
957,"@@ -0,0 +1,158 @@
+---
+title: ""Uppy 3.0: Future-proof, conveniently easy, stable as ever"" 
+date: 2022-09-01
+author: 
+  - aduh95
+  - arturi
+  - mifi
+  - murderlon
+image: ""https://uppy.io/images/blog/3.0/uppy-3-0.jpg""
+published: true
+---
+
+![](/images/blog/3.0/uppy-3-0.jpg)","```suggestion
![Screenshot of Uppy 3.0.0 UI](/images/blog/3.0/uppy-3-0.png)
```",2022-09-09 20:01:09
696,"@@ -0,0 +1,158 @@
+/* eslint-disable no-console, prefer-arrow-callback */
+import path from 'node:path'
+import fs from 'node:fs'
+
+import glob from 'glob'
+import chalk from 'chalk'
+
+import { getPaths, omit } from './helpers.mjs'
+
+const root = path.join('..', '..')","```suggestion
const root = new URL('../../', import.meta.url)
```",2021-10-29 12:11:16
541,"@@ -0,0 +1,17 @@
+# Number of days of inactivity before an issue becomes stale
+daysUntilStale: 365
+# Number of days of inactivity before a stale issue is closed
+daysUntilClose: 7","I think since we have such a high amount of days for stale issues right now, we could give folks a little more time to alert us:
```suggestion
daysUntilClose: 14
```",2021-01-18 14:28:10
735,"@@ -0,0 +1,17 @@
+<?php
+
+
+if(str_starts_with($_SERVER['REQUEST_URI'], '/main.js')) {
+    header(""Content-Type: text/javascript; charset=UTF-8"");
+    passthru('corepack yarn outputBundle');
+    return true;
+} else if (str_starts_with($_SERVER['REQUEST_URI'], '/uppy.min.css')) {",Would probably be more accurate to get the file extension and then map that to a content type but it's only an example so 🤷‍♂️,2022-01-06 12:25:48
905,"@@ -0,0 +1,17 @@
+import { interceptCompanionUrlRequest, interceptCompanionUnsplashRequest, runRemoteUrlImageUploadTest, runRemoteUnsplashUploadTest } from './util.mjs'","I have a small allergy for folders and files named `util` 😅 

Shall we rename this to `reused-tests.ts` (note also the change from `mjs` to `ts`)?",2022-08-10 13:16:11
978,"@@ -0,0 +1,17 @@
+{
+  ""name"": ""@uppy-example/uppy-s3-example"",
+  ""version"": ""1.0.0"",
+  ""description"": """",","```suggestion
  ""description"": ""Uppy for AWS S3 with a custom Node.js backend for signing URLs"",
```",2022-10-03 14:21:06
977,"@@ -0,0 +1,17 @@
+{
+  ""name"": ""@uppy-example/uppy-s3-example"",
+  ""version"": ""1.0.0"",
+  ""description"": """",
+  ""main"": ""index.js"",
+  ""scripts"": {
+    ""start"": ""node index.js""
+  },
+  ""author"": """",
+  ""license"": ""ISC"",","```suggestion
  ""license"": ""MIT"",
```",2022-10-03 14:20:25
982,"@@ -0,0 +1,17 @@
+{
+  ""name"": ""@uppy-example/uppy-s3-example"",
+  ""version"": ""1.0.0"",
+  ""description"": ""Uppy for AWS S3 with a custom Node.js backend for signing URLs"",
+  ""main"": ""index.js"",
+  ""scripts"": {
+    ""start"": ""node index.js""
+  },
+  ""author"": """",
+  ""license"": ""MIT"",
+  ""dependencies"": {
+    ""aws-sdk"": ""^2.1225.0"",","Same here.
```suggestion
    ""aws-sdk"": ""^2.1038.0"",
```",2022-10-12 01:23:52
981,"@@ -0,0 +1,17 @@
+{
+  ""name"": ""@uppy-example/uppy-s3-example"",
+  ""version"": ""1.0.0"",
+  ""description"": ""Uppy for AWS S3 with a custom Node.js backend for signing URLs"",
+  ""main"": ""index.js"",
+  ""scripts"": {
+    ""start"": ""node index.js""
+  },
+  ""author"": """",
+  ""license"": ""MIT"",
+  ""dependencies"": {
+    ""aws-sdk"": ""^2.1225.0"",
+    ""body-parser"": ""^1.20.0"",
+    ""dotenv"": ""^16.0.2"",","Can we use the same range that's define eslewhere in the project please? It helps with upgrading.
```suggestion
    ""dotenv"": ""^16.0.0"",
```",2022-10-12 01:23:37
348,"@@ -0,0 +1,170 @@
+const request = require('request')
+
+const B2_API_VERSION = 2
+const B2_API_URL = `https://api.backblazeb2.com/b2api/v${B2_API_VERSION}/`
+
+module.exports = class B2Client {","is there a reason we are not using this [backblaze npm module](https://www.npmjs.com/package/backblaze-b2) instead? It seems to be actively maintained, and has almost the same API as what is implemented here.",2019-11-16 17:38:13
471,"@@ -0,0 +1,171 @@
+// Attributes in the format of htmlAtrribute: reactAttribute
+const possibleStandardNames = {",It looks like only the react-style names (the values in this object) are actually needed. Could we use an array instead?,2020-08-06 13:47:10
495,"@@ -0,0 +1,176 @@
+const Provider = require('../Provider')
+
+const request = require('request')
+const purest = require('purest')({ request })
+const logger = require('../../logger')
+const adapter = require('./adapter')
+const { ProviderApiError, ProviderAuthError } = require('../error')
+
+// const BOX_FILE_FIELDS = 'id,name,size,type'",I guess we can delete this?,2020-10-21 15:24:58
154,"@@ -0,0 +1,18 @@
+const Plugin = require('../../core/Plugin')
+
+module.exports = class ProgressBar extends Plugin {
+  constructor (uppy, opts) {
+    super(uppy, opts)
+
+    this.id = opts.id
+    this.type = 'progressindicator'
+  }
+
+  install () {
+    this.opts.onInstall()
+  }
+
+  uninstall () {
+    this.opts.onUninstall()
+  }
+}",I’m a bit confused. We have an actual `ProgressBar` Uppy React wrapper component that we are testing. Why do we need a mock for it?,2018-05-29 17:31:20
191,"@@ -0,0 +1,18 @@
+const ProviderViews = require('@uppy/provider-views')
+
+module.exports = class DriveProviderViews extends ProviderViews {
+  constructor (plugin, opts) {
+    super(plugin, opts)
+    this.originalToggleCheckbox = this.toggleCheckbox
+    this.toggleCheckbox = this.toggleDriveCheckbox.bind(this)
+  }
+  toggleDriveCheckbox (e, file) {","Is there a reason not to name this `toggleCheckbox` and then do `super.toggleCheckbox(e, file)` below? I don't _think_ the .bind() stuff should interfere but i may be wrong…",2018-08-20 15:29:28
380,"@@ -0,0 +1,186 @@
+const router = require('express').Router
+// const ms = require('ms')",leftover?,2020-03-05 16:32:12
747,"@@ -0,0 +1,19 @@
+#!/usr/bin/env bash
+
+# Load local env vars. In CI, these are injected.
+if [ -f .env ]; then
+  # https://gist.github.com/mihow/9c7f559807069a03e302605691f85572?permalink_comment_id=3625310#gistcomment-3625310
+  set -a
+  source <(cat .env | sed -e '/^#/d;/^\s*$/d' -e ""s/'/'\\\''/g"" -e ""s/=\(.*\)/='\1'/g"")","```suggestion
  source <(sed -e '/^#/d;/^\s*$/d' -e ""s/'/'\\\''/g"" -e ""s/=\(.*\)/='\1'/g"" .env)
```",2022-02-01 16:05:01
749,"@@ -0,0 +1,19 @@
+#!/usr/bin/env bash
+
+# Load local env vars. In CI, these are injected.
+if [ -f .env ]; then
+  # https://gist.github.com/mihow/9c7f559807069a03e302605691f85572?permalink_comment_id=3625310#gistcomment-3625310
+  set -a
+  source <(sed -e '/^#/d;/^\s*$/d' -e ""s/'/'\\\''/g"" -e ""s/=\(.*\)/='\1'/g"" .env)",Have you considered https://github.com/motdotla/dotenv ?,2022-02-03 12:38:02
350,"@@ -0,0 +1,196 @@
+const router = require('express').Router
+const ms = require('ms')
+
+module.exports = function b2 (config) {
+  if (typeof config.getPath !== 'function') {
+    throw new TypeError('b2: the `getPath` option must be a function')
+  }
+
+  const getCachedBucketID = (() => {
+    const cache = Object.create({})",is there any reason for not just using a literal like so: `const cache = {}`?,2019-11-17 12:57:12
717,"@@ -0,0 +1,197 @@
+@import '@uppy/core/src/_utils.scss';
+@import '@uppy/core/src/_variables.scss';
+
+.uppy-Audio-container {
+  width: 100%;
+  height: 100%;
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  flex-direction: column;
+}
+
+.uppy-Audio-audioContainer {
+  display: flex;
+  width: 100%;
+  height: 100%;
+  // flex: 1;
+  // flex-grow: 1;
+  // overflow: hidden;
+  background-color: $gray-300;
+  // text-align: center;",come old comments,2021-11-29 10:29:55
759,"@@ -0,0 +1,2 @@
+require('dotenv').config({ path: '.env.local' })","That makes me think we should probably go back to using `.env` instead of `.env.local`. I thought `.env.local` was standard and would be picked up by dotenv by default, but it looks like it's not the case...",2022-02-17 13:51:39
701,"@@ -0,0 +1,20 @@
+{
+  ""private"": true,
+  ""name"": ""locale-pack"",
+  ""author"": ""Merlijn Vos <merlijn@transloadit.com>"",
+  ""description"": ""Generate locale pack, types, and documentation"",
+  ""main"": ""index.mjs"",
+  ""scripts"": {
+    ""build"": ""yarn node index.mjs"",
+    ""test"": ""yarn node test.mjs""
+  },
+  ""dependencies"": {","We should note them as dev dependencies, so they are correctly marked as such in the lock file (not sure if that makes an actual difference in practice tbh, but doesn't cost much to do)
```suggestion
  ""devDependencies"": {
```",2021-11-02 13:41:31
450,"@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2018 Transloadit",we should probably make this 2020,2020-07-07 14:50:26
290,"@@ -0,0 +1,21 @@
+const getTimeStamp = require('@uppy/utils/lib/getTimeStamp')
+
+// Swallow logs, default if logger is not set or debug: false
+const nullLogger = {
+  debug: (...args) => {},
+  warn: (...args) => {},
+  error: (...args) => {}
+}
+
+// Print logs to console with namespace + timestamp,
+// default if logger: 'debug' or debug: true
+const debugLogger = {
+  debug: (...args) => console.debug(`[Uppy] [${getTimeStamp()}]`, ...args),","```suggestion
  debug: (...args) => {
    const debug = console.debug || console.log
    debug(`[Uppy] [${getTimeStamp()}]`, ...args)
  },
```
this should work hopefully",2019-06-24 13:15:26
384,"@@ -0,0 +1,21 @@
+const { h } = require('preact')
+
+module.exports = ({ currentDeviceId, videoSources, onChangeVideoSource }) => {
+  return (
+    <p className=""uppy-Webcam-videoSource"">Video source:
+      <select
+        className=""uppy-Webcam-videoSource-select""
+        onchange={() => { onChangeVideoSource(document.getElementsByClassName('uppy-Webcam-videoSource-select')[0].value) }}","We can use `event.target` here instead:
```suggestion
        onchange={(event) => { onChangeVideoSource(event.target.value) }}
```
it's technically possible that there are 2 or more Uppy instances on a page, and `getElementsByClassName()` may pick the wrong element in that case. `event.target` is always correct.",2020-03-09 09:54:36
532,"@@ -0,0 +1,21 @@
+name: Companion
+on: [push, pull_request]
+
+jobs:
+  test:
+    name: Unit tests
+    runs-on: ubuntu-latest
+    strategy:
+      matrix:
+        node-version: [10.20.1, 12.x, 14.x]",:heart: ,2020-11-26 09:06:38
377,"@@ -0,0 +1,22 @@
+const execa = require('execa')
+const fs = require('fs')
+
+const README_FILE_NAME = 'README.md'
+
+async function updateContributorsListInReadme () {
+  const readme = fs.readFileSync(README_FILE_NAME, 'utf-8')
+  const args = [
+    '--owner', 'transloadit',
+    '--repo', 'uppy',
+    '--cols', '6',
+    '--authToken', process.env.GITHUB_TOKEN ? `--authToken ${process.env.GITHUB_TOKEN}` : ''","```suggestion
    '--authToken', process.env.GITHUB_TOKEN ? process.env.GITHUB_TOKEN : ''
```
",2020-02-17 15:42:27
666,"@@ -0,0 +1,22 @@
+module.expost = function calculateProcessingProgress (files) {","```suggestion
module.export = function calculateProcessingProgress (files) {
```",2021-09-15 09:14:52
923,"@@ -0,0 +1,24 @@
+# Robodog
+
+This example shows all the different Robodog APIs in action on a single page.","This first sentence doesn't make sense here anymore
```suggestion
```",2022-08-22 11:53:11
741,"@@ -0,0 +1,24 @@
+VITE_UPLOADER=tus
+
+#### To customize this, create a .env.dev.local file that overrides those values",nit: it's `.env.development` but `.env.dev.local` (instead of both `dev` or both `development`),2022-01-11 17:33:26
613,"@@ -0,0 +1,27 @@
+const { h, Component, createRef } = require('preact')
+
+module.exports = class FadeIn extends Component {
+  ref = createRef();
+
+  componentWillEnter (callback) {
+    this.ref.current.style.opacity = '1'
+    this.ref.current.style.transform = 'none'
+    setTimeout(callback, 400)",Where does the `400` value come from? Can you put that in a const please?,2021-07-15 16:39:21
684,"@@ -0,0 +1,28 @@
+#!/bin/sh","would be nice to use bash vs dash (via `#!/usr/bin/env bash`, and pass safety options that you can borrow from other scripts) so we have only one interpreter for shell scripts, and pass it through shellcheck as i'm seeing some things it would trip over",2021-10-26 06:57:13
472,"@@ -0,0 +1,28 @@
+---
+title: ""Companion 2.0 is here""
+date: 2020-08-20
+author: ife
+published: false
+---
+
+Companion 2.0 is here! 🎉 After maintaining and improving the 1.x series for over a year, we're releasing a Major version bump on the Companion package. So what are the changes you'd expect to see on Companion 2.0?
+
+## Node >= v10
+
+As you must have heard, Node v8.x has reached EOL, and in turn Companion 2.0 drops support for Node v6.x, Node v8.x and now requires that you run at least Node v10.x.","imho we can shorten this a bit and explain the acronym. I think the ""official"" spelling for node versions is ""Node.js X.Y.Z"", without a `v`, but people would understand either way :)
```suggestion
Node.js 8.x has reached End-of-life, and in turn Companion 2.0 drops support for Node.js 6.x, Node.js 8.x and now requires that you run at least Node.js 10.x.
```",2020-08-17 08:06:08
700,"@@ -0,0 +1,29 @@
+const { h } = require('preact')
+
+module.exports = function renderMissingMetaFieldsError (props) {
+  const { file, toggleFileCard, i18n } = props
+  const { missingRequiredMetaFields } = file
+  if (!missingRequiredMetaFields) {
+    return null
+  }
+  const metaFieldsString = missingRequiredMetaFields.map(field => (
+    field.charAt(0).toUpperCase() + field.slice(1)
+  )).join(', ')",Is there a way to get the `label` instead of the `name` here by any chance?,2021-11-01 18:30:32
550,"@@ -0,0 +1,3 @@
+export const isVue2 = (...args) => {","I think we should ignore the warning in this case: This file is intended to be a bag of semi-related functions, it just happens to only contain one function right now.

```suggestion
// eslint-disable-next-line import/prefer-default-export
export const isVue2 = (...args) => {
```",2021-03-23 15:00:21
243,"@@ -0,0 +1,3 @@
+flask
+werkzeug
+flask-cors","probably an extraneous file? python-xhr and php-xhr both have a requirements.txt, should only be python i think?",2019-04-17 14:23:08
474,"@@ -0,0 +1,30 @@
+---
+title: ""Companion 2.0 is here""
+date: 2020-08-20
+author: ife
+published: false
+---
+
+Companion 2.0 is here! 🎉 After maintaining and improving the 1.x series for over a year, we're releasing a Major version bump on the Companion package. Why you ask? Well, the drive on this release is mainly towards fixing some terminology inconsistencies and aligning with Node.js LTS to ease the maintenance burden.","After reading, as a reader, i'm left wondering what is to become of the v1 branch. Will it still be maintained and receive patches? For how long?",2020-08-21 09:53:26
43,"@@ -0,0 +1,31 @@
+const DashboardPlugin = require('../../plugins/Dashboard')
+
+/**
+ * A version of the Dashboard plugin that externalises the modal open state
+ * management, allowing the React component wrapper to open and close it at
+ * will.
+ */
+class ReactDashboardPlugin extends DashboardPlugin {
+  constructor (core, opts) {","I’m a little worried about doing this. Could we maybe add onRequestClose/hideModal callback into the Dashboard plugin itself? Otherwise its third-level of class nesting, which is not that bad, but starting to feel like a dangerous territory :)",2017-09-03 13:32:51
244,"@@ -0,0 +1,33 @@
+---
+title: ""Day 24""
+date: 2019-04-18
+author: tyler
+published: true
+image: ""https://uppy.io/images/blog/30daystoliftoff/day24.gif""
+series: 30 Days to Liftoff
+seriesSuffix: 'of 30'
+---
+
+Six days remain in our '30 Days to Liftoff' blog post challenge. There's not long left until our planned **Uppy 1.0 release on April 25** release so let's take a look at how close we are to reaching our goal! 
+",release repeated 2 times,2019-04-18 11:44:36
304,"@@ -0,0 +1,33 @@
+// Adapted from https://github.com/Flet/prettier-bytes/
+// Changing 1000 bytes to 1024, so we can keep uppercase KB vs kB","maybe add
```patch
+// ISC License (c) Dan Flettre https://github.com/Flet/prettier-bytes/blob/master/LICENSE
```",2019-07-15 13:55:57
721,"@@ -0,0 +1,33 @@
+FROM node:16.13.0-alpine as build
+
+WORKDIR /app
+
+COPY package.json .yarnrc.yml /app/
+COPY .yarn /app/.yarn
+COPY packages/@uppy/companion /app/packages/@uppy/companion
+
+RUN apk --update add  --virtual native-dep \
+  make gcc g++ python3 libgcc libstdc++ git && \
+  cd /app && corepack yarn workspaces focus @uppy/companion && \","Using a subshell so the next commands runs in the same initial directory (in case we add more in the future that cares about the cwd)
```suggestion
  (cd /app && corepack yarn workspaces focus @uppy/companion) && \
```",2021-12-09 15:44:57
555,"@@ -0,0 +1,33 @@
+{
+  ""name"": ""@uppy/drop-target"",
+  ""description"": ""Lets your users drag and drop and paste files on any of your existing DOM elements. Most likely document.body"",","```suggestion
  ""description"": ""Lets your users drag and drop files on a DOM element"",
```
shorter = better(?)

might be good to update all the descriptions to a common format, ""Uppy plugin for importing files from..."" ""Uppy plugin for receiving dropped files"" etc. but that's a separate issue :)",2021-03-31 11:52:31
556,"@@ -0,0 +1,33 @@
+{
+  ""name"": ""@uppy/drop-target"",
+  ""description"": ""Lets your users drag and drop and paste files on any of your existing DOM elements. Most likely document.body"",
+  ""version"": ""0.1.0"",
+  ""license"": ""MIT"",
+  ""main"": ""lib/index.js"",
+  ""types"": ""types/index.d.ts"",
+  ""keywords"": [
+    ""file uploader"",
+    ""uppy"",
+    ""uppy-plugin"",
+    ""drag-drop"",
+    ""drag"",
+    ""drop"",
+    ""dropzone"",
+    ""upload"",
+    ""paste""","
```suggestion
    ""upload""
```",2021-03-31 11:52:40
94,"@@ -0,0 +1,333 @@
+import ThumbnailGeneratorPlugin from './index'
+import Plugin from '../../core/Plugin'
+
+const delay = duration => new Promise(resolve => setTimeout(resolve, duration))
+
+describe('uploader/ThumbnailGeneratorPlugin', () => {
+  it('should initialise successfully', () => {
+    const redux = new ThumbnailGeneratorPlugin(null, {})
+    expect(redux instanceof Plugin).toEqual(true)",minor copy-paste nit: description says `uploader/ThumbnailGeneratorPlugin` and this var is named `redux`,2017-12-20 18:02:53
819,"@@ -0,0 +1,34 @@
+/* eslint-disable react/react-in-jsx-scope */
+import Uppy from '@uppy/core'
+/* eslint-disable-next-line no-unused-vars */
+import React, { useState } from 'react'
+import { Dashboard, DashboardModal, DragDrop } from '@uppy/react'
+import ThumbnailGenerator from '@uppy/thumbnail-generator'
+
+import '@uppy/core/dist/style.css'
+import '@uppy/dashboard/dist/style.css'
+import '@uppy/drag-drop/dist/style.css'
+
+export default App
+
+function App () {","I find hoisting much harder to read, I don't think we need it here.
```suggestion
export default function App () {
```",2022-05-04 13:12:57
720,"@@ -0,0 +1,34 @@
+FROM node:16.13.0-alpine as build
+
+WORKDIR /app
+
+COPY package.json .yarnrc.yml /app/
+COPY .yarn /app/.yarn
+COPY packages/@uppy/companion /app/packages/@uppy/companion
+
+RUN apk --update add  --virtual native-dep \
+  make gcc g++ python3 libgcc libstdc++ git && \
+  cd /app && corepack yarn plugin import workspace-tools && \","The `workspace-tools` plugin should be already in `/app/.yarn`, can we remove this instruction?",2021-12-09 14:35:47
810,"@@ -0,0 +1,34 @@
+const enc = new TextEncoder('utf-8')
+async function sign (secret, body) {
+  const algorithm = { name: 'HMAC', hash: 'SHA-384' }
+
+  const key = await crypto.subtle.importKey('raw', enc.encode(secret), algorithm, false, ['sign', 'verify'])","[`Crypto.subtle`](https://developer.mozilla.org/en-US/docs/Web/API/Crypto/subtle) is only available on `https` connections, we use `http` in tests.",2022-04-22 20:31:38
227,"@@ -0,0 +1,35 @@
+'use strict'
+/**
+ * This module serves as an Async wrapper for LocalStorage
+ */
+module.exports.setItem = (key, value) => {
+  return new Promise((resolve, reject) => {
+    try {
+      localStorage.setItem(key, value)
+      resolve()
+    } catch (error) {
+      reject(error)
+    }","a minor thing, but the Promise constructor already catches errors, so you can omit the try/catch and the behaviour is the same:

```js
return new Promise((resolve) => {
  localStorage.setItem(key, value)
  resolve()
})
```",2019-03-25 10:31:09
238,"@@ -0,0 +1,35 @@
+<?php
+ini_set('display_errors', 1);",No consistent indentation in this file,2019-04-09 11:32:22
239,"@@ -0,0 +1,35 @@
+<?php
+ini_set('display_errors', 1);
+ini_set('display_startup_errors', 1);
+error_reporting(E_ALL);
+
+if($_SERVER[""REQUEST_METHOD""] == ""OPTIONS"")",Please use triple equality,2019-04-09 11:32:35
240,"@@ -0,0 +1,35 @@
+<?php
+ini_set('display_errors', 1);
+ini_set('display_startup_errors', 1);
+error_reporting(E_ALL);
+
+if($_SERVER[""REQUEST_METHOD""] == ""OPTIONS"")
+{
+    if (isset($_SERVER[""HTTP_ACCESS_CONTROL_REQUEST_METHOD""]))",please wrap if contents in `{}`,2019-04-09 11:32:47
530,"@@ -0,0 +1,36 @@
+name: CDN
+on:
+  push:
+    branches: master
+
+jobs:
+  release:
+    if: ${{startsWith(github.event.head_commit.message, 'Release')}}","Shouldn't we use tags for this, assuming we tag our releases. Just a suggestion, I think you know better. :thinking: ",2020-11-26 09:05:01
531,"@@ -0,0 +1,36 @@
+name: CDN
+on:
+  push:
+    branches: master
+
+jobs:
+  release:
+    if: ${{startsWith(github.event.head_commit.message, 'Release')}}
+    name: Publish releases
+    runs-on: ubuntu-latest
+    steps:
+      - name: Checkout sources
+        uses: actions/checkout@v2
+      - name: Install Node.js
+        uses: actions/setup-node@v1",Why not use `actions/setup-node@v2-beta` ? :sweat_smile: ,2020-11-26 09:05:46
45,"@@ -0,0 +1,38 @@
+import Core from '../../src/core/index.js'
+import russian from '../../src/locales/ru_RU.js'","should we be using `import` here if everywhere else we are using `require`? IT probably works because Babel, and maybe its fine, but thought I’d bring it up.",2017-09-08 21:22:34
46,"@@ -0,0 +1,38 @@
+import Core from '../../src/core/index.js'
+import russian from '../../src/locales/ru_RU.js'
+import english from '../../src/locales/en_US.js'
+","Locale files are probably outdates, because locale settings are per-plugin now. Not a major issue, but just to keep this in mind :)",2017-09-08 21:23:53
770,"@@ -0,0 +1,4 @@
+<svg xmlns=""http://www.w3.org/2000/svg"" width=""1200"" height=""800"">
+<rect width=""1200"" height=""800"" fill=""#005BBB""/>
+<rect width=""1200"" height=""400"" y=""400"" fill=""#FFD500""/>
+</svg>","```suggestion
</svg>

```",2022-03-01 09:50:06
451,"@@ -0,0 +1,40 @@
+# @uppy/dropbox",we might need to change all the occurrences of `dropbox` here to `zoom`,2020-07-07 14:51:41
311,"@@ -0,0 +1,40 @@
+.uploaded-files{","```suggestion
.uploaded-files {
```",2019-08-07 08:42:02
712,"@@ -0,0 +1,403 @@
+const { h } = require('preact')
+const { UIPlugin } = require('@uppy/core')
+const getFileTypeExtension = require('@uppy/utils/lib/getFileTypeExtension')
+const supportsMediaRecorder = require('./supportsMediaRecorder')
+const RecordingScreen = require('./RecordingScreen')
+const PermissionsScreen = require('./PermissionsScreen')
+const locale = require('./locale.js')
+const packageJsonVersion = require('../package.json').version","I don't think we can do that, otherwise the string is not replaced by the actual version at build time. See https://github.com/andrewimm/babel-plugin-inline-package-json#readme.",2021-11-26 14:18:44
695,"@@ -0,0 +1,41 @@
+import fs from 'node:fs'
+import glob from 'glob'
+
+export function readFile (filePath) {
+  return new Promise((resolve, reject) => {
+    fs.readFile(filePath, 'utf-8', (error, data) => {
+      if (error) reject(error)
+      else resolve(data)
+    })
+  })
+}
+
+export function writeFile (filePath, data) {
+  return new Promise((resolve, reject) => {
+    fs.writeFile(filePath, data, (error) => {
+      if (error) reject(error)
+      else resolve(data)
+    })
+  })
+}","```suggestion
export { readFile, writeFile } from 'node:fs/promises'
```",2021-10-29 12:05:01
903,"@@ -0,0 +1,42 @@
+// NOTE: we have to use different files to upload per test
+// because we are uploading to https://tusd.tusdemo.net,
+// constantly uploading the same images gives a different cached result (or something).",This comment is not relevant here,2022-08-10 12:51:04
869,"@@ -0,0 +1,42 @@
+import { describe, expect, it } from '@jest/globals'
+import resizeObserverPolyfill from 'resize-observer-polyfill'
+import Core from '@uppy/core'
+import Dashboard from '@uppy/dashboard'
+import RemoteSources from '.'","```suggestion
import RemoteSources from './index.js'
```",2022-06-07 14:59:15
525,"@@ -0,0 +1,44 @@
+import Vue from 'vue'
+import type { Uppy, Plugin } from '@uppy/core'
+
+declare module '@uppy/vue' {",Is this file still necessary? It looks like these exports are now declared by individual typescript files instead and reexported from `index.d.ts`?,2020-11-19 13:15:11
665,"@@ -0,0 +1,443 @@
+const classNames = require('classnames')
+const throttle = require('lodash.throttle')
+const prettierBytes = require('@transloadit/prettier-bytes')
+const prettyETA = require('@uppy/utils/lib/prettyETA')
+const { h } = require('preact')
+
+const statusBarStates = require('./StatusBarStates')
+
+const renderDot = () => ' \u00B7 '","```suggestion
const DOT = `\u00B7`
const renderDot = () => ` ${DOT} `
```

But why is it a function?

```suggestion
const DOT = `\u00B7`
const SPACED_DOT = ` ${DOT} `
```",2021-09-14 16:00:09
856,"@@ -0,0 +1,47 @@
+{
+  ""name"": ""@uppy/remote-sources"",
+  ""description"": ""Uppy plugin that includes all remote sources that Uppy+Companion offer, like Instagram, Google Drive, Dropox, Box, Unsplash, Url etc"",
+  ""version"": ""0.1.0"",
+  ""license"": ""MIT"",
+  ""main"": ""lib/index.js"",
+  ""types"": ""types/index.d.ts"",","```suggestion
  ""types"": ""types/index.d.ts"",
  ""type"": ""module"",
```",2022-05-30 09:43:12
137,"@@ -0,0 +1,5 @@
+const ProviderView = require('./ProviderView')
+
+module.exports = {
+  ProviderView
+}","Seems like `src/views` also conflicts a bit with splitting into multiple packages? I was thinking we were going to do `provider-views` package for the ProviderView and `uppy-server-connect` (draft name) for `RequestClient`?

We can look at Babel’s package folder structure: https://github.com/babel/babel/tree/master/packages",2018-03-28 00:34:32
815,"@@ -0,0 +1,5 @@
+import type { BasePlugin } from '@uppy/core'
+
+declare class RemoteSources extends BasePlugin {}",This is missing the public methods,2022-05-02 08:11:09
449,"@@ -0,0 +1,50 @@
+const qs = require('qs')
+
+const MIMETYPES = {
+  MP4: 'video/mp4',
+  M4A: 'audio/mp4',
+  CHAT: 'text/plain',
+  TRANSCRIPT: 'text/plain', // note: waiting confirmation, https://devforum.zoom.us/t/retrieve-all-past-zoom-cloud-recordings/22487/5?u=mokutsu
+  CC: 'text/vtt'
+}
+
+exports.getQuery = (results, dateRange) => {
+  const query = {
+    cursor: dateRange.monthsInPast","does this cursor require a specific format or does it only accept a plain string? It seemed like setting an object to cursor triggered excessive requests for infinite scroll, not sure why ",2020-07-02 21:45:11
979,"@@ -0,0 +1,53 @@
+require('dotenv').config()","```suggestion
require('dotenv').config({ path: path.join(__dirname, '..', '..', '.env') })
```",2022-10-12 01:20:52
980,"@@ -0,0 +1,58 @@
+<!doctype html>
+<html>
+  <head>
+    <meta charset=""utf-8"">
+    <title>Uppy</title>
+    <link href=""https://releases.transloadit.com/uppy/v3.0.1/uppy.min.css"" rel=""stylesheet"">
+  </head>
+  <body>
+    <div id=""drag-drop-area""></div>
+    <script type=""module"">
+      import { Uppy, Dashboard, AwsS3 } from ""https://releases.transloadit.com/uppy/v3.0.1/uppy.min.mjs""","```suggestion
      import { Uppy, Dashboard, AwsS3 } from ""https://releases.transloadit.com/uppy/v3.0.2/uppy.min.mjs""
```",2022-10-12 01:21:47
382,"@@ -0,0 +1,6 @@
+function isNetworkError (xhr) {
+  if (!xhr) return",Shouldn't this return false here?,2020-03-08 09:23:28
383,"@@ -0,0 +1,6 @@
+function isNetworkError (xhr) {
+  if (!xhr) return
+  return (xhr.readyState !== 0 && xhr.readyState !== 4) || xhr.status === 0",Did you test this condition and can confirm that it works as expected?,2020-03-08 09:23:48
713,"@@ -0,0 +1,6 @@
+module.exports = function supportsMediaRecorder () {
+  /* eslint-disable compat/compat */
+  return typeof MediaRecorder === 'function' && !!MediaRecorder.prototype
+    && typeof MediaRecorder.prototype.start === 'function'","```suggestion
  return typeof MediaRecorder === 'function' &&
    typeof MediaRecorder.prototype?.start === 'function'
```",2021-11-26 14:29:33
136,"@@ -0,0 +1,61 @@
+'use strict'
+
+require('whatwg-fetch')
+
+module.exports = class Request {",this name sounds like `new Request` would be initiating a single request. maybe something along the lines of `RequestClient` would be clearer?,2018-03-26 13:58:49
218,"@@ -0,0 +1,61 @@
+{",are we also saving `package-lock` files for each uppy package? 🤔 ,2019-01-27 06:42:08
480,"@@ -0,0 +1,62 @@
+<template>
+  <div ref=""container"" />
+</template>
+<script>
+import DashboardPlugin from '@uppy/dashboard'
+
+export default {
+  data () {
+    return {
+      plugin: null
+    }
+  },
+  props: {
+    uppy: {
+      required: true
+    },
+    props: {","I'm not sure what the idiomatic Vue way is … does it make sense to be able to do something like this?
```
<Dashboard
  hideCancelButton=""true""
/>
```
Or is the `props=""{ hideCancelButton: true }""` nesting quite normal?",2020-09-09 07:56:41
347,"@@ -0,0 +1,620 @@
+const ExifTags = {",Could you please include a link to https://github.com/exif-js/exif-js with a comment that the code was adapted from exif-js and license info? Like here: https://github.com/transloadit/uppy/blob/7873f057ca1301cb642a2521361ff219fb38170b/packages/%40uppy/utils/src/prettyBytes.js#L1-L3. ,2019-11-14 11:21:22
252,"@@ -0,0 +1,63 @@
+// ***
+// View type: list
+// ***
+
+.uppy-ProviderBrowser-viewType--list {
+  background-color: $white;
+
+  li.uppy-ProviderBrowserItem {
+    display: flex;
+    align-items: center;
+    padding: 7px 15px;
+    margin: 0;
+
+    // Checkbox
+    > .uppy-ProviderBrowserItem-fakeCheckbox {
+      margin-right: 15px;","Is deep-deep nesting like this necessary here? Ideally I’d lift a level or so, it becomes a little hard to follow and too specific, I think.",2019-05-16 09:19:02
755,"@@ -0,0 +1,63 @@
+const KB = 2 ** 10
+const MB = KB * KB
+
+function humanSizeToBytes (text) {
+  if (text.endsWith(' KB')) {
+    return Number(text.slice(0, -3)) * KB
+  }
+
+  if (text.endsWith(' MB')) {
+    return Number(text.slice(0, -3)) * MB
+  }
+
+  if (text.endsWith(' B')) {
+    return Number(text.slice(0, -2))
+  }
+
+  throw new Error('Not a human size string')","🥸
```suggestion
  throw new Error('Not what the computer thinks a human-readable size string look like: ' + text)
```",2022-02-10 20:59:06
208,"@@ -0,0 +1,66 @@
+exports.getUsername = (data) => {",Can we find the username somehow even if there are no files?,2018-10-22 09:43:24
597,"@@ -0,0 +1,67 @@
+{
+  ""name"": ""@uppy/angular"",
+  ""version"": ""0.0.0"",
+  ""module"": ""dist/angular/esm2015/public-api.js"",
+  ""types"": ""dist/angular/uppy-angular.d.ts"",
+  ""scripts"": {
+    ""ng"": ""ng"",
+    ""start"": ""start-storybook -p 6006"",
+    ""build"": ""ng build"",
+    ""release"": ""ng build --prod"",
+    ""test"": ""ng test"",
+    ""lint"": ""ng lint"",
+    ""e2e"": ""ng e2e"",
+    ""build-storybook"": ""build-storybook""
+  },
+  ""private"": true,",Remove this?,2021-06-29 11:49:22
572,"@@ -0,0 +1,7 @@
+# Migration Guide",We probably don't want a root level md file for this. Maybe best to create this in `website/src/_posts`,2021-06-17 15:03:53
707,"@@ -0,0 +1,7 @@
+# Security Policy
+
+## Reporting a Vulnerability
+
+General security issues and concerns are we welcome in the public Github issue tracker: https://github.com/transloadit/uppy/issues.
+
+In case of a high risk of the shared vulnerability being exploited, please report it to support@transloadit.com, and visit https://transloadit.com/security to read about Transloadit’s security policy, and how we generally handle these cases.","```suggestion
In case of a high risk of the shared vulnerability being exploited, please report it to support@transloadit.com instead, and visit https://transloadit.com/security/ to read about Transloadit’s security policy, and how we generally handle these cases.
```",2021-11-15 08:36:08
498,"@@ -0,0 +1,71 @@
+<template>
+  <div ref=""container"" />
+</template>",You might want to convert this into a render function so these files can just be plain `*.ts` instead of vue templates. ,2020-10-27 12:34:56
209,"@@ -0,0 +1,73 @@
+exports.getUsername = (data) => {
+  return data.data[0].user.username","Should only do this if `data.data[0]` actually exists, in case there are no files",2018-10-22 09:48:50
725,"@@ -0,0 +1,75 @@
+---
+title: ""Life after 2.0: new Audio plugin, Status Bar improvements"" ",Not sure yet about the title. I'll think about it,2021-12-14 11:34:46
726,"@@ -0,0 +1,75 @@
+---
+title: ""Life after 2.0: new Audio plugin, Status Bar improvements"" 
+date: 2021-12-15
+author: ",missing @mifi ,2021-12-14 11:34:57
548,"@@ -0,0 +1,76 @@
+# Uppy
+
+Hi, thanks for trying out the bundled version of the Uppy File Uploader. You can use
+this from a CDN (e.g. `<script src=""https://releases.transloadit.com/uppy/v1.26.1/uppy.min.js""></script>) or bundle it with your webapp. ","```suggestion
this from a CDN (e.g. `<script src=""https://releases.transloadit.com/uppy/v1.26.1/uppy.min.js""></script>`) or bundle it with your webapp. 
```
missing closing `",2021-03-17 14:50:23
677,"@@ -0,0 +1,79 @@
+diff --git a/cli.js b/cli.js",What is this file?,2021-10-13 14:28:32
874,"@@ -0,0 +1,8 @@
+# Vue 3 example
+
+To run the example, from the root directory of this repo, run the following commands:
+
+```sh
+corepack yarn install","```suggestion
cp .env.example .env
corepack yarn install
```",2022-06-27 14:04:45
222,"@@ -0,0 +1,80 @@
+const Transloadit = require('@uppy/transloadit')
+
+const remoteProviders = {
+  dropbox: require('@uppy/dropbox'),
+  'google-drive': require('@uppy/google-drive'),
+  instagram: require('@uppy/instagram'),
+  url: require('@uppy/url')
+}",Hard-coding providers for simpler usage? They are indeed lightweight now 🤔 And I guess that’s what “preset” is for.,2019-01-31 12:14:48
751,"@@ -0,0 +1,83 @@
+/* eslint-disable no-console, import/no-extraneous-dependencies */",I assume this script needs to be run for every new test to generate all the code/html needed for that test and that this generated code has to be checked into git. It would generate a lot of code that needs to be maintained in the future in case of changes. Could it be instead implemented as a function or module that is run for every test (kind of like a before hook) that will provide each test with the needed files on-the-fly?,2022-02-03 12:48:58
750,"@@ -0,0 +1,83 @@
+/* eslint-disable no-console, import/no-extraneous-dependencies */
+import prompts from 'prompts'
+import fs from 'node:fs/promises'
+import dedent from 'dedent'
+
+(async () => {",I thought esm supports root level await?,2022-02-03 12:46:09
125,"@@ -0,0 +1,84 @@
+const Plugin = require('../core/Plugin')
+
+module.exports = class DeletrFiles extends Plugin {",Small typo in the name here and in the `this.id` / `this.title` properties below :),2018-02-19 09:17:22
246,"@@ -0,0 +1,86 @@
+---
+type: docs
+order: 2
+title: ""Thumbnail Generator""
+module: ""@uppy/thumbnail-generator""
+permalink: docs/thumbnail-generator/
+category: 'Miscellaneous'
+---
+
+`@uppy/thumbnail-generator` generates proportional thumbnails (file previews) for images that are added to Uppy. It then creates a string with a local preview url (via `URL.createObjectURL(blob)`) and sets it to `file.preview`. `thumbnail:generated` event is also emitted, see below for details.","this feels like a bit much detail for the introductory paragraph, i'd move this sentence to just below the code sample and write something like

> Now, the `file.preview` property will contain a URL to the thumbnail.

i think the createObjectURL stuff probably doesn't have to be mentioned",2019-04-23 10:40:56
716,"@@ -0,0 +1,90 @@
+'use strict'
+
+function isFunction (v) {
+  return typeof v === 'function'
+}
+
+function result (v) {
+  return isFunction(v) ? v() : v
+}
+
+/* Audio Oscilloscope
+  https://github.com/miguelmota/audio-oscilloscope
+*/
+module.exports = class AudioOscilloscope {","are some methods private in here? If so, then we should make them private. ",2021-11-29 10:26:45
868,"@@ -0,0 +1,96 @@
+---
+type: docs
+order: 10
+title: ""Remote Sources""
+module: ""@uppy/remote-sources""
+permalink: docs/remote-sources/
+category: ""Miscellaneous""
+tagline: ""Uppy plugin that includes all remote sources that Uppy+Companion offer, like Instagram, Google Drive, Dropox, Box, Unsplash, Url etc""
+---
+
+Remote Sources plugin makes it convinient to add all the available remote sources — Instagram, Google Drive, Unsplash, Url, etc — to Uppy Dashboard in one convinient package.","```suggestion
@uppy/remote-sources is a preset plugin to add all the available remote sources, such Instagram, Google Drive, Dropbox, and others to Uppy Dashboard in one package.
```",2022-06-07 10:20:21
575,"@@ -0,0 +1,98 @@
+/**
+ * Core plugin logic that all plugins share.
+ *
+ * BasePlugin does not contain DOM rendering so it can be used for plugins
+ * without an user interface.
+ *
+ * See `Plugin` for the extended version with Preact rendering for interfaces.
+ *
+ * @param {object} main Uppy core object
+ * @param {object} object with plugin options
+ * @returns {Array|string} files or success/fail message","the params stuff is not really relevant here. i guess it's copy-paste from the existing plugin class, where it's also nonsensical 😅 
```suggestion
 * BasePlugin does not contain DOM rendering so it can be used for plugins
 * without a user interface.
 *
 * See `Plugin` for the extended version with Preact rendering for interfaces.
```",2021-06-18 10:45:59
791,"@@ -1 +1,2 @@
-module.exports = require('./bundle-legacy.js')
+// eslint-disable-next-line no-multi-assign
+globalThis.Robodog = module.exports = require('./bundle-legacy.js')",Do we have to use legacy / heavier bundle?,2022-03-21 22:04:03
917,"@@ -1,10 +1,10 @@
 // This file is required by karma.conf.js and loads recursively all the .spec and framework files
 
-import 'zone.js/dist/zone-testing'
+import 'zone.js/testing'
 import { getTestBed } from '@angular/core/testing'
 import {
   BrowserDynamicTestingModule,
-  platformBrowserDynamicTesting,
+  platformBrowserDynamicTesting","```suggestion
  platformBrowserDynamicTesting,
```",2022-08-17 09:57:03
95,"@@ -1,10 +1,10 @@
 const Plugin = require('../../core/Plugin')
 const Translator = require('../../core/Translator')
 const dragDrop = require('drag-drop')
-const Dashboard = require('./Dashboard')
+const DashboardUI = require('./Dashboard')",good call swapping these names! makes more sense this way i think,2017-12-20 18:14:28
576,"@@ -1,10 +1,10 @@
-const Plugin = require('./Plugin')
+const UIPlugin = require('./UIPlugin')
 const Core = require('./index')
 
-describe('Plugin', () => {
+describe('UIPlugin', () => {
   describe('getPluginState', () => {
     it('returns an empty object if no state is available', () => {
-      class Example extends Plugin {}
+      class Example extends UIPlugin {}","Some/most of these tests could run with the BasePlugin instead, but should be fine either way",2021-06-18 10:47:09
10,"@@ -1,10 +1,10 @@
-import html from '../../core/html'
+import html from '../core/html'
 
 export default (props) => {
   const demoLink = props.demo ? html`<a onclick=${props.handleDemoAuth}>Proceed with Demo Account</a>` : null
   return html`
-    <div class=""UppyGoogleDrive-authenticate"">
-      <h1>You need to authenticate with Google before selecting files.</h1>
+    <div class=""UppyPlugin-authenticate"">","I’m thinking what would be the best name for this generic provider view, as you’ve correctly described it in you folder naming. Maybe `UppyAcquire`, `UppyView` or `UppyProvider`? The reason I don’t like `UppyPlugin` is Plugin can be a different thing, like Tus is a plugin that doesn’t even have a view, and ProgressBar is a plugin that does different thing, while this is a generic view for providers.",2016-12-20 05:30:25
12,"@@ -1,10 +1,10 @@
-import html from '../../core/html'
+import html from '../core/html'
 
 export default (props) => {
   const demoLink = props.demo ? html`<a onclick=${props.handleDemoAuth}>Proceed with Demo Account</a>` : null
   return html`
-    <div class=""UppyGoogleDrive-authenticate"">
-      <h1>You need to authenticate with Google before selecting files.</h1>
+    <div class=""UppyPlugin-authenticate"">
+      <h1>You need to authenticate with Dropbox before selecting files.</h1>","We could put ${plugin.id} here, I guess?",2016-12-20 14:56:36
685,"@@ -1,10 +1,21 @@
-const fs = require('fs')
-const path = require('path')
 const tus = require('tus-js-client')
 const uuid = require('uuid')
 const isObject = require('isobject')
+// @ts-ignore",Is this actually necessary? Can you add a comment explaining why maybe?,2021-10-28 08:17:25
894,"@@ -1,11 +1,24 @@
 # @uppy/core
 
+## 3.0.0-beta.2
+
+Released: 2022-07-27
+Included in: Uppy v3.0.0-beta.3
+
+- @uppy/aws-s3,@uppy/core,@uppy/dashboard,@uppy/store-redux,@uppy/xhr-upload: upgrade `nanoid` to v4 (Antoine du Hamel / #3904)
+
 ## 3.0.0-beta.1
 
 Released: 2022-06-09
 Included in: Uppy v3.0.0-beta.1
 
 - @uppy/core,@uppy/dashboard: fix types for some events (Antoine du Hamel / #3812)
+## 2.3.2","```suggestion

## 2.3.2
```",2022-07-27 16:50:13
42,"@@ -1,12 +1,27 @@
 const html = require('yo-yo')
 const getFileTypeIcon = require('./getFileTypeIcon')
+const onload = require('on-load')
 const { checkIcon } = require('./icons')
 
+let file
+const meta = {}","Hmm, wouldn't this merge in edited metadata from previously edited files? If I change `a.png`'s ""license"" to ""public domain"" and then change `b.png`s ""caption"" to ""hello world"", `meta.license` would still be set to ""public domain""",2017-09-01 08:49:40
609,"@@ -1,14 +1,16 @@
 const fs = require('fs')",How about `const { promises: fs } = require('fs')` and then replacing `fs.promises.` with `fs.`?,2021-07-14 10:40:38
1,"@@ -1,15 +0,0 @@
-# transloadit-js-client","Would be cool if the project had _some_ kind of readme still. I'm not against keeping the design goals where everyone can see them.
",2015-11-17 09:08:56
769,"@@ -1,16 +1,18 @@
 {
-  ""extends"": ""../projects/angular/tsconfig.lib.json"",
+  ""extends"": ""../false"",","```suggestion
  ""extends"": ""../projects/uppy/angular/tsconfig.lib.json"",
```",2022-02-25 20:39:00
493,"@@ -1,169 +0,0 @@
-const Provider = require('../Provider')",this is the legacy instagram module which is no longer used,2020-10-19 07:40:48
900,"@@ -1,18 +1,23 @@
 const fs = require('node:fs')
 const path = require('node:path')
-const companion = require('../../packages/@uppy/companion')
+const companion = require('@uppy/companion')","Forgot to add the require

```suggestion
const crypto = require('node:crypto')
const companion = require('@uppy/companion')
```",2022-08-03 13:57:50
647,"@@ -1,18 +1,24 @@
 ---
-title: ""Uppy 2.0.0: New major release""
-date: 2021-06-30 # TODO
-author: aduh95
-image: null # TODO
-published: false
+title: ""Uppy 2.0.0: smaller, faster, more awesome. Preact X, stricter types, separate Base and UI Plugin""","```suggestion
title: ""Uppy 2.0.0: smaller, faster, more awesome. Preact X, stricter types, righting wrongs""
```",2021-08-25 18:18:21
583,"@@ -1,2 +1,13 @@
 import Box = require('../')
-// TODO implement
+import Uppy = require('@uppy/core')
+
+{
+ const uppy = Uppy()",can we already use `new Uppy()` in these? since that will be the only way in 2.0. i don't remember for sure if our current typings allow it.,2021-06-25 13:12:05
223,"@@ -1,20 +1,22 @@
 <%
 var categories = [
   // order: 1x
-  { path: 'docs/plugins/', name: 'Plugins', link: true },
+  { path: 'docs/robodog/', name: 'Robodog', link: true },","Robodog too high is the sidebar, maybe?",2019-01-31 13:29:40
0,"@@ -1,22 +0,0 @@
-The MIT License (MIT)","License can remain MIT
",2015-11-17 09:07:46
363,"@@ -1,23 +1,17 @@
-import Uppy = require('@uppy/core');
+import Uppy = require('@uppy/core')
 
 declare module DragDrop {
   interface DragDropOptions extends Uppy.PluginOptions {
-    inputName: string;
-    allowMultipleFiles: boolean;
-    width: string;
-    height: string;
-    note: string;
+    replaceTargetContent?: boolean
+    target?: Uppy.PluginTarget
+    inputName?: string
+    allowMultipleFiles?: boolean
+    width?: string
+    height?: string
+    note?: string",should this also include `locale`?,2019-12-09 13:08:13
366,"@@ -1,24 +1,16 @@
-import Uppy = require('@uppy/core');
+import Uppy = require('@uppy/core')
 
 declare module Tus {
   export interface TusOptions extends Uppy.PluginOptions {",should we also extend type options from the `tus-js-client`? 🤔If it's available in its type declarations i.e,2019-12-09 13:55:37
365,"@@ -1,26 +1,18 @@
-import Uppy = require('@uppy/core');
+import Uppy = require('@uppy/core')
 
 declare module Informer {
   interface Color {
-    bg: string | number;
-    text: string | number;
+    bg: string | number
+    text: string | number
   }
 
   interface InformerOptions extends Uppy.PluginOptions {
-    typeColors: {
-      [type: string]: Color
-    };
+    replaceTargetContent?: boolean
+    target?: Uppy.PluginTarget
+    typeColors?: { [type: string]: Color }",I don't see this property used anywhere in the plugin 🤔 ,2019-12-09 13:45:57
661,"@@ -1,26 +1,81 @@
 const { h } = require('preact')
 
+function GoogleIcon () {",Doesn't Google host the SVG themselves? It might be safer to get it from their server if they ever update the icon – and the user as to connect to it anyway in order to be authenticated.,2021-09-08 11:04:43
394,"@@ -1,3 +1,17 @@
+/**
+ * Array.prototype.findIndex ponyfill for old browsers.",*polyfill?,2020-04-02 14:53:15
465,"@@ -1,3 +1,4 @@
+require('whatwg-fetch')","hey @goto-bus-stop I'm not sure about this part, but does it look good to you?",2020-07-21 11:42:45
362,"@@ -1,32 +1,42 @@
-import Uppy = require('@uppy/core');
+import Uppy = require('@uppy/core')
+
+type MaybePromise<T> = T | Promise<T>
 
 declare module AwsS3Multipart {
   interface AwsS3Part {
-    PartNumber?: number;
-    Size?: number;
-    ETag?: string;
+    PartNumber?: number
+    Size?: number","looking through the code, it seems `Size` is never present in an `AwsS3Part` object 🤔",2019-12-04 09:46:25
767,"@@ -1,4 +1,15 @@
 module.exports = {
-  stories: ['../projects/**/*.stories.ts'],
-  addons: ['@storybook/addon-actions', '@storybook/addon-links', '@storybook/addon-notes'],
-};
+  ""stories"": [
+    ""../stories/**/*.stories.mdx"",
+    ""../stories/**/*.stories.@(js|jsx|ts|tsx)""
+  ],
+  ""addons"": [
+    ""@storybook/addon-links"",
+    ""@storybook/addon-essentials"",
+    ""@storybook/addon-interactions""
+  ],
+  ""framework"": ""@storybook/angular"",
+  ""core"": {
+    ""builder"": ""webpack5""
+  }
+}","```suggestion
}

```",2022-02-25 20:14:10
740,"@@ -1,4 +1,22 @@
 const fetchWithNetworkError = require('@uppy/utils/lib/fetchWithNetworkError')
+const NetworkError = require('@uppy/utils/lib/NetworkError')
+
+function fetchJSON (...args) {
+  return fetchWithNetworkError(...args).then(response => {
+    if (response.status === 429) {
+      // If the server asks the client to rate limit, reschedule the request 5s later.
+      return new Promise((resolve, reject) => {
+        setTimeout(() => fetchJSON(...args).then(resolve, reject), 5_000)",not too happy with multiple rate-limit-like implementations laying around. Comes down to tribal knowledge where we are rate limiting and with what implementation. Can we reuse logic?,2022-01-11 14:46:23
761,"@@ -1,4 +1,4 @@
-# Clone this file to `.env.local` and edit the clone. Don't put secrets in the `.env` files.
+# Clone this file to `.env` and edit the clone. Don't put secrets in the `.env` files.","```suggestion
# Clone this file to `.env` and edit the clone.
```",2022-02-17 14:30:52
753,"@@ -1,4 +1,4 @@
-# Rename this file to `.env`
+# Rename this file to `.env.local`","```suggestion
# Clone this file to `.env.local` and edit the clone. Don't put secrets in the `.env` files.
```",2022-02-10 11:36:56
499,"@@ -1,4 +1,4 @@
-const { h, Component } = require('preact')
+const { Component } = require('preact')","Just FYI, I had to remove this unused import because Travis/`npm run lint` were complaining.",2020-10-29 13:04:48
833,"@@ -1,4 +1,5 @@
 {
+  ""projectId"": ""mcijsj"",",Does this mean something or is useful in any way?,2022-05-19 16:18:56
638,"@@ -1,4 +1,6 @@
 const { URL } = require('url')
+const serialize = require('serialize-javascript')
+
 const tokenService = require('../helpers/jwt')
 const { hasMatch, sanitizeHtml } = require('../helpers/utils')",Is `sanitizeHtml` still used?,2021-08-13 10:10:29
84,"@@ -1,4 +1,8 @@
-const html = require('yo-yo')
+const { h } = require('preact')
+const hyperx = require('hyperx')
+const html = hyperx(h)
+
+let inputEl",this might interfere when we have multiple dashboards. maybe ActionBrowseTagline needs to be a Component so we can store the reference to the element on it.,2017-12-13 21:36:19
88,"@@ -1,45 +1,49 @@
-const html = require('yo-yo')
+const { h, Component } = require('preact')
+const hyperx = require('hyperx')
+const html = hyperx(h)
 const SnapshotButton = require('./SnapshotButton')
 const RecordButton = require('./RecordButton')
 
 function isModeAvailable (modes, mode) {
   return modes.indexOf(mode) !== -1
 }
 
-module.exports = (props) => {
-  const src = props.src || ''
-  let video
-
-  if (props.useTheFlash) {
-    video = props.getSWFHTML()",😱 i coulda sworn i removed that! thanks for cleaning up 🙏 ,2017-12-13 21:45:40
364,"@@ -1,48 +1,48 @@
 export interface RequestClientOptions {
-  companionUrl: string;
-  companionHeaders?: object;
+  companionUrl: string
+  companionHeaders?: object
   /**
    * Deprecated, use `companionHeaders` instead.
    */
-  serverHeaders?: object;
+  serverHeaders?: object
 }
 ","we should also add token Storage interface like so 

```typescript
export interface TokenStorage {
  setItem: (key: string, value: string) => Promise<any> // or <void> not sure
  getItem: (key: string) => Promise<string>
  removeItem: (key: string) => Promise<any> // or <void> not sure
}
```

it will be used in `packages/@uppy/dropbox/types/index.d.ts` and other providers",2019-12-09 13:26:28
410,"@@ -1,5 +1,19 @@
 const chalk = require('chalk')
 
+const valuesToMask = []
+/**
+ * Adds a list of strings that should be masked by the logger.
+ * This function can only be called once through out the life of the server.
+ * @param {Array} maskables a list of strings to be masked
+ */
+exports.addMaskables = (maskables) => {","If it can only be called once, perhaps a more appropriate name is something like `setMaskables`? `addX` sounds like you can add many `X`es by calling it many times",2020-04-22 08:01:10
547,"@@ -1,5 +1,4 @@
 #!/usr/bin/env node
-'use strict'","hmm, we actually should _add_ `'use strict'` everywhere 🤔 ",2021-03-10 08:18:10
337,"@@ -1,5 +1,5 @@
 ---
-title: ""List of Plugins""","I think we mostly use double quotes in YAML, actually, and single quotes around “category” everywhere are a mistake.",2019-10-09 12:36:29
908,"@@ -1,5 +1,5 @@
-const { inspect } = require('node:util')
-const robodog = require('@uppy/robodog')
+import robodog from 'uppy'
+import 'uppy/dist/uppy.min.css'","@Murderlon for the migration guide, we could link to the commit where we migrate this example out of Robodog, wdyt?",2022-08-15 11:44:50
354,"@@ -1,5 +1,6 @@
 const express = require('express')
 const qs = require('querystring')
+const URL = require('url').URL","the `""engines""` field in package.json says companion supports Node.js 6.0 and up, but the `URL` class was added in 6.13.0. I think we should drop support for Node 6 but until then, perhaps we could use the old `url.parse` and `url.format` APIs, or add a fallback to use the [`whatwg-url`](https://www.npmjs.com/package/whatwg-url) package?",2019-11-22 09:43:50
542,"@@ -1,5 +1,6 @@
 const tokenService = require('./helpers/jwt')
 const logger = require('./logger')
+const uniq = require('lodash/uniq')","`lodash` is not a dependency of Companion yet, it just happens to be available in the repository due to hoisted dependencies. it should be added to its package.json.",2021-02-08 11:58:02
933,"@@ -1,5 +1,7 @@
 // eslint-disable-next-line import/no-extraneous-dependencies
 import { defineConfig } from 'cypress'
+// eslint-disable-next-line import/no-extraneous-dependencies
+import terminalReport from 'cypress-terminal-report/src/installLogsPrinter.js'","```suggestion
import installLogsPrinter from 'cypress-terminal-report/src/installLogsPrinter.js'
```",2022-08-23 15:08:49
873,"@@ -1,5 +1,8 @@
 {
-  ""name"": ""@uppy-example/cdn-example"",
+  ""name"": ""@uppy-example/cdn"",
   ""version"": ""0.0.0"",
-  ""private"": true
+  ""private"": true,
+  ""scripts"": {
+    ""dev"": ""deno run --allow-net --allow-read https://deno.land/std/http/file_server.ts""","Deno, was this for testing? As I don’t think we require the deno binary to run the examples.",2022-06-13 04:08:52
85,"@@ -1,6 +1,10 @@
-const html = require('yo-yo')
 const ActionBrowseTagline = require('./ActionBrowseTagline')
 const { localIcon } = require('./icons')
+const { h } = require('preact')
+const hyperx = require('hyperx')
+const html = hyperx(h)
+
+let inputEl",same deal about the global state maybe interfering as in ActionBrowseTagline,2017-12-13 21:38:29
63,"@@ -1,6 +1,16 @@
 const { iconText, iconAudio, iconVideo, iconPDF } = require('./icons')
 
-module.exports = function getIconByMime (fileTypeGeneral, fileTypeSpecific) {
+module.exports = function getIconByMime (fileType) {
+  const defaultChoise = {",very minor but `Choise` → `Choice`,2017-10-26 09:14:18
24,"@@ -1,6 +1,5 @@
 const Uppy = require('uppy/lib/core')
 const Dashboard = require('uppy/lib/plugins/Dashboard')
-const StatusBar = require('uppy/lib/plugins/StatusBar')",The `use(Informer)` call should also be removed from this file,2017-06-16 12:02:48
963,"@@ -1,6 +1,6 @@
 ---
 title: ""Uppy 3.0: Future-proof, conveniently easy, stable as ever"" 
-date: 2022-09-01
+date: 2022-08-22","```suggestion
date: 2022-09-13
```",2022-09-13 10:42:09
659,"@@ -1,6 +1,6 @@
 /**
  * Little AbortController proxy module so we can swap out the implementation easily later.
  */
-exports.AbortController = AbortController
-exports.AbortSignal = AbortSignal
+exports.AbortController = typeof AbortController !== 'undefined' ? AbortController : undefined
+exports.AbortSignal = typeof AbortSignal !== 'undefined' ? AbortSignal : undefined","I think this would produce the same result while being less verbose.
```suggestion
exports.AbortController = globalThis.AbortController
exports.AbortSignal = globalThis.AbortSignal
```",2021-09-04 16:14:31
649,"@@ -1,6 +1,6 @@
 import { expectError, expectType } from 'tsd'
 import DefaultStore from '@uppy/store-default'
-import Uppy, { UIPlugin } from '..'
+import Uppy, { SuccessResponse, UIPlugin, UppyFile } from '..'
 import type { UploadedUppyFile, FailedUppyFile, PluginOptions } from '..'","nit: the types JS imports were separated before

```suggestion
import Uppy, { UIPlugin } from '..'
import type { UploadedUppyFile, FailedUppyFile, PluginOptions , SuccessResponse, UppyFile } from '..'
```",2021-08-30 07:56:58
172,"@@ -1,6 +1,6 @@
-\----		
-type: docs		
-order: 30	
+\----
+type: docs
+order: 99",prolly should get rid of this?,2018-07-05 13:31:25
232,"@@ -1,6 +1,7 @@
 'use strict'
 
 const RequestClient = require('./RequestClient')
+const tokenStorage = require('./token-storage')",Most of the other Uppy client file names use camel case `tokenStorage.js` (see eg. @uppy/utils),2019-03-25 13:00:55
866,"@@ -1,6 +1,7 @@
 import type { PluginOptions, UIPlugin, PluginTarget } from '@uppy/core'
 import type { RequestClientOptions } from '@uppy/companion-client'
 import UrlLocale from './generatedLocale'
+import type { IndexedObject } from '@uppy/core'","```suggestion
import type { PluginOptions, UIPlugin, PluginTarget, IndexedObject } from '@uppy/core'
import type { RequestClientOptions } from '@uppy/companion-client'
import UrlLocale from './generatedLocale'
```",2022-06-02 16:26:01
132,"@@ -1,6 +1,8 @@
 const Plugin = require('../core/Plugin')
 const { findDOMElement } = require('../core/Utils')
-const getFormData = require('get-form-data').default
+// Rollup uses get-form-data's ES modules build, and rollup-plugin-commonjs automatically resolves `.default`.
+// So, if we are being built using rollup, this require() won't have a `.default` property.
+const getFormData = require('get-form-data').default || require('get-form-data')
 ","Oh wow, that’s one complicated require :)",2018-03-12 17:07:54
920,"@@ -1,6 +1,8 @@
-const Uppy = require('@uppy/core')
-const Dashboard = require('@uppy/dashboard')
-const GoldenRetriever = require('@uppy/golden-retriever')
+import Uppy from '@uppy/core'
+import Dashboard from '@uppy/dashboard'
+import GoldenRetriever from '@uppy/golden-retriever'
+
+import '@uppy/dashboard/dist/style.css'","```suggestion
import '@uppy/core/dist/style.css'
import '@uppy/dashboard/dist/style.css'
```",2022-08-18 14:40:28
670,"@@ -1,6 +1,9 @@
-const Cropper = require('cropperjs')
+const CropperImport = require('cropperjs')
 const { h, Component } = require('preact')
 
+// eslint-disable-next-line no-underscore-dangle","```suggestion
// @TODO A silly hack that we can get rid of when moving to ESM.
// eslint-disable-next-line no-underscore-dangle
```",2021-09-23 07:41:05
625,"@@ -1,7 +1,7 @@
 /* global AggregateError */
 const Translator = require('@uppy/utils/lib/Translator')
 const ee = require('namespace-emitter')
-const cuid = require('cuid')
+const { nanoid: cuid } = require('nanoid')",Why not rename to `nanoid` altogether?,2021-07-29 09:47:40
220,"@@ -1,7 +1,7 @@
 <%
 var categories = [
   // order: 1x
-  { path: 'docs/transloadit-wrapper/', name: 'Transloadit Wrapper', link: true },
+  { path: 'docs/robodog/', name: 'Robodog', link: true },",:robot: :dog: :heart_eyes:  ,2019-01-28 16:40:35
906,"@@ -1,7 +1,7 @@
 const express = require('express')
 const bodyParser = require('body-parser')
 const session = require('express-session')
-const companion = require('../../../packages/@uppy/companion')
+const companion = require('../../../packages/@uppy/companion/src/companion')",Is this duplication the only way it can be required?,2022-08-14 16:33:56
910,"@@ -1,7 +1,7 @@
 const express = require('express')
 const bodyParser = require('body-parser')
 const session = require('express-session')
-const companion = require('../../../packages/@uppy/companion/src/companion')
+const companion = require('@uppy/companion/src/companion')","Now that you added it as a package, this should work again:

```suggestion
const companion = require('@uppy/companion')
```",2022-08-16 12:43:02
953,"@@ -1,7 +1,7 @@
 import * as Uppy from '..';
 
 (() => {
-  const uppy = new Uppy.Core({ autoProceed: false })
+  const uppy = new Uppy.Uppy({ autoProceed: false })","Should we keep `Uppy.Core`, among with `Uppy.Uppy` in the bundle? Could release it as a patch.",2022-09-03 09:57:02
757,"@@ -1,7 +1,7 @@
-const KB = 2 ** 10
-const MB = KB * KB
-
 function humanSizeToBytes (text) {
+  const KB = 2 ** 10",Should we use @transloadit/prettier-bytes for consistency?,2022-02-15 17:27:22
591,"@@ -1,8 +1,6 @@
 import Uppy = require('@uppy/core');
 
 declare module ScreenCapture {
-  // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties_of_shared_screen_tracks",similarly should we keep this reference to the mozilla docs?,2021-06-28 10:03:41
596,"@@ -1,8 +1,6 @@
 import Uppy = require('@uppy/core');
 
 declare module ScreenCapture {
-  // https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties_of_shared_screen_tracks
-  // TODO: use the global DisplayMediaStreamConstraints once typescript includes it by default","Is it defunct or something? If it's meant to happen in the future, we should keep the TODO IMHO.",2021-06-28 10:15:37
79,"@@ -1,8 +1,8 @@
-import Plugin from '../../src/plugins/Plugin.js'
+import Plugin from '../../src/core/Plugin.js'",maybe remove the .js from the import path like in the rest of the codebase?,2017-12-09 16:18:45
694,"@@ -1,9 +1,10 @@
+/* eslint-disable comma-dangle */
 const en_US = {}
 
 en_US.strings = {
   addBulkFilesFailed: {
     '0': 'Failed to add %{smart_count} file due to an internal error',
-    '1': 'Failed to add %{smart_count} files due to internal errors',
+    '1': 'Failed to add %{smart_count} files due to internal errors'",Can we make the script output trailing commas? ,2021-10-29 12:02:34
108,"@@ -1,9 +1,11 @@
-<!-- Basic Uppy styles. You can use a CDN: https://unpkg.com/uppy/dist/uppy.min.css -->
+<!-- Basic Uppy styles. You can use a Transloadit's CDN, Edgly: ",`a Transloadit` → `Transloadit` :),2018-01-29 08:53:41
109,"@@ -1,9 +1,11 @@
-<!-- Basic Uppy styles. You can use a CDN: https://unpkg.com/uppy/dist/uppy.min.css -->
+<!-- Basic Uppy styles. You can use a Transloadit's CDN, Edgly: 
+https://transloadit.edgly.net/releases/uppy/v0.22.0/dist/uppy.min.css -->
 <link rel=""stylesheet"" href=""/uppy/uppy.min.css"">
 
 <div class=""UppyDragDrop""></div>
 
-<!-- Load Uppy pre-built bundled version. You can use a CDN: https://unpkg.com/uppy -->
+<!-- Load Uppy pre-built bundled version. You can use a Transloadit's CDN, Edgly: ",same here 👆 ,2018-01-29 08:53:55
679,"@@ -1,9 +1,14 @@
 const schedule = require('node-schedule')
 const fs = require('fs')
 const path = require('path')
+const { promisify } = require('util')
+const request = require('request')
+
 const { FILE_NAME_PREFIX } = require('./Uploader')
 const logger = require('./logger')
 
+const sleep = promisify(setTimeout)","Should we try to use the built-in alternative when available?
```suggestion
let sleep
try {
 sleep = require('timers/promises').setTimeout
} catch {
  sleep = promisify(setTimeout)
}
```",2021-10-19 09:12:14
742,"@@ -1,9 +1,32 @@
 const { h } = require('preact')
 
 module.exports = (props) => {
+  const { searchTerm, i18n, search } = props
+
+  const handleKeyPress = (ev) => {
+    if (ev.keyCode === 13) {",what is keycode 13? perhaps put it in a intention revealing variable?,2022-01-20 09:05:09
590,"@@ -1,9 +1,8 @@
-const { h } = require('preact')
+const { h, Fragment } = require('preact')
 
-// TODO use Fragment when upgrading to preact X
 const Breadcrumb = (props) => {
   return (
-    <span>
+    <Fragment>",I believe this can be simplified even further by just using `<>` and `</>` instead of having to import Fragment,2021-06-28 10:01:54
916,"@@ -1,9 +1,9 @@
 // This file can be replaced during build by using the `fileReplacements` array.
-// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
+// `ng build` replaces `environment.ts` with `environment.prod.ts`.
 // The list of file replacements can be found in `angular.json`.
 
 export const environment = {
-  production: false,
+  production: false","```suggestion
  production: false,
```",2022-08-17 09:56:54
2,"@@ -1,9 +1,94 @@
----
-title: Dropbox
-type: examples
-order: 1
----
+<!DOCTYPE html>","Since this uses a layout, we already have `<html>` and page styling. You can rename the file to `dropbox.html` remove everything above `<h1>`, and starting/below `<body>`
",2015-12-05 10:18:57
730,"@@ -10,17 +10,17 @@ image: https://uppy.io/images/blog/2.1-2.3/audio-cover.jpg
 published: true
 ---
 
-Last Christmas we gave you [Uppy 1.24](https://uppy.io/blog/2020/12/1.24/), this year we’ll take it away (since it’s outdated by now) and give you brand new Uppy 2.3 🎁!
+Last Christmas, we gave you [Uppy 1.24](https://uppy.io/blog/2020/12/1.24/), but this very next year, we’ll take it away (since it’s outdated by now) and give you a brand-new Uppy 2.3 🎁!",This line doesn't pass the linter validation.,2021-12-28 17:13:51
193,"@@ -10,24 +51,36 @@ describe('File upload with Providers', () => {
     browser.reload()
   })
 
-  it('should upload a file completely with Google Drive', () => {
+  it('should upload a file completely with Google Drive', function () {",why are we not using arrow functions in this case?,2018-09-02 21:56:35
444,"@@ -10,28 +10,30 @@ module.exports = class MyCustomProvider extends Plugin {
     this.id = this.opts.id || 'MyCustomProvider'
     Provider.initPlugin(this, opts)
 
-    this.title = 'MyCustomProvider'
+    this.title = 'MyUnsplash'
     this.icon = () => (
-      <img src=""https://uppy.io/images/logos/uppy-dog-head-arrow.svg"" width=""23"" />
+      <img src=""https://unsplash.com/assets/core/logo-black-df2168ed0c378fa5506b1816e75eb379d06cfcd0af01e07a2eb813ae9b5d7405.svg"" width=""30"" />","Maybe we should store this file in this repo, in case the hash changes",2020-06-29 13:34:10
538,"@@ -10,54 +10,28 @@ category: ""React""
 
 When using Uppy's React components, an Uppy instance must be passed in to the `uppy={}` prop from the outside. This Uppy instance must be initialized before passing it to the desired component, and be cleaned up using `uppy.close()` when you are done with it.
 
-## Functional Components
+## Functionl Components","Shouldn't this be ""Functional Components""?",2020-12-16 12:26:15
539,"@@ -10,6 +10,10 @@ declare module StatusBar {
     showProgressDetails?: boolean
     hideUploadButton?: boolean
     hideAfterFinish?: boolean
+    hideRetryButton?: boolean,
+    hidePauseResumeButton?: boolean,
+    hideCancelButton?: boolean,
+    doneButtonHandler: Function | null,","As is this would require users to pass in `doneButtonHandler: null`; we do need a `?` type here. Instead of `Function`, with typescript you can also specify a function signature, so that users wont accidentally expect to receive any arguments:
```suggestion
    doneButtonHandler?: () => void,
```",2020-12-16 14:01:24
564,"@@ -10,6 +10,8 @@ declare module '@uppy/utils/lib/Translator' {
 
   class Translator {
     constructor (opts: Translator.Locale | Translator.Locale[])
+    translate (key: string, options: object): string
+    translateArray (key: string, options: object): Array<String>","@goto-bus-stop does it return `Array<String>`? They are JSX elements (so objects?) sometimes, right?",2021-05-25 15:37:57
470,"@@ -10,6 +11,11 @@ const h = React.createElement
  */
 
 class Dashboard extends React.Component {
+  constructor (props) {
+    super(props)
+    this.validProps = getHTMLProps(props)","This only gathers the props from the initial render, which can be an issue if the user changes the props over time. Is `getHTMLProps` fast enough to just do it on every render? (I think the answer is probably yes—we do a bunch of work in render paths in Uppy itself, so a bit of props filtering is unlikely to matter…)",2020-08-06 13:45:55
255,"@@ -10,7 +10,13 @@ script:
 - npm run build
 - npm run test
 - if [ ""${TRAVIS_PULL_REQUEST}"" = ""false"" ]; then npm run test:endtoend; fi
-#- npm run uploadcdn
+- |
+  if [ ""${TRAVIS_PULL_REQUEST}"" = ""false"" ] &&\
+     [[ ""${TRAVIS_COMMIT_MESSAGE}"" =~ ^Release* ]]; then",Still a little bit of shell but :),2019-05-22 14:19:13
828,"@@ -10,7 +10,7 @@ import '@uppy/dashboard/dist/style.css'
 const companionUrl = 'http://localhost:3020'
 const uppy = new Uppy()
   .use(Dashboard, { target: '#app', inline: true })
-  .use(Tus, { endpoint: 'https://tusd.tusdemo.net/files' })
+  .use(Tus, { endpoint: 'https://tusd.tusdemo.net/files', retryStatusCodes: [429, 401] })","I get that it's probably just a random value you picked to test that feature, but it makes no sense to do exponential backoff when receiving a 401 response code. 425 would be a much better value imo, we can also use 418 to make clear that we are just testing.",2022-05-12 10:10:22
766,"@@ -10,8 +10,8 @@ import { UppyAngularWrapper } from '../../utils/wrapper';
   changeDetection: ChangeDetectionStrategy.OnPush
 })
 export class DragDropComponent extends UppyAngularWrapper implements OnDestroy, OnChanges {
-  @Input() uppy: Uppy;
-  @Input() props: DragDropOptions;
+  @Input() uppy: Uppy = new Uppy","```suggestion
  @Input() uppy: Uppy = new Uppy;
```",2022-02-25 20:13:56
335,"@@ -100,8 +99,9 @@ class Uppy {
     }
 
     // Merge default options with the ones set by user
-    this.opts = Object.assign({}, defaultOptions, opts)
-    this.opts.restrictions = Object.assign({}, defaultOptions.restrictions, this.opts.restrictions)
+    this.opts = {}
+    this.setOptions(defaultOptions)
+    this.setOptions(opts)","I think we can safely do this here:
```js
this.opts = defaultOptions
this.setOptions(opts)
```
since `defaultOptions` is a local object that is created inside the constructor already.
Then `setOptions()` will only do the locale init once. Right now we're creating a Translator instance and then immediately throwing it away and creating a second one.",2019-09-30 10:06:08
432,"@@ -101,6 +126,13 @@ module.exports = class Client {
   cancelAssembly (assembly) {
     const url = assembly.assembly_ssl_url
     return fetch(url, { method: 'delete', headers: this._headers })","maybe it's worth wrapping the `fetch` module into a reusable module that handles the `NetworkError` internally? This pattern is now spread across the codebase, and the need to change this snippet at one place will most likely imply the need to change it everywhere else.",2020-05-29 12:21:57
756,"@@ -101,7 +101,8 @@ module.exports = class View {
     }
 
     if (file.author) {
-      tagFile.meta.author = file.author
+      if (file.author.name) tagFile.meta.authorName = file.author.name","Shouldn't we do something like this?
```suggestion
      if (file.author.name != null) tagFile.meta.authorName = String(file.author.name)
```",2022-02-14 16:56:08
569,"@@ -102,13 +88,32 @@ class VirtualList extends Component {
     this.resize()
   }
 
-  componentDidMount () {
+  componentWillUnmount () {
+    window.removeEventListener('resize', this.handleResize)
+  }
+
+  handleScroll = () => {
+    const { sync } = this.props
+
+    this.setState({ offset: this.base.scrollTop })
+
+    if (sync) {
+      this.forceUpdate()
+    }","I don't think this would still work, as `setState` is now async. This would force the render of the previous state I think. Instead, we should be using `shouldComponentUpdate()` – or maybe drop this option altogether.",2021-06-13 09:18:16
197,"@@ -102,6 +102,49 @@ strings: {
 }
 ```
 
+### `getUploadHeaders()`
+
+Set the default headers for the request to be sent to the server.
+A common use case is adding the `Authorization` header with your JWT token.",We should clarify that this is only used if you do not override `getUploadParameters()`,2018-09-20 09:22:06
211,"@@ -1020,7 +1020,7 @@ describe('src/Core', () => {
       })
 
       core._calculateTotalProgress()
-      expect(core.getState().totalProgress).toEqual(65)
+      expect(core.getState().totalProgress).toEqual(66)
     })",65 vs 66? 🤔,2018-11-19 14:45:11
152,"@@ -1028,6 +1060,7 @@
 
 .uppy-DashboardFileCard[aria-hidden=true] {
   transform: translateY(-105%);
+  transform: translate3d(0, -105%, 0);","The `translateY` is commented out in some places and kept here, is it intended as a fallback or should they be removed everywhere?",2018-05-29 09:21:44
190,"@@ -103,14 +116,49 @@ module.exports = class GoogleDrive extends Plugin {
   }
 
   getItemModifiedDate (item) {
-    return item.modifiedByMeDate
+    return item.modifiedTime
   }
 
   getItemThumbnailUrl (item) {
     return `${this.opts.serverUrl}/${this.GoogleDrive.id}/thumbnail/${this.getItemRequestPath(item)}`
   }
 
   render (state) {
+    // If the user has access to any Team Drives, handle them as needed.
+    if (state.plugins[this.id].hasTeamDrives) {","You can do `this.getPluginState()` instead of accessing `state.plugins[this.id]`, is a bit clearer I think :)",2018-08-20 15:29:23
513,"@@ -103,6 +104,14 @@ function uppySetOptions () {
     window.uppy.removePlugin(dropboxInstance)
   }
 
+  const boxInstance = window.uppy.getPlugin('Box')
+  if (opts.Box && !boxInstance) {
+    window.uppy.use(Box, { target: Dashboard, companionUrl: COMPANION })
+  }
+  if (!opts.Box && boxInstance) {
+    window.uppy.removePlugin(boxInstance)
+  }
+","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:14:13
199,"@@ -1031,6 +1037,11 @@ class Uppy {
    * @return {string} ID of this upload.
    */
   _createUpload (fileIDs) {
+    const { allowNewUpload, currentUploads } = this.getState()
+    if (!allowNewUpload) {
+      throw new Error('Cannot create a new upload: already uploading.')
+    }","Seems like a “hard” error, will this be shown in the UI?",2018-09-20 17:38:12
594,"@@ -1032,8 +1032,6 @@ class Uppy {
         bytesUploaded: data.bytesUploaded,
         bytesTotal: data.bytesTotal,
         percentage: canHavePercentage
-          // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?
-          // we get more accurate calculations if we don't round this at all.
           ? Math.round((data.bytesUploaded / data.bytesTotal) * 100)","I think the idea is when flooring, you won't get to `100%` until the upload is actually done. Currently, you get there as soon a 99.5% of the bytes have been sent.",2021-06-28 10:11:13
124,"@@ -104,13 +104,12 @@ module.exports = class ThumbnailGenerator extends Plugin {
 
     image = this.protect(image)
 
-    var steps = Math.ceil(Math.log2(image.width / targetWidth))
+    var steps = Math.ceil(Math.abs(Math.log2(image.width / targetWidth)))","I'm not sure if `Math.abs` is the best way to do it, for very small images the Math.abs call might return a positive number > 1 which would cause the step scaling to first size it up to N times the target size and then resize it back down. Another way could be to check if `steps < 1` and then set it to 1?",2018-02-19 08:44:48
864,"@@ -104,7 +104,7 @@ export default class Url extends UIPlugin {
       })
   }
 
-  async addFile (protocollessUrl) {
+  async addFile (protocollessUrl, optionalMeta = undefined) {","`undefined` is already the default

```suggestion
  async addFile (protocollessUrl, optionalMeta) {
```",2022-06-02 15:28:33
861,"@@ -104,7 +105,7 @@ export default class Url extends UIPlugin {
       })
   }
 
-  async addFile (protocollessUrl) {
+  async addFile (protocollessUrl, optionalMeta = undefined) {","If we are changing the method signature, we need to update the TS definition file: https://github.com/transloadit/uppy/blob/472766e48b482279c2cc5da2b17a0f4f7efceb70/packages/@uppy/url/types/index.d.ts#L12",2022-05-31 16:59:37
273,"@@ -105,6 +105,10 @@ module.exports = class DragDrop extends Plugin {
         // Nothing, restriction errors handled in Core
       }
     })
+
+    // ___Why not use value="""" on <input/> instead?
+    //    Because if we use that method of clearing the input, Chrome will not trigger onChange={} if we drop the same file twice (Issue #768).
+    event.target.value = null","We pass `ev` to the callback, but `event` works anyway. What sort of sorcery is this? 🙀 Been trying to find documentation for a while, nothing so far.",2019-05-30 14:31:37
896,"@@ -105,6 +133,58 @@ Released: 2022-05-30
 - @uppy/companion: remove support for EOL versions of Node.js (Antoine du Hamel / #3784)
 - @uppy/react: refactor to ESM (Antoine du Hamel / #3780)
 - @uppy/transloadit: remove IE 10 hack (Antoine du Hamel / #3777)
+## 2.13.1","```suggestion


## 2.13.1
```",2022-07-27 16:52:20
425,"@@ -105,7 +105,6 @@
     ""@types/node"": ""12.12.27"",
     ""@types/react"": ""16.9.19"",
     ""@types/request"": ""2.48.4"",
-    ""@types/tus-js-client"": ""1.8.0"",","tus-js-client v2.1.0+ now includes the type definitions on its own, so that dependency is not needed anymore.",2020-05-13 10:07:28
940,"@@ -105,7 +107,7 @@ class AssemblyOptions {
 
     if (options.alwaysRunAssembly) {
       // No files, just generate one Assembly
-      const assemblyOptions = await options.getAssemblyOptions(null, options)
+      const assemblyOptions = await options.assemblyOptions(null, options)",shouldn't we use the same logic here as above?,2022-08-30 13:24:27
943,"@@ -105,7 +107,9 @@ class AssemblyOptions {
 
     if (options.alwaysRunAssembly) {
       // No files, just generate one Assembly
-      const assemblyOptions = await options.getAssemblyOptions(null, options)
+      const assemblyOptions = typeof options.assemblyOptions === 'function'
+        ? await options.assemblyOptions()","Shouldn’t it pass arguments as it does above? If so, I would probably de-duplicate this logic.",2022-08-30 15:29:37
568,"@@ -1074,6 +1074,7 @@ module.exports = class Dashboard extends Plugin {
     }
 
     const plugins = this.opts.plugins || []
+    console.log(plugins)",Unrelated change ;),2021-06-13 09:07:45
491,"@@ -1076,6 +1076,7 @@ class Uppy {
       const currentProgress = this.getFile(file.id).progress
       this.setFileState(file.id, {
         progress: Object.assign({}, currentProgress, {
+          postprocess: this.postProcessors.length > 0,","`postprocess` is normally an object, not a boolean, so we should prob do something like:

```suggestion
          postprocess: this.postProcessors.length > 0 ? {
            mode: 'indeterminate'
          } : null,
```",2020-09-18 09:11:06
490,"@@ -108,7 +108,7 @@ exports.getRequestPath = (item) => {
   } else if (item.file_type) {
     return `${encodeURIComponent(item.meeting_id)}?recordingId=${encodeURIComponent(item.id)}`
   }
-  return `${encodeURIComponent(item.uuid)}`
+  return `${encodeURIComponent(encodeURIComponent(item.uuid))}`",what kind of files does the `uuid` case match? Can we just always send `item.id` instead?,2020-09-14 10:36:32
65,"@@ -108,7 +111,8 @@
     ""url-parse"": ""1.1.9"",
     ""whatwg-fetch"": ""2.0.3"",
     ""yo-yo"": ""1.4.0"",
-    ""yo-yoify"": ""3.7.2""
+    ""yo-yoify"": ""3.7.2"",
+    ""webdriverio"": ""^4.8.0""",should this be a devDependency?,2017-11-09 18:18:44
607,"@@ -1095,7 +1095,8 @@ class Uppy {
 
       this.setState({ error: errorMsg })
 
-      if (file != null) {
+      // When a file is also given, we store the error on the file object.
+      if (file != null && typeof file === 'object' && typeof file.id === 'string') {","nit: it's probably safe to skip the `object` test as we already know it's not nullish.
```suggestion
      if (file != null && typeof file.id === 'string') {
```",2021-07-12 14:11:36
126,"@@ -1099,8 +1087,6 @@ class Uppy {
 
       const result = currentUploads[uploadID].result
       this.emit('complete', result)
-      // Compatibility with pre-0.21
-      this.emit('success', fileIDs)",:dancer: ,2018-02-22 14:27:00
398,"@@ -11,6 +11,20 @@ module.exports = class FileItem extends Component {
     return !shallowEqual(this.props, nextProps)
   }
 
+  componentDidMount () {
+    const file = this.props.file
+    if (!file.preview && this.props.handleRequestThumbnail) {
+      this.props.handleRequestThumbnail(file)
+    }
+  }
+
+  componentWillUnmount () {
+    const file = this.props.file
+    if (!file.preview && this.props.handleCancelThumbnail) {",I think we don't need the `this.props.handleCancelThumbnail` check,2020-04-14 17:57:55
804,"@@ -11,6 +11,30 @@ Please add your entries in this format:
 - `- [ ] (<plugin name>|website|core|meta|build|test): <Present tense verb> <subject> \(<list of associated owners/gh-issues>\)`.
 
 In the current stage we aim to release a new version at least every month.
+## 2.9.0","```suggestion

## 2.9.0
```",2022-03-24 13:42:06
266,"@@ -11,6 +11,7 @@
   ""devDependencies"": {
     ""@babel/cli"": ""^7.4.4"",
     ""@babel/core"": ""^7.4.4"",
+    ""@babel/plugin-proposal-class-properties"": ""^7.4.4"",",Kinda breaking my own rule here in terms of not adding things that are not standardised…but node.js and chrome already ship implementations,2019-05-27 12:19:06
934,"@@ -11,6 +13,7 @@ export default defineConfig({
     // eslint-disable-next-line no-unused-vars
     setupNodeEvents (on, config) {
       // implement node event listeners here
+      terminalReport(on)","```suggestion
      installLogsPrinter(on)
```",2022-08-23 15:08:56
779,"@@ -11,7 +11,7 @@ export default [
   remarkRetext,
   unified()
     .use(retextEnglish)
-    .use(retextEquality, { ignore: ['disabled', 'host', 'hosts', 'invalid', 'whitespace'] })
+    .use(retextEquality, { ignore: ['disabled', 'host', 'hosts', 'invalid', 'whitespace', 'just', 'simply'] })","```suggestion
    .use(retextEquality, { ignore: ['disabled', 'host', 'hosts', 'invalid', 'whitespace'] })
```",2022-03-10 18:20:36
969,"@@ -11,7 +11,7 @@ let emitter
 module.exports = (redisUrl, redisPubSubScope) => {
   if (!emitter) {
     emitter = redisUrl ? redisEmitter(redisUrl, redisPubSubScope) : nodeEmitter()
+    Object.assign(emitter, { __TEST__: Math.random() })",what's the purpose of this?,2022-09-14 19:48:32
915,"@@ -11,7 +11,9 @@ import {
 import { AppComponent } from './app.component'
 
 @NgModule({
-  declarations: [AppComponent],
+  declarations: [
+    AppComponent
+  ],","```suggestion
  declarations: [AppComponent],
```",2022-08-17 09:56:45
168,"@@ -11,8 +12,7 @@ export class RequestClient {
   delete (path: string, data: object): Promise<any>;
 }
 
-export interface ProviderOptions {
-  serverUrl: string;
+export interface ProviderOptions extends RequestClientOptions {",:+1: ,2018-06-28 10:28:10
32,"@@ -110,6 +111,74 @@ module.exports = class DragDrop extends Plugin {
     })
   }
 
+  style () {
+    // these will be global styles variables,
+    // with an option to override them to support themes
+    const settings = {
+      fontSizes: {
+        normal: '1.2em'
+      },
+      colors: {
+        gray: '#ccc'
+      }
+    }
+
+    css`","Wonder why Github isn't highlighting this, I thought it also did that for `css` tags 😕 ",2017-06-30 11:21:18
619,"@@ -110,7 +110,7 @@ de_DE.strings = {
     '1': '+%{smart_count} Dateien hochladen',
     '2': '+%{smart_count} Dateien hochladen',
   },
-  uploading: 'Uploading',
+  uploading: 'Lade hoch',",I would rather recommend using 'Wird hochgeladen' since the imperative form of 'Lade hoch' confuses me whether this is an action I need to do or whether it's an action that Uppy is currently doing. Just my two cents. ,2021-07-19 07:52:58
658,"@@ -110,9 +107,9 @@ exports.cors = (options = {}) => (req, res, next) => {
   return cors({
     credentials: true,
     origin,
-    methods,
-    allowedHeaders: allowedHeaders.join(','),
-    exposedHeaders: exposedHeaders.join(','),
+    methods: Array.from(allowMethodsMap),
+    allowedHeaders: Array.from(allowHeadersMap).join(','),",nit: it would be worth defining a `const methods = Array.from(allowMethodsMap)` to avoid the double conversion `Set` -> `Array`.,2021-09-03 17:04:18
440,"@@ -111,7 +115,11 @@ class AddFiles extends Component {
 
   renderAcquirer = (acquirer) => {
     return (
-      <div class=""uppy-DashboardTab"" role=""presentation"">
+      <div
+        class=""uppy-DashboardTab""
+        role=""presentation""
+        data-acquirer-id={acquirer.id}","```suggestion
        data-uppy-acquirer-id={acquirer.id}
```",2020-06-29 12:34:10
617,"@@ -111,9 +104,8 @@ class FileCard extends Component {
           </div>
           <button
             className=""uppy-DashboardContent-back""
-            type=""button""
+            type=""submit""",And this especially would submit the outer form on the page.,2021-07-17 05:12:17
437,"@@ -112,7 +112,12 @@ module.exports = function Buttons (props) {
           i18n={i18n}
           info={props.info}
           log={props.log}
-          onClick={() => removeFile(file.id)}
+          onClick={() => {
+            removeFile(file.id)
+            // So that developers can distinguish when users manually removed
+            // files in the UI, vs uppy.reset() (see #2301)
+            this.props.emit('dashboard:file-removed-ui', file)",If we do this I think we should wrap the `removeFile()` function in the Dashboard plugin and do the emit there instead of threading the `emit` function through all these layers.,2020-06-20 16:15:13
605,"@@ -112,7 +114,7 @@ module.exports = class XHRUpload extends Plugin {
        * @param {string} responseText the response body string
        * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)","If we are removing the parameter, shouldn't we also remove them in the JSDoc comment?",2021-07-12 14:02:24
430,"@@ -112,7 +115,12 @@ module.exports = function Buttons (props) {
         onClick={() => toggleFileCard(file.id)}
       />
       {showLinkToFileUploadResult && file.uploadURL ? (
-        <CopyLinkButton i18n={i18n} />","Props for `file` were missing, so it was not possible to copy the link, //cc @goto-bus-stop just for reference",2020-05-21 21:35:06
972,"@@ -113,8 +113,10 @@ export default class GoldenRetriever extends BasePlugin {
 
     // If all files have been removed by the user, clear recovery state
     if (Object.keys(filesToSave).length === 0) {
-      this.uppy.setState({ recoveredState: null })
-      MetaDataStore.cleanup(this.uppy.opts.id)
+      if (this.uppy.getState().recoveredState) {","```suggestion
      // check to prevent infinite recursion
      if (this.uppy.getState().recoveredState != null) {
```",2022-09-15 15:50:09
621,"@@ -113,9 +113,9 @@ class FileCard extends Component {
             className=""uppy-DashboardContent-back""
             type=""button""
             title={this.props.i18n('finishEditingFile')}
-            onClick={this.handleSave}
+            onClick={this.handleCancel}
           >
-            {this.props.i18n('done')}
+            {this.props.i18n('cancel')}","I don't understand this, there's no longer a `Save` button?",2021-07-21 15:22:14
545,"@@ -1135,6 +1135,14 @@ class Uppy {
         isPaused: false
       })
 
+      // Remote providers sometimes don't tell us the file size,
+      // but we can know how many bytes we uploaded once the upload is complete.
+      if (file.size == null) {
+        this.setFileState(file.id, {
+          size: currentProgress.bytesTotal || uploadResp.bytesUploaded","I think there is a chance that `currentProgress.bytesTotal` is not going to be the actual size of the file because some events can be lost due to throttling, I think that I should always use `uploadResp.bytesUploaded`. It could look like

```javascript
if (uploadResp.bytesUploaded) {
 ...
 size: uploadResp.bytesUploaded
 ...
}
```",2021-02-27 23:39:37
159,"@@ -114,12 +114,6 @@ function getArrayBuffer (chunk) {
 
 function getFileType (file) {
   const fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null
-
-  if (file.isRemote) {
-    // some remote providers do not support file types
-    return file.type ? file.type : mimeTypes[fileExtension]
-  }
-",this check is now redundant. The rest of the function downwards basically does the same thing but with safer checks.,2018-06-02 16:26:13
925,"@@ -115,13 +115,17 @@ export default class AwsS3 extends BasePlugin {
     const defaultOptions = {
       timeout: 30 * 1000,
       limit: 0,
-      metaFields: [], // have to opt in
+      allowedMetaFields: [], // have to opt in
       getUploadParameters: this.getUploadParameters.bind(this),
       companionHeaders: {},
     }
 
     this.opts = { ...defaultOptions, ...opts }
 
+    if ('metaFields' in opts) {","```suggestion
    if (opts?.allowedMetaFields === undefined && 'metaFields' in opts) {
```",2022-08-22 13:38:04
692,"@@ -115,258 +115,13 @@ This option is useful when uploading to an S3-like service that doesn’t reply
 
 ### `locale: {}`
 
-Localize text that is shown to the user.
-
-The default English strings are:
+<!-- eslint-disable -->
 
 ```js
-const locales = {
+module.exports = {
   strings: {
-    // Shown in the StatusBar while the upload is being signed.
-    preparingUpload: 'Preparing upload...',
+    timedOut: 'Upload stalled for %{seconds} seconds, aborting.',
   },
 }
-```
-
-## S3 Bucket configuration",note to self: check what went wrong here,2021-10-28 13:18:20
603,"@@ -115,3 +115,8 @@
     opacity: 1;
   }
 }
+
+.grid-checkbox:focus + label {","We need a “safe” prefixed name for classes, how about `uppy-ProviderBrowserItem-checkbox--grid` or similar?",2021-07-08 15:45:46
540,"@@ -115,7 +115,7 @@ module.exports = function getIconByMime (fileType) {
   }
 
   // Archive
-  const archiveTypes = ['zip', 'x-7z-compressed', 'x-rar-compressed', 'x-gtar', 'x-apple-diskimage', 'x-diskcopy']",Could you clarifty why some of those are removed?,2020-12-18 12:25:30
99,"@@ -119,11 +123,11 @@ module.exports = (props) => {
   const isHidden = (uploadState === STATE_WAITING && props.hideUploadButton) ||
     (uploadState === STATE_WAITING && !props.newFiles > 0)
 ","Could we re-use `isHidden` constant we already have in place here, instead of adding a new `hiddenClass ` css class? Perhaps by adding one extra condition, like so (haven’t tested this):

```js
const isHidden = (uploadState === STATE_WAITING && props.hideUploadButton) ||
  (uploadState === STATE_WAITING && !props.newFiles > 0) ||
  (uploadState === STATE_COMPLETE && props.hideAfterFinish)
```

 ",2018-01-04 21:10:45
19,"@@ -119,7 +160,7 @@ module.exports = class Multipart extends Plugin {
     filesForUpload.forEach((file, i) => {
       const current = parseInt(i, 10) + 1
       const total = filesForUpload.length
-      this.upload(file, current, total)
+      file.isRemote ? this.uploadRemote(file, current, total) : this.upload(file, current, total)",Please write this as a full `if (...) { } else { }` statement,2017-05-26 10:43:36
618,"@@ -12,10 +11,8 @@ const fetchWithNetworkError = require('@uppy/utils/lib/fetchWithNetworkError')
 // at all…)
 let socketIo
 function requireSocketIo () {
-  if (!socketIo) {
-    socketIo = require('socket.io-client')
-  }
-  return socketIo
+  // eslint-disable-next-line global-require
+  return socketIo ??= require('socket.io-client')","I’m confused at to what’s happening here, sorry. Nullish coalescing or something else?",2021-07-17 05:17:34
984,"@@ -12,15 +12,15 @@ class UrlUI extends Component {
   }
 
   handleKeyPress (ev) {","```suggestion
  #handleKeyPress = (ev) => {
```",2022-10-18 19:44:37
985,"@@ -12,15 +12,15 @@ class UrlUI extends Component {
   }
 
   handleKeyPress (ev) {
-    const { addFile } = this.props
     if (ev.keyCode === 13) {
-      addFile(this.input.value)
+      this.handleSubmit()","```suggestion
      this.#handleSubmit()
```",2022-10-18 19:44:52
983,"@@ -12,15 +12,15 @@ class UrlUI extends Component {
   }
 
   handleKeyPress (ev) {
-    const { addFile } = this.props
     if (ev.keyCode === 13) {
-      addFile(this.input.value)
+      this.handleSubmit()
     }
   }
 
-  handleClick () {
+  handleSubmit () {","While we are changing this file, can we get rid of the constructor and those pesky `.bind` calls?
```suggestion
  #handleSubmit = () => {
```",2022-10-18 19:44:13
33,"@@ -12,41 +12,51 @@ module.exports = (props) => {
   }
 
   return html`
-    <div class=""Browser"">
-      <header>
-        <input
-          type=""text""
-          class=""Browser-search""
-          placeholder=""Search Drive""
-          onkeyup=${props.filterQuery}
-          value=${props.filterInput}/>
+    <div class=""Browser Browser-viewType--${props.defaultViewType}"">
+      <header class=""Browser-header"">",would it make sense to refactor this into a `Header` component? So it is easier to follow?,2017-07-02 11:12:12
123,"@@ -12,6 +12,39 @@ Best used together with a simple file source plugin, such as [FileInput][] or [D
 
 ## Options
 
+```js","This could perhaps use an: ""All of the options, and their defaults"" intro?",2018-02-15 15:02:57
778,"@@ -12,6 +12,7 @@ describe('Dashboard with Transloadit', () => {
 
     cy.wait('@assemblies')
     cy.wait('@resumable')
+    cy.wait('@assemblies')",why 2 wait for `@assemblies`? edit: sorry for tagging you 😄,2022-03-09 08:25:04
443,"@@ -12,7 +12,6 @@ module.exports = class Provider extends RequestClient {
     super(uppy, opts)
     this.provider = opts.provider
     this.id = this.provider
-    this.authProvider = opts.authProvider || this.provider",I realised that this is not used anywhere,2020-06-29 12:40:35
898,"@@ -12,7 +12,8 @@ import Zoom from '@uppy/zoom'
 
 import packageJson from '../package.json'
 
-const availablePlugins = [
+const availablePlugins = {
+  __proto__: null,",:thinking: why?,2022-08-02 22:34:02
25,"@@ -12,9 +12,14 @@ module.exports = class Multipart extends Plugin {
     // Default options
     const defaultOptions = {
       fieldName: 'files[]',
+      fields: null,","May need a better name, this option indicates which file `meta` properties should be sent along as FormData fields. If null everything is sent along. It's necessary because S3 rejects requests that contain form fields it doesn't recognise.",2017-06-23 09:51:24
26,"@@ -12,9 +12,14 @@ module.exports = class Multipart extends Plugin {
     // Default options
     const defaultOptions = {
       fieldName: 'files[]',
+      fields: null,
       responseUrlFieldName: 'url',
       bundle: true,
-      headers: {}
+      headers: {},
+      getUploadUrl (xhr) {
+        const resp = JSON.parse(xhr.response)
+        return resp[this.responseUrlFieldName]
+      }",This option allows the S3 plugin to take the uploaded url from S3's XML response,2017-06-23 09:52:39
577,"@@ -120,9 +120,11 @@ Localize text that is shown to the user.
 The default English strings are:
 
 ```js
-strings: {
-  // Shown in the StatusBar while the upload is being signed.
-  preparingUpload: 'Preparing upload...'
+const locales = {
+  strings: {
+    // Shown in the StatusBar while the upload is being signed.
+    preparingUpload: 'Preparing upload...',
+  },
 }
 ```",Is this how I should do it?,2021-06-22 08:59:52
879,"@@ -121,6 +121,16 @@ uppy.on('file-editor:complete', (updatedFile) => {
 })
 ```
 
+### file-editor:cancel
+
+Emitted when `uninstall` is called.","Shouldn't we also call this event when you are editing, but discard the changes?",2022-07-11 17:15:34
724,"@@ -121,7 +121,25 @@ Specific options for the [URL](/docs/url) provider.
 
 Specific options for the [Webcam](/docs/webcam) provider.
 
+## Using your own OAuth applications when importing files
+
+When importing files from remote providers, Transloadit's OAuth applications are used by default. Your users will be asked to provide Transloadit access to their files. Since your users are probably not aware of Transloadit, this may be confusing or decrease trust.","```suggestion
When importing files from remote providers, Transloadit's OAuth applications are used by default. Your users will be asked to provide Transloadit access to their files. Since your users are probably not aware of Transloadit, this may be confusing or decrease trust. You may also hit rate limits, because the OAuth application is shared between everyone using Transloadit.
```",2021-12-13 14:59:11
862,"@@ -121,7 +121,8 @@
     ""temp-write"": ""^5.0.0"",
     ""tsd"": ""^0.17.0"",
     ""typescript"": ""~4.4"",
-    ""verdaccio"": ""^5.1.1""
+    ""verdaccio"": ""^5.1.1"",
+    ""vue-template-compiler"": ""workspace:*""",I don't really understand why we need this 🤔,2022-06-01 08:52:03
226,"@@ -121,8 +122,10 @@ module.exports = class AwsS3Multipart extends Plugin {
 
     const filename = encodeURIComponent(key)
     const uploadIdEnc = encodeURIComponent(uploadId)
-    return this.client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, { parts })
-      .then(assertServerError)
+    return this.client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, {
+      parts,
+      metadata: file.meta","S3 multipart uploads need metadata to be assigned when the upload is _created_, not when it's complete. it should not be necessary to send it in this request",2019-02-28 14:02:56
60,"@@ -122,13 +122,15 @@ function getFileType (file) {
     'mp3': 'audio/mp3'
   }
 
-  // no smart detection for remote files, just trust the provider
+  const fileExtension = getFileNameAndExtension(file.name)[1]
+
   if (file.isRemote) {
-    return Promise.resolve(file.type.split('/'))
+    // some providers do not support for file types
+    let mime = file.type ? file.type : extensionsToMime[fileExtension]
+    const type = mime ? mime.split('/') : emptyFileType
+    return Promise.resolve(type)","Was going to suggest this when I read the mime type comment below, but you already did it :D ",2017-10-16 08:14:08
924,"@@ -122,6 +122,10 @@ export default class AwsS3 extends BasePlugin {
 
     this.opts = { ...defaultOptions, ...opts }
 
+    if ('metaFields' in opts) {",Could the warning be displayed only if the new option has not been supplied? In case someone is trying to write a Uppy plugin that works on both 2.x and 3.x branch.,2022-08-22 13:21:43
34,"@@ -123,9 +139,9 @@ module.exports = class Multipart extends Plugin {
           'Content-Type': 'application/json'
         },
         body: JSON.stringify(Object.assign({}, file.remote.body, {
-          endpoint: this.opts.endpoint,
+          endpoint: opts.endpoint,
           size: file.data.size,
-          fieldname: this.opts.fieldName
+          fieldname: opts.fieldName
         }))",Should add support for `meta` and FormData-less uploads to uppy-server too.,2017-07-04 11:15:09
927,"@@ -124,6 +124,10 @@ export default class XHRUpload extends BasePlugin {
       throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.')
     }
 
+    if ('metaFields' in opts) {","```suggestion
    if (opts?.allowedMetaFields === undefined && 'metaFields' in opts) {
```",2022-08-22 13:38:50
654,"@@ -124,6 +124,9 @@ module.exports = class AwsS3 extends BasePlugin {
 
     this.opts = { ...defaultOptions, ...opts }
 
+    // TODO: remove i18n once we can depend on XHRUpload instead of MiniXHRUpload",Why do we want to switch from `XHRUpload` to `MiniXHRUpload`?,2021-08-31 10:26:37
571,"@@ -124,9 +124,8 @@ module.exports = class XHRUpload extends Plugin {
     this.handleUpload = this.handleUpload.bind(this)
 
     // Simultaneous upload limiting is shared across all uploads with this plugin.
-    // __queue is for internal Uppy use only!
-    if (this.opts.__queue instanceof RateLimitedQueue) {
-      this.requests = this.opts.__queue
+    if (internalRateLimitedQueue in this.opts) {
+      this.requests = this.opts[internalRateLimitedQueue]","@arturi This is to address the comment here: `XHRUpload` has to check if `__queue` property is indeed the internal one with an `instanceof` check. By switching to a `Symbol`, we can be confident it's not clashing with a user-defined `__queue` property.",2021-06-17 12:24:22
776,"@@ -1242,7 +1080,11 @@ class Uppy {
 
     this.on('dashboard:file-edit-complete', (file) => {
       if (file) {
-        this.#checkRequiredMetaFieldsOnFile(file)
+        const ctx = {
+          setFileState: (...args) => this.setFileState(...args),","Alternatively, we could define a private property that to make it clear it's a bound method
```suggestion
          setFileState: this.#setFileStateBound,
```

And add below the `setFileState` definition:

```js
  #setFileStateBound = (...args) => this.setFileState(...args)
```",2022-03-04 09:16:58
746,"@@ -125,6 +125,7 @@ class AddFiles extends Component {
           className=""uppy-u-reset uppy-c-btn uppy-DashboardTab-btn""
           role=""tab""
           tabIndex={0}
+          data-cy={acquirer.id}",Is this from a bad merge commit? It looks unrelated.,2022-01-31 16:51:34
889,"@@ -125,8 +124,7 @@ const get = async (req, res) => {
 
   function onUnhandledError (err) {
     logger.error(err, 'controller.url.error', req.id)
-    // @todo send more meaningful error message and status code to client if possible
-    res.status(err.status || 500).json({ message: 'failed to fetch URL metadata' })
+    res.status(err.status || 500).json({ message: err.message || 'failed to fetch URL metadata' })",ditto,2022-07-26 13:06:07
697,"@@ -127,14 +127,13 @@ This option correlates to the [RequestCredentials value](https://developer.mozil
 
 ### `locale: {}`
 
-Localize text that is shown to the user.
-
-The default English strings are:
+<!-- eslint-disable -->",Why is it disabled?,2021-10-29 12:13:18
492,"@@ -127,3 +127,7 @@ exports.getSize = (item) => {
   }
   return item.total_size
 }
+
+exports.getItemTopic = (item) => {
+  return item.topic","Is it always available, or should we check for undefined?",2020-09-28 19:52:47
610,"@@ -127,7 +127,7 @@ module.exports = function Dashboard (props) {
               <strong className=""uppy-Dashboard-serviceMsg-title"">
                 {props.i18n('sessionRestored')}
               </strong>
-              <div class=""uppy-Dashboard-serviceMsg-text"">
+              <div className=""uppy-Dashboard-serviceMsg-text"">","Is this a linter thing? If so, should we keep this rule? What's the upside of using `className` over `class`?",2021-07-14 12:44:14
253,"@@ -128,40 +128,51 @@ module.exports = function FileItem (props) {
           onPauseResumeCancelRetry={onPauseResumeCancelRetry}
           file={file}
           error={error}
+          isUploaded={isUploaded}
           {...props} />","Great, spent about an hour trying to figure out why the progress indicator remained a `<button>` on master, but turned into a `<div>` in your PR, if the PR is not touching the logic of that component 🙀 😂 ",2019-05-16 10:01:22
52,"@@ -128,9 +128,9 @@ class Uppy {
    */
   setState (stateUpdate) {
     const newState = Object.assign({}, this.state, stateUpdate)
-    this.emit('core:state-update', this.state, newState, stateUpdate)
 
     this.state = newState
+    this.emit('core:state-update', this.state, newState, stateUpdate)","`this.state` is the same as `newState ` at this point, so if we go this route, we have to save previous state, something like:

```js
const prevState = Object.assign({}, this.state)
this.state = newState
...
```",2017-09-13 17:47:46
745,"@@ -13,6 +13,7 @@ let counter = 0
  * @type {import('vite').UserConfig}
  */
 const config = {
+  envDir: ROOT.toString(),","
```suggestion
  envDir: fileURLToPath(ROOT),
```",2022-01-31 16:50:34
817,"@@ -13,6 +16,29 @@ describe('Dashboard with Tus', () => {
     cy.intercept('http://localhost:3020/search/unsplash/*').as('unsplash')
   })
 
+  it.only('should emit `error` and `upload-error` events on failed POST request', () => {","```suggestion
  it('should emit `error` and `upload-error` events on failed POST request', () => {
```",2022-05-04 10:06:19
316,"@@ -1318,8 +1319,9 @@ class Uppy {
       .catch((err) => {
         if (err.isRestriction) {
           this.emit('restriction-failed', null, err)
+          return onError(err)","`return` isn't needed here (we should either `return Promise.reject(...)`, or `throw new Error(...)`).

I'd move the `onError()` function here, and manage `type` by assigning it to either `'info'` or `'error'`. What do you think, could that be easier to read?",2019-08-13 11:25:01
100,"@@ -134,8 +134,8 @@
         background-color: $color-cornflower-blue;
         color: $color-white;
 
-        &:hover { 
-          background-color: darken($color-cornflower-blue, 20%); 
+        &:hover {","Should I to remove this change? I don't know how it happend, maybe Atom removed whitespace at line end when I saved it on previous commits.",2018-01-05 18:36:41
521,"@@ -135,13 +135,21 @@ module.exports = class AwsS3 extends Plugin {
     const valid = typeof params === 'object' && params &&
       typeof params.url === 'string' &&
       (typeof params.fields === 'object' || params.fields == null) &&","woops my bad, applying those caused this line to become wrong.
```suggestion
      (typeof params.fields === 'object' || params.fields == null)
```",2020-11-16 12:02:58
502,"@@ -135,13 +135,23 @@ module.exports = class AwsS3 extends Plugin {
     const valid = typeof params === 'object' && params &&
       typeof params.url === 'string' &&
       (typeof params.fields === 'object' || params.fields == null) &&
-      (params.method == null || /^(put|post)$/i.test(params.method))
+      params.method == null;","based on my other comment, I think we can remove this line completely",2020-11-02 10:52:45
507,"@@ -136,7 +136,8 @@ class MarkdownTextarea {
         'url',
         'instagram',
         'google-drive',
-        'dropbox'
+        'dropbox',
+        'box'","excluding from examples in the meantime
```suggestion
        'dropbox'
```",2020-11-13 09:12:22
428,"@@ -137,7 +137,7 @@ class OneDrive extends Provider {
   _error (err, resp) {
     if (resp) {
       const fallbackMsg = `request to ${this.authProvider} returned ${resp.statusCode}`
-      const errMsg = resp.body.error ? resp.body.error.message : fallbackMsg
+      const errMsg = (resp.body || {}).error ? resp.body.error.message : fallbackMsg",this change can be ignored. I accidentally checked out of [this branch](https://github.com/transloadit/uppy/pull/2264/files),2020-05-17 19:43:52
644,"@@ -138,6 +138,7 @@ export interface UppyOptions<TMeta extends IndexedObject<any> = Record<string, u
   id?: string
   autoProceed?: boolean
   allowMultipleUploads?: boolean","Can we mark this deprecated? 
https://stackoverflow.com/a/62991642",2021-08-18 09:09:18
288,"@@ -14,12 +14,17 @@ function upload (files, opts = {}) {
   addTransloaditPlugin(uppy, opts)
 
   files.forEach((file) => {
-    uppy.addFile({
-      data: file,
-      type: file.type,
-      name: file.name,
-      meta: file.meta || {}
-    })","Not sure about this one, should it be wrapped in try/catch, @goto-bus-stop?",2019-06-20 15:58:41
510,"@@ -14,6 +14,7 @@
     <li><label for=""opts-ScreenCapture""><input type=""checkbox"" id=""opts-ScreenCapture"" checked/> Screen Capture</label></li>
     <li><label for=""opts-GoogleDrive""><input type=""checkbox"" id=""opts-GoogleDrive"" checked/> Google Drive</label></li>
     <li><label for=""opts-Dropbox""><input type=""checkbox"" id=""opts-Dropbox"" checked/> Dropbox</label></li>
+    <li><label for=""opts-Box""><input type=""checkbox"" id=""opts-Box"" checked/> Box</label></li>","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:13:21
534,"@@ -14,7 +14,7 @@
   ""rules"": {
     ""jsx-quotes"": [""error"", ""prefer-double""],
     ""compat/compat"": [""error""],
-    ""react/jsx-handler-names"": [""warn""], // maybe we want to do this in the future?
+    ""react/jsx-handler-names"": [""off""],","Disabled because we don't really follow the rule anywhere, and following it would conflict with our convention of using `_`-prefixed names for private class methods.",2020-11-30 09:50:25
797,"@@ -14,7 +14,7 @@ module.exports.client = (opts) => {
   }
 
   if (!redisClient) {
-    redisClient = redis.createClient(opts)
+    redisClient = redis.createClient({ ...opts, legacyMode: true })","```suggestion
    // todo rewrite to non legacy mode
    redisClient = redis.createClient({ ...opts, legacyMode: true })
```",2022-03-22 14:57:24
196,"@@ -14,9 +14,9 @@ function defaultGetAssemblyOptions (file, options) {
   }
 }
 
-const UPPY_SERVER = 'https://api2.transloadit.com/uppy-server'
-// Regex used to check if an uppy-server address is run by Transloadit.
-const TL_UPPY_SERVER = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/uppy-server/
+const COMPANION = 'https://api2.transloadit.com/companion'
+// Regex used to check if an companion address is run by Transloadit.
+const TL_COMPANION = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/companion/",Would be nice to throw an error if anyone uses the old URL maybe. breakage because of this change would be very hard to debug for users I think,2018-09-03 12:07:29
752,"@@ -140,8 +143,14 @@
     ""lint"": ""eslint . --cache"",
     ""release"": ""PACKAGES=$(yarn workspaces list --json) yarn workspace @uppy-dev/release interactive"",
     ""size"": ""echo 'JS Bundle mingz:' && cat ./packages/uppy/dist/uppy.min.js | gzip | wc -c && echo 'CSS Bundle mingz:' && cat ./packages/uppy/dist/uppy.min.css | gzip | wc -c"",
-    ""start:companion"": ""bash ./bin/companion"",
+    ""start:companion"": ""bash bin/companion.sh"",","I think also this line needs to be changed because you renamed it to .sh:
https://github.com/transloadit/uppy/blob/142b95a1c6817b37581957501a61891bd34bf7aa/packages/%40uppy/companion/package.json#L29",2022-02-03 14:54:42
409,"@@ -141,7 +141,6 @@ fi_FI.strings = {
   streamActive: 'Jako aktiivinen',
   streamPassive: 'Jako passiivinen',
   micDisabled: 'Käyttäjä on estänyt mikrofonin',
-  micIsOn: 'Mikrofoni on päällä',",Intended @arturi?,2020-04-22 07:01:58
265,"@@ -142,4 +142,4 @@ function defaultStore () {
 
 A pattern like this, where users can pass options via a function call if necessary, is recommended.
 
-See the [./src/store](https://github.com/transloadit/uppy/tree/master/src/store) folder in the repository for more inspiration.
+See the [./src/store](https://github.com/transloadit/uppy/tree/master/packages/%40uppy/store-default) folder in the repository for more inspiration.","```suggestion
See the [@uppy/store-default](https://github.com/transloadit/uppy/tree/master/packages/%40uppy/store-default) package for more inspiration.
````",2019-05-24 18:01:59
422,"@@ -142,6 +142,7 @@ module.exports = class DragDrop extends Plugin {
     const restrictions = this.uppy.opts.restrictions
     return (
       <input
+        id={'input-' + this.id}",Should it be `'uppy-input-`?,2020-05-07 14:27:20
423,"@@ -142,6 +142,7 @@ module.exports = class DragDrop extends Plugin {
     const restrictions = this.uppy.opts.restrictions
     return (
       <input
+        id={'uppy-input-' + this.id}",we might want to do `this.uppy.id + this.id` in case someone has two instances of uppy with drag-drop,2020-05-09 11:38:04
811,"@@ -142,7 +142,10 @@ cs_CZ.pluralize = function pluralize (n) {
   if (n === 1) {
     return 0
   }
-  return 1
+  if (n > 1 && n < 5) {","`0` needs to return 1, right?

```suggestion
  if (n < 5) {
```",2022-04-27 11:50:20
411,"@@ -142,8 +147,25 @@ class Drive extends Provider {
           .request()
       }
 
+      let stopDataTransfer = false
       requestStream
-        .on('data', (chunk) => onData(null, chunk))
+        .on('response', (resp) => {
+          if (resp.statusCode !== 200) {
+            stopDataTransfer = true","Nit/A possible simplification: perhaps we could add the `.on('data')` handler inside this function, only if the response status was 200, instead of keeping this separate variable?
```js
requestStream.on('response', (resp) => {
  if (resp.statusCode === 200) {
    requestStream.on('data', chunk => onData(null, chunk))
  } else {
    // handle error
  }
})
```",2020-04-27 12:14:39
623,"@@ -1438,15 +1427,7 @@ class Uppy {
     }
 
     // hide the informer after `duration` milliseconds
-    this.infoTimeoutID = setTimeout(this.hideInfo, duration)
-  }
-
-  hideInfo () {
-    const newInfo = { ...this.getState().info, isHidden: true }
-    this.setState({
-      info: newInfo,
-    })
-    this.emit('info-hidden')
+    this.infoTimeoutID = setTimeout(this.#hideInfo, duration)","i'd just use an arrow function here i guess instead of a property that's only used once, but both is fine",2021-07-26 08:02:15
150,"@@ -144,6 +150,52 @@ module.exports = class Url extends Plugin {
       })
   }
 
+  handleDrop (e) {
+    e.preventDefault()
+    if (e.dataTransfer.items) {
+      const items = toArray(e.dataTransfer.items)
+      items.forEach((item) => {
+        if (item.kind === 'string' && item.type.match('^text/uri-list')) {",does this need to be a `.match()`? can't we just do `item.type === 'text/uri-list'`?,2018-05-22 08:23:30
996,"@@ -145,11 +139,9 @@ class MultipartUploader {
     this.#abortController.abort()
     // Swap it out for a new controller, because this instance may be resumed later.
     this.#abortController = new AbortController()
-
-    this.#isPaused = true
   }
 
-  abort (opts = undefined) {
+  abort (opts) {",Why?,2022-11-03 18:28:37
334,"@@ -145,14 +145,17 @@ class Drive {
       modifiedDate: adapter.getItemModifiedDate(item),
       size: adapter.getItemSize(item),
       custom: {
-        isTeamDrive: adapter.isTeamDrive(item)
+        // @todo isTeamDrive is left for backward compatibility. We should remove it in the next
+        // major release.
+        isTeamDrive: adapter.isSharedDrive(item),",:+1: ,2019-09-23 14:12:37
192,"@@ -146,6 +146,8 @@ module.exports.addProviderOptions = (options, grantConfig) => {
       if (server.implicitPath) {
         // no url builder is used for this because grant internally adds the path
         grantConfig[authProvider].callback = `${server.implicitPath}${grantConfig[authProvider].callback}`
+      } else if (server.path) {
+        grantConfig[authProvider].callback = `${server.path}${grantConfig[authProvider].callback}`","callback to an explicit `path` is already handled internally by [grant.js](https://github.com/simov/grant/) so there's no need to add this condition here. This is why we are passing the `path` into the config [here](https://github.com/transloadit/uppy/blob/master/packages/%40uppy/companion/src/server/provider/index.js#L123-L127).

Were you facing any issues with something that might be related to this behaviour? Otherwise I would say the existing implementation is fine as is.",2018-09-02 21:50:33
748,"@@ -146,8 +146,9 @@ yarn start
 Releases are managed by GitHub Actions, here’s an overview of the process to release a new Uppy version:
 
 * Run `yarn release` on your local machine.
-* Follow the instructions and select what packages to release.
+* Follow the instructions and select what packages to release. PS: Don't skip a package unless the changes are really not touching anything related to the npm package.","```suggestion
* Follow the instructions and select what packages to release. **Warning:** skipping packages results in those changes being ""lost"", meaning they won't be picked up in the changelog automatically next release. Always try to release all.
```",2022-02-01 19:03:06
250,"@@ -147,5 +147,7 @@
       ""**/packages/**/*.test.js""
     ]
   },
-  ""dependencies"": {}
+  ""dependencies"": {
+    ""lodash.debounce"": ""^4.0.8""
+  }
 }",This should be in `@uppy/dashboard` dependencies probably?,2019-05-03 18:32:51
141,"@@ -149,6 +149,82 @@ uppy-server uses POST uploads by default, but you can also use them with your ow
    })
    ```
 
+## S3 Alternatives
+
+Many other object storage providers have an identical API to S3, so you can use the AwsS3 plugin with them. To use them with Uppy Server, you can set the `UPPYSERVER_AWS_ENDPOINT` variable to the endpoint of your preferred service.
+
+### DigitalOcean Spaces
+
+For example, with DigitalOcean Spaces, you could do something like this:
+
+```","It would be nice to specify the `bash` language for all the code blocks that export environment variables, to syntax-highlight them, just like the `uppy-server` documentation does.",2018-04-24 23:58:57
167,"@@ -149,6 +150,16 @@ module.exports = class Dashboard extends Plugin {
     this.install = this.install.bind(this)
   }
 
+  removeTarget (plugin) {
+    const pluginState = this.getPluginState()
+    // filter out the one we want to remove
+    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)
+
+    this.setPluginState({
+      targets: newTargets
+    })
+  }",good :ok_hand: ,2018-06-11 09:30:21
743,"@@ -149,7 +150,7 @@
     ""test:type"": ""yarn workspaces foreach -piv --include '@uppy/*' --exclude '@uppy/{angular,react-native,locales,companion,provider-views,robodog,svelte}' exec tsd"",
     ""test:unit"": ""yarn run build:lib && jest --env jsdom"",
     ""test:watch"": ""jest --env jsdom --watch"",
-    ""test:size"": ""size-limit"",
+    ""test:size"": ""size-limit --why"",","nit: you'll might get outdated results if the build is outdated, might be a good idea to add the build command.
```suggestion
    ""test:size"": ""yarn build:lib && size-limit --why"",
```",2022-01-27 12:00:24
672,"@@ -15,19 +15,17 @@ Uppy supports the popular [Redux](https://redux.js.org/) state management librar
 You can tell Uppy to use your app’s Redux store for its files and UI state. Please check out [Custom Stores](/docs/stores/) for more information on that. Here’s an example to give you a sense of how this works:
 
 ```js
-import { createStore } from 'redux'
-import createReduxStore from '@uppy/store-redux'
+import Uppy from '@uppy/core'
+import ReduxStore from '@uppy/redux-store'","The name of the package is backward, isn't it?
```suggestion
import ReduxStore  from '@uppy/store-redux'
```
Also, we should try to have our examples ESM ready (I'm not sure `import * as`  is going to work well with the current CJS implementation, but it'd be the cleanest to use).
```suggestion
import * as ReduxStore  from '@uppy/store-redux'
```
```suggestion
import { ReduxStore, reducer }  from '@uppy/store-redux'
```
",2021-09-30 18:29:15
349,"@@ -15,6 +15,7 @@ const redis = require('./redis')
 const PROTOCOLS = Object.freeze({
   multipart: 'multipart',
   s3Multipart: 's3-multipart',
+  b2Multipart: 'b2-multipart',","where is the `b2Multipart` protocol being handled in this uploader? I don't see it anywhere. I mean something like the way it is [handled for s3Multipart](https://github.com/transloadit/uppy/blob/647bb6497c473a8497a06912a83342fa06d8f6e7/packages/%40uppy/companion/src/server/Uploader.js#L240-L241). The point of implementing this is so that people can import files from Google Drive (or Dropbox, Instagram, etc) and upload to S3, or B2 in this case",2019-11-17 11:25:12
303,"@@ -15,6 +15,8 @@
     ""jsx-quotes"": [""error"", ""prefer-double""],
     ""compat/compat"": [""error""],
 
+    ""no-unused-vars"": [""warn"", { ""vars"": ""all"", ""args"": ""after-used"", ""ignoreRestSiblings"": false }],","But it’s [part of Standard](https://github.com/standard/eslint-config-standard/blob/master/eslintrc.json#L157) config, so here you are changing it to also not allow arguments.

@goto-bus-stop any preference here?

But changing from `error` to `warn` is a bigger deal, cause it will now allow commits with unused vars, which I’m not a fan of.",2019-07-10 08:25:11
599,"@@ -15,8 +15,7 @@ import Tus from '@uppy/tus'
 
 uppy.use(Tus, {
   endpoint: 'https://tusd.tusdemo.net/files/', // use your tus endpoint here
-  resume: true,
-  retryDelays: [0, 1000, 3000, 5000],
+  retryDelays: [0, 1000, 3000, 5000]",aren't trailing commas part of our linting rules?,2021-07-01 12:33:34
585,"@@ -15,8 +15,8 @@
  * will expire before some files can be uploaded.
  *
  * The long-term solution to this problem is to change the upload pipeline so that files
- * can be sent to the next step individually. That requires a breakig change, so it is
- * planned for Uppy v2.
+ * can be sent to the next step individually. That requires a breaking change, so it is
+ * planned for Uppy v4.",@Murderlon Should it just say `some future version`?,2021-06-25 14:37:31
181,"@@ -150,6 +150,8 @@ class MultipartUploader {
       return result
     }).then(({ url }) => {
       this._uploadPartBytes(index, url)
+    }).catch((err) => {","This is an extremely small nit and I almost feel bad for bringing it up: I think this might be a little clearer using the second argument to `.then()`. The `._uploadPartBytes()` call is conceptually the next step after the Promise chain ends, having another `.catch()` _reads_ like it is part of the chain. Basically, I could see myself reading this in the future and thinking the `this._uploadPartBytes()` call is missing a return statement.

I would prefer doing this:
```js
.then(({ url }) => {
  this._uploadPartBytes(index, url)
}, (err) => {
  this._onError(err)
})
```

Then it's clear that this is the end of the chain and that we have two ways of handling the ""final"" promise state, if that makes sense.",2018-07-19 10:34:28
36,"@@ -151,24 +178,66 @@ module.exports = class Webcam extends Plugin {
     this.streamSrc = null
   }
 
+  oneTwoThreeSmile () {
+    return new Promise((resolve, reject) => {
+      let count = this.opts.countdown
+
+      let countDown = setInterval(() => {
+        if (!this.webcamActive) {
+          clearInterval(countDown)
+          this.captureInProgress = false
+          return Promise.reject('Webcam is not active')",This `return` is inside a closure so it doesn't reject the outer Promise,2017-07-14 19:16:28
501,"@@ -151,6 +151,7 @@ class Uppy {
     this.addFile = this.addFile.bind(this)
     this.removeFile = this.removeFile.bind(this)
     this.pauseResume = this.pauseResume.bind(this)
+    this.passesRestrictions = this.passesRestrictions.bind(this)",Mb change it to 'doesPassRestrictions()'? Doesn't sound enough like a boolean-returning method to me.,2020-10-29 13:52:15
407,"@@ -151,7 +151,7 @@ module.exports = class AwsS3Multipart extends Plugin {
       const onError = (err) => {
         this.uppy.log(err)
         this.uppy.emit('upload-error', file, err)
-        err.message = `Failed because: ${err.message}`
+        err.message = `${err.message}`",I guess this assignment is now redundant?,2020-04-20 19:31:12
129,"@@ -152,7 +152,7 @@ uppy.use(AwsS3, {
       },
       body: JSON.stringify({
         filename: file.name,
-        contentType: file.type
+        type: file.type","This example belongs to this PHP file: https://github.com/transloadit/uppy/blob/master/examples/aws-presigned-url/s3-sign.php, which uses `contentType`.",2018-03-12 08:40:29
424,"@@ -153,7 +153,9 @@ module.exports = class Transloadit extends Plugin {
     // Add Assembly-specific Tus endpoint.
     const tus = {
       ...file.tus,
-      endpoint: status.tus_url
+      endpoint: status.tus_url,
+      // Include X-Request-ID headers for better debugging.
+      addRequestId: true","is there any reason we are not adding this to companion as well? 🤔 There are no CORS concerns there, so adding probably shouldn't be a problem, no?

**One question about the requestId;** Are the request Ids unique to each tus-js-client request, or are they unique to an upload instance instead?",2020-05-11 12:40:13
777,"@@ -154,6 +123,9 @@ class Uppy {
       recoveredState: null,
     })
 
+    const getOpts = () => this.opts
+    this.#restricter = new Restricter(getOpts.bind(this), this.i18n)","```suggestion
    this.#restricter = new Restricter(() => this.opts, this.i18n)
```
but wouldn't it be easier to do?
```suggestion
    this.#restricter = new Restricter(this)
```",2022-03-07 09:56:17
643,"@@ -154,6 +166,7 @@ class FileCard extends Component {
             <button
               className=""uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Dashboard-FileCard-actionsBtn""
               type=""submit""
+              onClick={'form' in HTMLButtonElement.prototype ? undefined : this.handleSave}",I think this might be a case where a comment with some context will help future contributors. ,2021-08-18 08:54:23
215,"@@ -154,7 +154,11 @@ module.exports = class Tus extends Plugin {
       }
 
       optsTus.onSuccess = () => {
-        this.uppy.emit('upload-success', file, upload, upload.url)
+        const uploadResp = {
+          uploadURL: upload.url
+        }
+
+        this.uppy.emit('upload-success', file, uploadResp)
 ",Do we need to pass `upload` instance?,2018-12-19 20:21:43
214,"@@ -154,7 +154,7 @@ module.exports = class Tus extends Plugin {
       }
 
       optsTus.onSuccess = () => {
-        this.uppy.emit('upload-success', file, upload, upload.url)
+        this.uppy.emit('upload-success', file, null, upload.url)",we can drop the upload.urls here and instead pass an object that contains the `uploadURL` like in xhrupload,2018-12-10 16:39:39
882,"@@ -156,6 +157,12 @@ Set the preferred mime type for images, for example `'image/png'`. If the browse
 
 If no preferred image mime type is given, the Webcam plugin will prefer types listed in the [`allowedFileTypes` restriction](/docs/uppy/#restrictions), if any.
 
+### `mobileNativeCamera`
+
+Replaces Uppy’s custom camera UI on mobile with “Take Picture” and/or “Record Video” buttons that open native device UI for pictures / video (`Function: boolean` || `boolean`, default: `isMobile()`).","Is it really ""and/or""? Can you disable one or the other?",2022-07-18 11:38:57
300,"@@ -157,10 +166,8 @@ class Uppy {
       this.updateAll(nextState)
     })
 
-    // for debugging and testing
-    // this.updateNum = 0
+    // Exposing uppy object on window for debugging and testing
     if (this.opts.debug && typeof window !== 'undefined') {
-      window['uppyLog'] = ''
       window[this.opts.id] = this",will be good that we'll be forced to get rid of this when we remove `debug: true` :eyes:,2019-07-05 15:09:45
401,"@@ -157,6 +165,13 @@ module.exports = class RequestClient {
           credentials: 'same-origin',
           body: JSON.stringify(data)
         })
+          .catch((err) => {
+            if (err.name === 'AbortError') {
+              throw err
+            } else {
+              throw new NetworkError(err)",do we not need this for the `delete` method as well? 🤔 ,2020-04-17 11:17:59
402,"@@ -1571,9 +1574,6 @@ class Uppy {
         const uploadID = this._createUpload(waitingFileIDs)
         return this._runUpload(uploadID)
       })",so errors from this block will no longer be caught? Is this deliberate?,2020-04-17 11:22:09
155,"@@ -158,7 +162,11 @@ module.exports = class Url extends Plugin {
         if (item.kind === 'string' && item.type === 'text/uri-list') {
           item.getAsString((url) => {
             this.uppy.log(`[URL] Adding file from dropped url: ${url}`)
-            this.addFile(url)
+            try {
+              this.addFile(url)","This is a different `addFile` function, it doesn't need the try/catch",2018-05-31 10:18:34
29,"@@ -159,9 +165,7 @@ class Uppy {
         id: fileID,
         name: fileName,
         extension: fileExtension || '',
-        meta: {
-          name: fileName
-        },
+        meta: Object.assign({}, this.getState().metaData),",`setMeta` sets the `meta` state key but this merges in the `metaData` state key,2017-06-29 11:31:33
703,"@@ -16,24 +16,13 @@
         margin: auto;
       }
 
-      button,
-      input {
-        color: green;
-        font-size: 30px;
-        text-align: right;
-        border: 2px solid purple;
-      }
-",These weird styles are here for a reson: try to emulate someting going on on a page Uppy could be embedded on. To solve the issue we need to add `uppy-u-reset` utility classname to all buttons — in this case to `ErrorButton`.,2021-11-04 13:40:12
110,"@@ -16,6 +16,10 @@ Uppy comes with two state management solutions (stores):
  - `DefaultStore`, a simple object-based store.
  - `ReduxStore`, a store that uses a key in a Redux store.
 
+There are also some third party stores:
+
+ - [uppy-store-ngrx](https://github.com/rimlin/uppy-store-ngrx/), keeping Uppy state in a key in an Ngrx store for use with Angular.
+",Maybe also add a link to Ngrx store?,2018-01-30 18:24:52
598,"@@ -16,7 +16,7 @@ import {
 const isOnTravis = !!(process.env.TRAVIS && process.env.CI)
 const TUS_ENDPOINT = `http://${isOnTravis ? 'companion.test' : 'localhost'}:1080/files/`
 
-const uppy = Core<Core.StrictTypes>({
+const uppy = Core({",We'll need `new` always after https://github.com/transloadit/uppy/pull/2949,2021-06-30 10:57:27
373,"@@ -160,6 +161,16 @@ async function main (packageName, version) {
     ? await getRemoteDistFiles(packageName, version)
     : await getLocalDistFiles(packagePath)
 
+  if (packageName === 'uppy') {
+    // Create downloadable zip archive
+    const zip = new AdmZip()
+    for (const [filename, buffer] of files.entries()) {
+      zip.addFile(filename, buffer, 'entry comment goes here')",is the comment required? would be preferable to omit it instead of having a dummy value :smile: ,2020-02-05 11:03:22
146,"@@ -163,7 +163,8 @@ module.exports = class ProviderView {
         url: `${this.Provider.fileUrl(this.plugin.getItemRequestPath(file))}`,
         body: {
           fileId: this.plugin.getItemId(file)
-        }
+        },
+        provider: this.Provider","This will most likely not work with GoldenRetriever, it needs state to be JSON.stringify-able in most cases",2018-05-14 07:36:38
395,"@@ -164,7 +184,7 @@ describe('download provdier file', () => {
       .set('uppy-auth-token', token)
       .set('Content-Type', 'application/json')
       .send({
-        endpoint: 'http://master.tus.com/files',
+        endpoint: 'http://master.tus.io/files',","Wont it be confusing to see a tus endpoint while this is about s3 multipart? Even if it doesn’t matter for the test, folks will see this and draw bad conclusions or walk away in a confused state",2020-04-14 13:44:51
484,"@@ -165,6 +165,7 @@
     ""minify-stream"": ""2.0.1"",
     ""minimist"": ""^1.2.5"",
     ""mkdirp"": ""0.5.1"",
+    ""moment-timezone"": ""^0.5.31"",","we were previously relying on moment that was implicitly installed by expo for ""@uppy-example/react-native-expo"" I think (and it only worked because moment is a global object)",2020-09-11 21:01:52
656,"@@ -167,7 +167,7 @@ module.exports = class XHRUpload extends BasePlugin {
   }
 
   // eslint-disable-next-line class-methods-use-this
-  addMetadata (formData, meta, opts) {
+  #addMetadata (formData, meta, opts) {
     const metaFields = Array.isArray(opts.metaFields)
       ? opts.metaFields
       : Object.keys(meta) // Send along all fields by default.","Declare this function outside of the class body instead, if it's not using `this` it doesn't need to be in the class body if we don't want to expose it.",2021-08-31 12:09:19
89,"@@ -168,7 +169,9 @@ module.exports = class Webcam extends Plugin {
       })
       return this.getVideo()
     }).then((file) => {
-      return this.uppy.addFile(file)
+      this.uppy.addFile(file)","this no longer waits for the `addFile()` function to complete, is that intentional?",2017-12-13 21:46:56
90,"@@ -168,7 +169,9 @@ module.exports = class Webcam extends Plugin {
       })
       return this.getVideo()
     }).then((file) => {
-      return this.uppy.addFile(file)
+      this.uppy.addFile(file)
+      const dashboard = this.uppy.getPlugin('Dashboard')
+      if (dashboard) dashboard.hideAllPanels()",why is this done here? i feel like the webcam plugin shouldn't know it's in a panel,2017-12-13 21:51:42
460,"@@ -168,9 +168,12 @@ module.exports = class Webcam extends Plugin {
       this.opts.modes.indexOf('video-only') !== -1 ||
       this.opts.modes.indexOf('picture') !== -1
 
+    const videoConstraints = this.opts.videoConstraints ?? {}
+    videoConstraints.facingMode = this.opts.facingMode",Reading this again it should prob prefer the `videoConstraints.facingMode` value over `facingMode` if the former was already set,2020-07-13 15:31:45
27,"@@ -169,6 +169,8 @@ class Uppy {
         data: file.data,
         progress: {
           percentage: 0,
+          bytesUploaded: 0,
+          bytesTotal: file.data.size || 0,",Do I have to do anything special here for remote files? or will this Just Work™?,2017-06-26 19:56:33
118,"@@ -169,7 +169,7 @@ module.exports = class Webcam extends Plugin {
       })
       return this.getVideo()
     })
-    .then(this.uppy.addFile)
+    .then((file) => this.uppy.addFile(file))
     .then(() => {","And here we are not catching, cause we are actually handling the error?",2018-02-09 05:35:44
256,"@@ -169,7 +169,7 @@ pushd ""${__root}"" > /dev/null 2>&1
 ",Let's remove this?,2019-05-22 14:41:50
230,"@@ -17,14 +18,18 @@ module.exports = class Provider extends RequestClient {
     this.tokenKey = `companion-${this.pluginId}-auth-token`
   }
 
-  get defaultHeaders () {
-    return Object.assign({}, super.defaultHeaders, {'uppy-auth-token': this.getAuthToken()})
+  headers () {
+    return new Promise((resolve, reject) => {","```js
return super.headers().then((headers) => {
  return this.getAuthToken().then((token) => {
    return Object.assign({}, headers, { 'uppy-auth-token': token })
  })
})
```",2019-03-25 10:34:02
86,"@@ -17,15 +19,16 @@ module.exports = (props) => {
   return html`
     <table class=""BrowserTable"" onscroll=${props.handleScroll}>
       <tbody role=""listbox"" aria-label=""List of files from ${props.title}"">
-        ${props.folders.map((folder) => {
+        ${props.folders.map(folder => {","aww i like the parentheses there. super nit picky tho, i'll adapt either way :D",2017-12-13 21:41:32
188,"@@ -17,7 +17,10 @@ cache:
   directories:
   - ~/.npm
 before_install:
+- nvm install-latest-npm",Two times installing npm requires?,2018-08-17 05:12:06
857,"@@ -17,7 +17,11 @@ function onShouldRetry (err, retryAttempt, options, next) {
 const companionUrl = 'http://localhost:3020'
 const uppy = new Uppy()
   .use(Dashboard, { target: '#app', inline: true })
-  .use(Tus, { endpoint: 'https://tusd.tusdemo.net/files', onShouldRetry })
+  .use(Tus, {
+    endpoint: 'https://tusd.tusdemo.net/files',
+    onShouldRetry,
+    retryDelays: [2000, 3000, 4000],","That looks unrelated, can we put it in its own PR (or remove it)",2022-05-30 12:26:56
173,"@@ -17,7 +17,7 @@
   @include reset-button;
   padding: 10px 15px;
   border: 1px solid $color-primary;
-  background-transition: all .3s;
+  transition: all .2s;",:see_no_evil: :+1: ,2018-07-16 08:45:17
170,"@@ -17,7 +17,7 @@ module.exports = class Provider extends RequestClient {
   }
 
   get defaultHeaders () {
-    return Object.assign({}, super.defaultHeaders, {'uppy-auth-token': localStorage.getItem(this.tokenKey)})
+    return Object.assign(super.defaultHeaders, {'uppy-auth-token': localStorage.getItem(this.tokenKey)})","this change is correct but it looked wrong initially :thinking: maybe add a comment explaining that super.defaultHeaders is a getter, so it's fine to mutably merge things into it? else i'm sure we'll get a PR to add back the `{}, ` in the near future :)

(FWIW i think keeping the `{}, ` is also fine, one or two empty objects don't pressure the GC that much :smile: )",2018-06-28 13:00:39
790,"@@ -17,7 +17,7 @@ module.exports = function useUppy (factory) {
 
   useEffect(() => {
     return () => {
-      uppy.current.close()
+      uppy.current.close({ reason: null })",Explicitly passing `null` still feels a bit off to me. You would expect a nullish value to be the default. ,2022-03-17 09:39:18
939,"@@ -17,7 +17,9 @@ export default function useUppy (factory) {
 
   useEffect(() => {
     return () => {
-      uppy.current.close({ reason: 'unmount' })
+      if (uppy.current) {
+        uppy.current.close({ reason: 'unmount' })
+      }","```suggestion
      uppy.current?.close({ reason: 'unmount' })
```",2022-08-30 12:29:23
968,"@@ -17,7 +18,7 @@ const htmlContent = (token, origin) => {
     <head>
         <meta charset=""utf-8"" />
         <script>
-          window.opener.postMessage(${serialize({ token })}, ${serialize(origin)})
+          if (window.opener) window.opener.postMessage(${serialize({ token })}, ${serialize(origin)})",why is this needed?,2022-09-14 19:47:32
184,"@@ -17,8 +38,10 @@ module.exports = (props) => {
     props.handleClick(ev)
   }
 
+  const itemIcon = props.getItemIcon()
+
   return (
-    <li class={'uppy-ProviderBrowserItem' + (props.isChecked ? ' uppy-ProviderBrowserItem--selected' : '')}>
+    <li class={'uppy-ProviderBrowserItem' + (props.isChecked ? ' uppy-ProviderBrowserItem--selected' : '') + (itemIcon === 'video' ? ' uppy-ProviderBrowserItem--noPreview' : '')}>
       <div class=""uppy-ProviderBrowserItem-checkbox"">","this is an Instagram-specific hack, should be replaced",2018-07-30 16:24:23
573,"@@ -1706,11 +1698,7 @@ class Uppy {
   }
 }
 
-module.exports = function core (opts) {
-  return new Uppy(opts)
-}
-
 // Expose class constructor.
-module.exports.Uppy = Uppy
+module.exports = Uppy","Why not both? When switching to ESM, people may prefer to use named import, it's also more convenient if they try to `export * from '@uppy/core'`.
```suggestion
module.exports = Uppy
module.exports.Uppy = Uppy
```",2021-06-18 08:30:01
624,"@@ -1708,6 +1701,23 @@ class Uppy {
   }
 }
 
+/**
+ * Back compat for when uppy.state is used instead of uppy.getState().
+ */
+Reflect.defineProperty(Uppy.prototype, 'state', {","So why did you go for `Reflect.defineProperty`? Most of these things like Symbol and Relfect are new to me, might be for other contributors as well, maybe we should add a bit of comments around them?",2021-07-27 16:19:42
973,"@@ -174,7 +174,7 @@
 <section class=""IndexActivity"">
   <h2>Activity Feed</h2>
 
-  <div class=""on-the-githubs"" data-event-source=""repos/transloadit/uppy"">Loading...</div>
+  <ul class=""on-the-githubs"" data-event-source=""repos/transloadit/uppy"">Loading...</ul>","Certainly an improvement, however I don't think if it's allowed to have a ""naked"" text node (`Loading...`), <validator.w3.org> does report is as an error. We also lack a fallback for when JS is disabled and the feed will never load. What we could do is:

```suggestion
<noscript class=""activity-feed"" data-event-source=""repos/transloadit/uppy"">You need JavaScript to display the activity feed.</noscript>
```

and then update the JS https://github.com/transloadit/uppy/blob/d6a5695e391493c83769af0437ea86c4bcc00527/website/themes/uppy/layout/layout.ejs#L103

```js
          {
            const $el = $('noscript.activity-feed');
            $('<ul class=""on-the-githubs"">').attr('data-event-source', $el.attr('data-event-source')).replace($el).onthegithubs();
          }
```",2022-09-21 14:15:39
312,"@@ -175,6 +172,13 @@ module.exports = class Dashboard extends Plugin {
     this.removeDragOverClassTimeout = null
   }
 
+  i18nInit () {","We may want to override setOptions in these plugins to automatically reinitialize the localization
```js
setOptions (newOpts) {
  super.setOptions(newOpts)
  this.i18nInit()
}
```",2019-08-07 13:28:29
404,"@@ -175,6 +177,11 @@ module.exports = class Tus extends Plugin {
 
       optsTus.onError = (err) => {
         this.uppy.log(err)
+
+        if (isNetworkError(err.originalRequest)) {
+          err = new NetworkError(err)","should this be `err = new NetworkError(err, err.originalRequest)` instead?",2020-04-17 12:35:12
408,"@@ -175,8 +177,13 @@ module.exports = class Tus extends Plugin {
 
       optsTus.onError = (err) => {
         this.uppy.log(err)
+
+        if (isNetworkError(err.originalRequest)) {
+          err = new NetworkError(err, err.originalRequest)
+        }
+
         this.uppy.emit('upload-error', file, err)
-        err.message = `Failed because: ${err.message}`
+        err.message = `${err.message}`",redundant as well?,2020-04-20 19:35:39
23,"@@ -176,23 +176,46 @@ function getArrayBuffer (file) {
 
 function getFileType (file) {
   const emptyFileType = ['', '']
-  if (file.type) {
-    return Promise.resolve(file.type.split('/'))
+  const extensionsToMime = {
+    'md': 'text/markdown',
+    'markdown': 'text/markdown',
+    'mp4': 'video/mp4',
+    'mp3': 'audio/mp3'
   }","We should probably have one unified list of extensions/file-types? I need to search it by extension, and the one used in `getFileTypeExtension` is the other way around. But I guess we can just use one list and two different methods, `getFileTypeExtension` and `getExtensionByFileType`, looping through it with Object.keys().forEach? @goto-bus-stop ",2017-06-14 21:40:52
458,"@@ -176,8 +176,8 @@ module.exports = class Dashboard extends Plugin {
 
     if (callerPluginType !== 'acquirer' &&
         callerPluginType !== 'progressindicator' &&
-        callerPluginType !== 'presenter') {
-      const msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter'
+        callerPluginType !== 'editor') {
+      const msg = 'Dashboard: The Dashboard can only be used by plugins of types: acquirer, progressindicator, editor'","if we're tweaking the wording here anyway 😇 
```suggestion
      const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'
```",2020-07-13 09:45:38
22,"@@ -177,9 +170,12 @@ module.exports = class Multipart extends Plugin {
     //   }
   }
 
-  handleUpload () {
+  handleUpload (fileIDs) {
     this.core.log('Multipart is uploading...')
-    const files = this.core.getState().files
+    const files = fileIDs.map(getFile, this)
+    function getFile (fileID) {
+      return this.core.state.files[fileID]
+    }","All changes in this file are because the file IDs to upload are now passed in by `Core`, so the Multipart plugin doesn't have to figure out what it has to upload.",2017-05-31 20:47:07
731,"@@ -178,6 +182,9 @@ module.exports = class Tus extends BasePlugin {
 
     // Create a new tus upload
     return new Promise((resolve, reject) => {
+      let queuedRequest
+      let queueRequest",It's very easy to misuse one for the other. Maybe `queuedRequest` and `qRequest` ?,2022-01-03 19:24:26
381,"@@ -178,7 +178,11 @@ app.use((req, res, next) => {
 if (app.get('env') === 'production') {
   // @ts-ignore
   app.use((err, req, res, next) => {
-    console.error('\x1b[31m', req.id, err, '\x1b[0m')
+    // if the error is as a result of bad request from client, no need
+    //  to flood production logs with this.
+    if (!err.status || err.status !== 400) {",Is this not overly eager?,2020-03-06 11:49:55
418,"@@ -178,8 +186,9 @@ module.exports = class Tus extends Plugin {
       optsTus.onError = (err) => {
         this.uppy.log(err)
 
-        if (isNetworkError(err.originalRequest)) {
-          err = new NetworkError(err, err.originalRequest)
+        const xhr = err.originalRequest ? err.originalRequest.getUnderlyingObject() : null","tus-js-client v2 introduces a HTTP abstraction layer, so the code to access XHR objects is a bit different now.",2020-05-03 15:47:50
158,"@@ -179,9 +201,13 @@ module.exports = class ProviderView {
     } catch (err) {
       // Nothing, restriction errors handled in Core
     }
-    if (!isCheckbox) {
-      this.donePicking()
-    }
+  }
+
+  removeFile (id) {
+    const { currentSelection } = this.plugin.getPluginState()
+    this.plugin.setPluginState({
+      currentSelection: currentSelection.filter((file) => file.id !== id)
+    })","Does this do anything, or is it here in case we might need it? Current solution doesn’t allow removing files from ProviderView, correct?",2018-05-31 22:48:42
578,"@@ -18,10 +18,10 @@ npm install @uppy/react
 ```
 
 ```js
-// Either:
-import DashboardModal from '@uppy/react/lib/DashboardModal'
-// Or:
 import { DashboardModal } from '@uppy/react'
+
+// Alternatively, you can also use a default import:
+// import DashboardModal from '@uppy/react/lib/DashboardModal'
 ```","Are we OK with recommending named import? I suppose this was made in case users don't have tree-shaking built-in whatever tool they are using, maybe it's safe to assume they either have it or don't care about it anyway?",2021-06-22 09:04:00
4,"@@ -18,14 +18,14 @@ module.exports = {
             ""port"": 8080
         }
     },
-    ""files"": [ ""examples/cdn/*""],
+    ""files"": [ ""examples/bundle/*""],","This seemed broken to me. Why would browserify only check the (previously `cdn`, now) `bundle` example? And even so, the path is incorrect here. Fixing this is unrelated so should not go into this PR I feel. But when we fix this in master, perhaps that solves the reload issues that you experienced @hedgerh?
",2016-02-17 10:24:39
932,"@@ -18,3 +18,9 @@ import './commands'
 
 // Alternatively you can use CommonJS syntax:
 // require('./commands')
+
+// eslint-disable-next-line
+// @ts-ignore
+import fn from  'cypress-terminal-report/src/installLogsCollector.js'
+
+fn()","nit:
```suggestion
import installLogsCollector from  'cypress-terminal-report/src/installLogsCollector.js'

installLogsCollector()
```",2022-08-23 15:08:29
210,"@@ -18,6 +18,8 @@ cache:
 services:
 - docker
 addons:
+  hosts:
+    - companion.test",adding `hosts` is the one work around to have this working on Microsoft edge. Without this socket progress is not working on Edge,2018-10-26 00:27:04
476,"@@ -18,7 +18,7 @@ Robodog is an Uppy-based library that helps you talk to the Transloadit API. It
 Robodog can be downloaded from npm:
 
 ```shell
-npm install --save @uppy/robodog
+npm install  @uppy/robodog","It seems this leaves two spaces here, perhaps we should replace for `[space]--save` instead?",2020-09-03 13:09:21
464,"@@ -18,7 +18,7 @@ function FolderIcon () {
 
 function VideoIcon () {
   return (
-    <svg aria-hidden=""true"" focusable=""false"" viewBox=""0 0 58 58"">
+    <svg aria-hidden=""true"" focusable=""false"" style={{ width: 16, marginRight: 4 }} viewBox=""0 0 58 58"">",@arturi does this look good to you?,2020-07-17 09:01:29
461,"@@ -18,7 +18,7 @@ function FolderIcon () {
 
 function VideoIcon () {
   return (
-    <svg aria-hidden=""true"" focusable=""false"" viewBox=""0 0 58 58"">
+    <svg aria-hidden=""true"" focusable=""false"" viewBox=""0 0 58 58"" style={{ width: 16, marginRight: 4 }}>",what is the reason for this change? 🤔 ,2020-07-16 04:04:33
336,"@@ -18,7 +18,7 @@ if (mode === 'build') {
 } else if (mode === 'test') {
   test()
 } else {
-  throw new Error(`First argument must be either 'build' or 'test'`)
+  throw new Error('First argument must be either \'build\' or \'test\'')","This is not better to me personally, you?",2019-10-04 12:07:39
687,"@@ -180,12 +177,7 @@ class Drive extends Provider {
     )
   }
 
-  list (options, done) {
-    // @ts-ignore
-    callbackify(this._list.bind(this))(options, done)
-  }
-
-  async stats ({ id, token }) {
+  async _stats ({ id, token }) {","typo?
```suggestion
  async stats ({ id, token }) {
```",2021-10-28 08:34:00
274,"@@ -180,8 +180,13 @@ module.exports = class XHRUpload extends Plugin {
       formPost.append(item, file.meta[item])
     })
 
+    // Set `file.data.type` in the blob to `file.meta.type`,
+    // because we might have detected a more accurate file type in Uppy
+    // https://stackoverflow.com/a/50875615
+    file.data = file.data.slice(0, file.data.size, file.meta.type)",maybe we should have a reused `copyWithNewType` function? So that the comment and stackoverflow reference will only live in one place? And also the name is friendlier to read throughout the code,2019-06-05 10:47:30
606,"@@ -181,11 +183,11 @@ module.exports = class XHRUpload extends Plugin {
     return opts
   }
 
-  addMetadata (formData, meta, opts) {
+  static addMetadata (formData, meta, opts) {",Why making it `static`?,2021-07-12 14:04:17
413,"@@ -181,16 +182,16 @@ if (app.get('env') === 'production') {
     // if the error is a URIError from the requested URL we only log the error message
     // to avoid uneccessary error alerts
     if (err.status === 400 && err instanceof URIError) {
-      console.error('\x1b[31m', req.id, err.message, '\x1b[0m')
+      logger.error(err.message, 'root.error', req.id)
     } else {
-      console.error('\x1b[31m', req.id, err, '\x1b[0m')
+      logger.error(err, 'root.error', req.id, true)","this `true` argument is a little unclear to me, maybe `{ logStackTrace: true }` as an option is better?",2020-04-29 13:16:30
275,"@@ -181,6 +186,8 @@ export COMPANION_UPLOAD_URLS=""http://master.tus.io/files/,https://master.tus.io/
 
 See [env.example.sh](https://github.com/transloadit/uppy/blob/master/env.example.sh) for an example configuration script.
 
+If a `...SECRET_FILE""` environment variable is defined, the according `secret` will be overridden by the file's content.","I think this note should be added as a comment above the `COMPANION_AWS_SECRET_FILE` (and others) option itself. I fear a lot of users will find the `...SECRET_FILE""` notation confusing, and it also doesn't follow the current pattern of the documentation",2019-06-05 14:37:28
987,"@@ -181,8 +181,8 @@ class Uppy {
   /**
    * Shorthand to set state for a specific file.
    */
-  setFileState (fileID, state) {
-    if (!this.getState().files[fileID]) {
+  setFileState (fileID, state, checkIfFileExist = true) {",Personally I'd take a single extra negligible computation over adding a new parameter to a function. Will there every be a case outside this? Is it worth making a function more complex?,2022-10-19 18:42:22
62,"@@ -182,8 +177,14 @@ function getFileTypeExtension (mimeType) {
   return mimeToExtensions[mimeType] || null
 }
 
-// returns [fileName, fileExt]
+/**
+* Takes a full filename string and returns an array of [fileName, fileExt]
+*
+* @param {string} fullFileName
+* @return {array} [fileName, fileExt]
+*/
 function getFileNameAndExtension (fullFileName) {
+  if (!fullFileName) return","is this still necessary now that we check the `file.name` before calling this function? if this sometimes returns an array and sometimes returns `undefined`, we may have to check the result type whenever we use it.",2017-10-24 07:31:26
185,"@@ -183,16 +183,18 @@ module.exports = class AwsS3Multipart extends Plugin {
         onPartComplete: (part) => {
           // Store completed parts in state.
           const cFile = this.uppy.getFile(file.id)
-          this.uppy.setFileState(file.id, {
-            s3Multipart: Object.assign({}, cFile.s3Multipart, {
-              parts: [
-                ...cFile.s3Multipart.parts,
-                part
-              ]
+          if (cFile) {","Thanks! Maybe we could return early here, something like `if (!cFile) return`, then we don’t need deep nesting.",2018-08-01 15:19:05
496,"@@ -183,7 +183,7 @@ class DropBox extends Provider {
       .auth(token)
       .request((err, resp) => {
         if (err || resp.statusCode !== 200) {
-          logger.error(err, 'provider.dropbox.size.error')
+          logger.error(err, 'provider.dropbox.logout.error')",👍 ,2020-10-21 17:16:08
488,"@@ -185,13 +187,13 @@ class Zoom extends Provider {
   }
 
   _initializeData (body, initialEnd = null) {
-    let end = initialEnd || moment()
-    const accountCreation = adapter.getAccountCreationDate(body)
-    const defaultLimit = end.clone().subtract(DEFAULT_RANGE_MOS, 'months').date(1)
+    let end = initialEnd || moment.utc().tz(body.timezone || 'UTC')","we convert `cursor` and `end` (and everything that relies on it) to local time. this was done this way (rather than just adjusting display in adapter) because we need to show the information in local time anyways, and we need access to from / to dates in local timezone to correctly filter out extra results in the `/provider/list` call once a user clicks into a date range.   I couldn't think of a better way to do it that would retain this from/to local times",2020-09-11 21:17:52
884,"@@ -185,7 +185,6 @@ async function injectGhStars () {
 
 async function injectMarkdown () {
   const sources = {
-    '.github/ISSUE_TEMPLATE/integration_help.md': 'src/_template/integration_help.md',",is this unrelated?,2022-07-22 10:34:12
946,"@@ -186,6 +188,11 @@ Remove `rotateImage`, `protect`, and `canvasToBlob` from the plugin prototype. T
 
 To migrate: use exposed options only.
 
+### Known issues
+
+* [`ERESOLVE could not resolve` on npm install](https://github.com/transloadit/uppy/issues/4057).
+* [@uppy/svelte reports a broken dependency with the Vite bundler](https://github.com/transloadit/uppy/issues/4069).",nit: I think it's nicer to inline the problem and solution here and optionally a link to the issues.,2022-08-31 09:19:37
182,"@@ -186,9 +186,11 @@ module.exports = class ThumbnailGenerator extends Plugin {
       return this.createThumbnail(file, this.opts.thumbnailWidth)
         .then(preview => {
           this.setPreviewURL(file.id, preview)
+          this.uppy.emit('thumbnail:generated', this.uppy.getFile(file.id), preview)
         })
         .catch(err => {
           console.warn(err.stack || err.message)
+          this.uppy.emit('thumbnail:error', this.uppy.getFile(file.id), err)","So `thumbnail:ready` is when all are ready, and `thumbnail:generated` is for single? Maybe add `all-` to it then, `thumbnail:all-ready` or `thumbnail:all-generated`?",2018-07-19 16:34:47
20,"@@ -189,12 +189,13 @@ class Uppy {
       this.addThumbnail(newFile.id)
     }
 
-    if (this.opts.autoProceed) {
-      this.upload()
-        .catch((err) => {
+    if (this.opts.autoProceed && !this.scheduledAutoProceed) {
+      this.scheduledAutoProceed = setTimeout(() => {
+        this.scheduledAutoProceed = null
+        this.upload().catch((err) => {
           console.error(err.stack || err.message)
         })
-      // this.bus.emit('core:upload')
+      }, 4)","This timeout is to debounce uploads being started. Previously this would start a new upload for each individual file that was added, if `autoProceed` is enabled. Eg, dropping 5 files would call upload() 5 times. Since the Transloadit plugin creates an assembly for all files when an upload is started, it's best if it can grab all new files in a single upload() call. With this timeout dropping 5 files calls upload() a single time.",2017-05-31 20:40:00
156,"@@ -189,7 +197,11 @@ module.exports = class Url extends Plugin {
         if (item.kind === 'string' && item.type === 'text/plain') {
           item.getAsString((url) => {
             this.uppy.log(`[URL] Adding file from pasted url: ${url}`)
-            this.addFile(url)
+            try {
+              this.addFile(url)",ditto,2018-05-31 10:19:18
689,"@@ -19,3 +19,4 @@ website/src/_posts/2021-03-*.md
 website/src/_posts/2021-04-*.md
 website/src/_posts/2021-05-*.md
 website/src/_posts/2021-06-*.md
+website/src/docs/react-dashboard.md","Sadly, without this, eslint crashes on:

```
  eslint:cli-engine Lint /home/kvz/code/uppy/website/src/docs/react-dashboard.md +368ms

Oops! Something went wrong! :(

ESLint: 8.0.1

Error: Rules with suggestions must set the `meta.hasSuggestions` property to `true`.
Occurred while linting /home/kvz/code/uppy/website/src/docs/react-dashboard.md/3_3.js:13
Rule: ""react-hooks/exhaustive-deps""
    at Object.report (/home/kvz/code/uppy/node_modules/eslint/lib/linter/linter.js:948:35)
    at reportProblem (/home/kvz/code/uppy/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js:760:15)
    at visitFunctionWithDependencies (/home/kvz/code/uppy/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js:1691:7)
    at visitCallExpression (/home/kvz/code/uppy/node_modules/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js:1737:11)
    at ruleErrorHandler (/home/kvz/code/uppy/node_modules/eslint/lib/linter/linter.js:966:28)
    at /home/kvz/code/uppy/node_modules/eslint/lib/linter/safe-emitter.js:45:58
    at Array.forEach (<anonymous>)
    at Object.emit (/home/kvz/code/uppy/node_modules/eslint/lib/linter/safe-emitter.js:45:38)
    at NodeEventGenerator.applySelector (/home/kvz/code/uppy/node_modules/eslint/lib/linter/node-event-generator.js:290:26)
    at NodeEventGenerator.applySelectors (/home/kvz/code/uppy/node_modules/eslint/lib/linter/node-event-generator.js:319:22)
```

",2021-10-28 11:51:30
405,"@@ -19,6 +21,10 @@ function buildResponseError (xhr, error) {
     error = Object.assign(new Error('Upload error'), { data: error })
   }
 
+  if (isNetworkError(xhr)) {
+    error = new NetworkError(error)","for consistent behaviour, would it make sense to pass xhr to `NetworkError` and return early like so:

```js
if (isNetworkError(xhr)) {
    error = new NetworkError(error, xhr)
    return error
}
```

and then change [this field](https://github.com/transloadit/uppy/pull/2110/files#diff-dcd2ff4fc4c4c209bccb7194f0206d8fR6) from `originalRequest` to `request`.  Changing the field will make it consistent with how it's done in `xhr-upload` already.

Returning early will prevent any unintended changes on the NetworkError object which may be added after the `if(...)` block. This will make the `NetworkError` class consistent. 

If we agree with this suggestion, we can do the same for `MiniXhrUpload`",2020-04-17 12:50:47
53,"@@ -19,7 +19,7 @@ module.exports = class Plugin {
     this.opts = opts || {}
 
     // clear everything inside the target selector
-    this.opts.replaceTargetContent === this.opts.replaceTargetContent || true
+    this.opts.replaceTargetContent = this.opts.replaceTargetContent !== undefined ? this.opts.replaceTargetContent : true",good catch! strange that the linter didn't catch this!,2017-09-20 18:39:06
798,"@@ -19,9 +49,9 @@ module.exports = (redisUrl, redisPubSubScope) => {
    * @param {Function} handler the handler of the event
    */
   function once (eventName, handler) {","Shouldn't this instead be
```js
  function once (eventName, handler) {
    on(eventName, (message) => {
      handler(message)
      removeListener(eventName, handler)
    })
  }
```",2022-03-22 15:07:01
506,"@@ -190,6 +190,7 @@
     .use(Uppy.GoogleDrive, { target: Uppy.Dashboard, companionUrl: COMPANION_ENDPOINT })
     .use(Uppy.Instagram, { target: Uppy.Dashboard, companionUrl: COMPANION_ENDPOINT })
     .use(Uppy.Dropbox, { target: Uppy.Dashboard, companionUrl: COMPANION_ENDPOINT })
+    .use(Uppy.Box, { target: Uppy.Dashboard, companionUrl: COMPANION_ENDPOINT })","excluding from example in the mean time
```suggestion
```",2020-11-13 09:11:40
338,"@@ -190,6 +190,8 @@ export COMPANION_AWS_SECRET=""YOUR AWS SECRET""
 export COMPANION_AWS_SECRET_FILE=""PATH/TO/AWS/SECRET/FILE""
 export COMPANION_AWS_BUCKET=""YOUR AWS S3 BUCKET""
 export COMPANION_AWS_REGION=""AWS REGION""
+# to enable S3 Transfer Acceleration (default: false)
+export export COMPANION_AWS_USE_ACCELERATE_ENDPOINT=""false""","```suggestion
export COMPANION_AWS_USE_ACCELERATE_ENDPOINT=""false""
```",2019-10-11 10:23:53
282,"@@ -190,6 +195,11 @@ module.exports = class XHRUpload extends Plugin {
   }
 
   createBareUpload (file, opts) {
+    // Set `file.data.type` in the blob to `file.meta.type`,
+    // because we might have detected a more accurate file type in Uppy
+    // https://stackoverflow.com/a/50875615
+    file.data = file.data.slice(0, file.data.size, file.meta.type)","This doesn't have any effect for bare uploads, those only send the raw bytes",2019-06-12 08:11:34
892,"@@ -191,6 +191,15 @@ export default class Transloadit extends BasePlugin {
       expectedFiles: fileIDs.length,
       signature: options.signature,
     }).then((newAssembly) => {
+      const files = this.uppy.getFiles().filter(({ id }) => fileIDs.includes(id))
+      if (files.length !== fileIDs.length) {
+        if (files.length === 0) {
+          // All files have been removed, cancelling.","I am confused by this. What are we trying to achieve, why check for files when creating an assembly? “cancelling” — what are we canceling, it just returns null?",2022-07-27 09:39:39
820,"@@ -191,8 +191,7 @@ export default class DragDrop extends UIPlugin {
   }
 
   render () {
-    const dragDropClass = `uppy-Root
-      uppy-u-reset
+    const dragDropClass = `uuppy-u-reset","```suggestion
    const dragDropClass = `uppy-u-reset
```",2022-05-05 09:58:14
855,"@@ -197,8 +197,8 @@ module.exports = {
 
         // Packages that have switched to ESM sources:
         'packages/@uppy/audio/src/**/*.js',
-        'packages/@uppy/aws-s3/src/**/*.js',
         'packages/@uppy/aws-s3-multipart/src/**/*.js',
+        'packages/@uppy/aws-s3/src/**/*.js',","Not sure about this change, when I run `ls packages/@uppy`, `aws-s3` is listed before `aws-s3-multipart`.",2022-05-30 09:42:11
737,"@@ -198,6 +211,9 @@ class RateLimitedQueue {
     }
     this.#downLimit = this.limit
     this.limit = Math.ceil((this.#upperLimit + this.#downLimit) / 2)
+    for (let i = this.#downLimit; i <= this.limit; i++) {
+      this.#queueNext()
+    }","nit: might be nice to write a tiny `times(n, fn)` function for these kinds of behaviors.",2022-01-10 14:55:55
194,"@@ -2,10 +2,10 @@
 . ./env.sh
 
 env \
-  UPPYSERVER_DATADIR=""./output"" \
-  UPPYSERVER_DOMAIN=""localhost:3020"" \
-  UPPYSERVER_PROTOCOL=""http"" \
-  UPPYSERVER_PORT=3020 \
+  COMPANION_DATADIR=""./output"" \
+  COMPANION_DOMAIN=""localhost:3020"" \
+  COMPANION_PROTOCOL=""http"" \
+  COMPANION_PORT=3020 \
   UPPY_ENDPOINTS="""" \",this would be a nice opportunity to namespace this env var name too,2018-09-03 11:53:25
948,"@@ -2,10 +2,28 @@ name: End-to-end tests
 on:
   push:
     branches: [ main ]
+    paths-ignore:
+      - '**.md'
+      - '**.d.ts'
+      - 'examples/**'
+      - 'private/**'
+      - 'website/**'
   pull_request_target:
     types: [ opened, synchronize, reopened, labeled ]
+    paths-ignore:
+      - '**.md'
+      - '**.d.ts'
+      - 'examples/**'
+      - 'private/**'
+      - 'website/**'","Let's add this one since it's already covered by `pull_request` event.
```suggestion
      - 'website/**'
      - .github/workflows/e2e.yml
```",2022-08-31 17:57:46
960,"@@ -2,10 +2,30 @@ name: Companion Deploy
 ","Can we rename this to something like `Companion deploy every commit`?
https://github.com/transloadit/uppy/blob/de6bee4ea1ac2343087cba06c74d214abed053a3/.github/workflows/companion-deploy.yml#L1",2022-09-12 13:42:56
961,"@@ -2,10 +2,30 @@ name: Companion Deploy
 
 on:
   push:
-    tags:
-      - '@uppy/companion@*'
+    branches: [ 'main' ]
+    paths:
+      - yarn.lock
+      - 'packages/@uppy/companion/**'
+      - '.github/workflows/companion.yml'
 
 jobs:
+  npm:
+    name: Upload npm tarball","```suggestion
    name: Create npm tarball artifact
```
as far as I understand, we're not uploading it to npm, just attaching it as an artifact to the github action job (which will expire after a few weeks AFAK)",2022-09-12 13:46:38
938,"@@ -2,11 +2,11 @@ import { describe, expect, it } from '@jest/globals'
 import AssemblyOptions from './AssemblyOptions.js'
 
 describe('Transloadit/AssemblyOptions', () => {
-  it('Validates response from getAssemblyOptions()', async () => {
+  it('Validates response from assemblyOptions()', async () => {",Don't we want to keep this test until the option is actually removed?,2022-08-30 10:05:51
96,"@@ -2,11 +2,19 @@
 * General Uppy styles that apply to everything inside the .Uppy container
 */
 
-.Uppy {
+.uppy {",why this caps change?,2017-12-20 18:19:45
367,"@@ -2,12 +2,17 @@ import Uppy = require('@uppy/core');
 
 declare module Tus {
   export interface TusOptions extends Uppy.PluginOptions {
-    limit: number;
-    endpoint: string;
-    uploadUrl: string;
-    useFastRemoteRetry: boolean;
     resume: boolean;
+    removeFingerprintOnSuccess: boolean;
+    endpoint: string;
+    headers: object;
+    chunkSize: number;
+    withCredentials: booleans;","small typo:
```suggestion
    withCredentials: boolean;
```",2019-12-16 12:27:14
162,"@@ -2,6 +2,14 @@
 
 echo ""Preparing for end to end test: copying static HTML and CSS, building JS""
 rm -rf ./test/endtoend/dist && mkdir ./test/endtoend/dist
-cp ./dist/uppy.min.css ./test/endtoend/dist 
-cp ./test/endtoend/src/index.html ./test/endtoend/dist 
+rm -rf ./test/endtoend/node_modules
+
+UPPY_VERSION=$(cat package.json | grep version | head -1 | awk -F= ""{ print $2 }"" | sed 's/[version:,\"",]//g' | tr -d '[[:space:]]')","How about `node -e 'console.log(require(""./package.json"").version)'` ?",2018-06-04 08:41:56
160,"@@ -2,6 +2,14 @@
 
 echo ""Preparing for end to end test: copying static HTML and CSS, building JS""
 rm -rf ./test/endtoend/dist && mkdir ./test/endtoend/dist
-cp ./dist/uppy.min.css ./test/endtoend/dist 
-cp ./test/endtoend/src/index.html ./test/endtoend/dist 
+rm -rf ./test/endtoend/node_modules
+
+UPPY_VERSION=$(cat package.json | grep version | head -1 | awk -F= ""{ print $2 }"" | sed 's/[version:,\"",]//g' | tr -d '[[:space:]]')
+# archive the uppy package
+npm pack","I think we should also run the `npm run prepublishOnly` script first here, so that the package is exactly the same as the published one (I thought this would happen automatically inside `npm pack` but it doesn't seem to)",2018-06-04 08:13:39
15,"@@ -2,6 +2,15 @@ const yo = require('yo-yo')
 // const nanoraf = require('nanoraf')
 
 /**
+ * Check if an object is a DOM element. Duck-typing based on `nodeType`.
+ *
+ * @param {*} obj
+ */
+function isDOMElement (obj) {
+  return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE
+}
+
+/**
  * Boilerplate that all Plugins share - and should not be used","Maybe we should move this function to a shared `helpers` folder. Like we currently have `Utils`, but I’d like to refactor that and have them as individual modules there.",2017-03-13 15:23:41
801,"@@ -2,6 +2,8 @@ const fs = require('fs')
 const merge = require('lodash.merge')
 const stripIndent = require('common-tags/lib/stripIndent')
 const crypto = require('crypto')
+const uuid = require('uuid')","```suggestion
const uuid = require('uuid') // TODO: migrate to `crypto.getRandomUUID` when removing support for Node.js <14.
```",2022-03-23 10:03:21
648,"@@ -2,6 +2,9 @@ import type { PluginOptions, BasePlugin } from '@uppy/core'
 
 interface DropTargetOptions extends PluginOptions {
     target: string | Element
+    activeClass?: string
+    setMeta: (file: File, event: DragEvent) => Object","We should use a more descriptive type than `Object`, and mark the option as optinal.
```suggestion
    setMeta?: (file: File, event: DragEvent) => Record<string, unknown>
```",2021-08-30 07:56:51
318,"@@ -2,7 +2,7 @@
 <link rel=""stylesheet"" href=""/uppy/uppy.min.css"">
 
 <div class=""UppyForm"">
-  <form action=""//api2.transloadit.com"">
+  <form action=""https://upload-endpoint.uppy.io/upload"">","This doesn't work if we disable Uppy js btw, but it will work if we add `<form action=""https://upload-endpoint.uppy.io/upload"" method=""POST"" enctype=""multipart/form-data"">`.

However, I think that in 2019 having the form tag in an example may be more confusing than helpful ??? (I did get confused there for a second about whether we need the form tag).
What do you think about removing `<form/>`, and just leaving `<div class=""UppyInput""/>`?",2019-08-15 17:44:59
93,"@@ -2,7 +2,7 @@ const Plugin = require('../../core/Plugin')
 const Translator = require('../../core/Translator')
 const { toArray } = require('../../core/Utils')
 const dragDrop = require('drag-drop')
-const html = require('yo-yo')
+const preact = require('preact') // eslint-disable-line",can we tell eslint about what JSX is being compiled down to somehow? `/** @jsx preact.h */` at the top of the file would work but maybe there's an eslint rule option that we can use?,2017-12-14 20:33:10
469,"@@ -2,7 +2,7 @@ const moment = require('moment')
 
 const MIMETYPES = {
   MP4: 'video/mp4',
-  M4A: 'audio/mp4',
+  M4A: 'audio/m4a',","I think this should be audio/mp4. audio/m4a is not officially recognised by IANA as far as i can tell https://www.iana.org/assignments/media-types/media-types.xhtml

the linked RFC https://tools.ietf.org/html/rfc4337#section-3.2 mentions audio/mp4 for audio-only MP4 files, which `.m4a` files are",2020-07-30 12:41:30
237,"@@ -2,7 +2,7 @@ module.exports = function getSocketHost (url) {
   // get the host domain
   var regex = /^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/
   var host = regex.exec(url)[1]
-  var socketProtocol = location.protocol === 'https:' ? 'wss' : 'ws'
+  var socketProtocol = /^http:\/\//.test(url) ? 'ws' : 'wss'",Could use a `/<regex>/i` maybe?,2019-04-01 12:41:39
183,"@@ -2,7 +2,8 @@ const request = require('request')
 // @ts-ignore
 const purest = require('purest')({ request })
 const logger = require('../logger')
-
+const DRIVE_FILE_FIELDS = 'kind,id,name,mimeType,ownedByMe,permissions(role,emailAddress),size,modifiedTime,iconLink,thumbnailLink'",why do we need to explicitly declare these fields?,2018-07-28 14:57:53
339,"@@ -20,12 +20,11 @@ module.exports = (props) => {
       <div class=""uppy-Provider-breadcrumbsIcon"">{props.breadcrumbsIcon}</div>
       {
         props.directories.map((directory, i) => (
-          <Breadcrumb",@goto-bus-stop Breadcrumb seemed to be broken from [this change](https://github.com/transloadit/uppy/commit/733de659da17ee77afba9882633477fb7cd778dd#diff-3a8b11d5620b3d342e81e97925b37113L18). Is there a different way you would have fixed this?,2019-10-14 01:56:26
846,"@@ -20,12 +20,14 @@ function assertServerError (res) {
 export default class AwsS3Multipart extends BasePlugin {
   static VERSION = packageJson.version
 
+  #client
+
   constructor (uppy, opts) {
     super(uppy, opts)
     this.type = 'uploader'
     this.id = this.opts.id || 'AwsS3Multipart'
     this.title = 'AWS S3 Multipart'
-    this.client = new RequestClient(uppy, opts)
+    this.#client = new RequestClient(uppy, opts)","While this change is desirable, it's also a breaking change (in the case someone out there is relying on `client` being public. Could you add a getter and a setter, with a TODO comment asking to remove those on the next major?",2022-05-23 23:30:00
446,"@@ -20,12 +20,16 @@ mv ./kubectl ${HOME}/.local/bin/
 docker build -t transloadit/companion:latest -t transloadit/companion:$TRAVIS_COMMIT -f packages/@uppy/companion/Dockerfile packages/@uppy/companion;
 docker login -u=""$DOCKER_USERNAME"" -p=""$DOCKER_PASSWORD"";
 
-if [[ -z ""${TRAVIS_TAG}"" ]]; then
-  docker push transloadit/companion:$TRAVIS_COMMIT;
-else
+# Push the commit tagged docker image.
+docker push transloadit/companion:$TRAVIS_COMMIT;","This looks great, Thank you. ",2020-06-30 07:00:46
515,"@@ -20,6 +20,7 @@ export { default as StatusBar } from '@uppy/status-bar'
 
 // Acquirers
 export { default as Dropbox } from '@uppy/dropbox'
+export { default as Box } from '@uppy/box'","excluding box from global module for now as it will initially be released as beta
```suggestion
```",2020-11-13 09:17:11
106,"@@ -201,6 +201,20 @@ module.exports = class Dashboard extends Plugin {
     }
   }
 
+  scrollBehaviour (toggle) {
+    if (!this.opts.disablePageScrollWhenModalOpen) return
+    const body = document.querySelector('body')",could be just `document.body` i think?,2018-01-29 08:38:59
107,"@@ -201,6 +201,20 @@ module.exports = class Dashboard extends Plugin {
     }
   }
 
+  scrollBehaviour (toggle) {
+    if (!this.opts.disablePageScrollWhenModalOpen) return
+    const body = document.querySelector('body')
+    switch (toggle) {
+      case 'enable':
+        Object.assign(body.style, { overflow: 'initial', height: 'initial' })","not sure about the implications of doing this…eg if i have set `overflow: hidden` on the body for some reason in my own css, this might change it once the modal closes. I feel like adding and removing a CSS class with `!important` rules from the body might be more reliable?",2018-01-29 08:44:11
105,"@@ -201,6 +201,20 @@ module.exports = class Dashboard extends Plugin {
     }
   }
 
+  scrollBehaviour (toggle) {
+    if (!this.opts.disablePageScrollWhenModalOpen) return
+    const body = document.querySelector('body')
+    switch (toggle) {
+      case 'enable':
+        Object.assign(body.style, { overflow: 'initial', height: 'initial' })
+        break
+      case 'disable':
+        Object.assign(body.style, { overflow: 'hidden', height: '100vh' })
+        break","this looks a bit odd to me, could we just have two separate methods, eg `enableScrollBehavior` and `disableScrollBehavior`, instead?",2018-01-29 08:37:07
161,"@@ -202,6 +203,8 @@ module.exports = class XHRUpload extends Plugin {
       const xhr = new XMLHttpRequest()
       const id = cuid()
 
+      xhr.withCredentials = this.opts.withCredentials
+      ",There is some trailing whitespace here (Do `npm run lint` to check),2018-06-04 08:19:16
447,"@@ -202,6 +271,13 @@ class MultipartUploader {
 
   _uploadPartBytes (index, url, headers) {
     const body = this.chunks[index]
+    const { signal } = this.abortController
+
+    let defer
+    const promise = new Promise((resolve, reject) => {
+      defer = { resolve, reject }","so one downside I see to this approach is that if any unhandled error occurs anywhere in this function, it will not be caught by the Promise, and it will remain unhandled, and possibly unseen. But if we instead house the entire function inside the body of the promise:

```js
return new Promise((resolve, reject) => {
  // entire function body here
  ...
})
```
It would always catch any unforeseen errors that may be thrown.
",2020-07-01 17:10:20
566,"@@ -204,5 +204,4 @@ function server (inputCompanionOptions = {}) {
   return { app, companionOptions }
 }
 
-const { app, companionOptions } = server()
-module.exports = { app, companionOptions, server }
+module.exports = { server }",Maybe change it to `module.exports = server` ? Becase there's nothing else to export here,2021-06-11 06:41:14
904,"@@ -206,7 +207,9 @@ class Uploader {
   }
 
   async _uploadByProtocol () {
-    const { protocol } = this.options
+    // todo a default protocol should not be set. We should ensure that the user specifies their protocol.
+    // after we drop old versions of uppy client we can remove this",todo no longer relevant.,2022-08-10 13:14:55
481,"@@ -209,9 +211,15 @@ class Zoom extends Provider {
         modifiedDate: adapter.getDateFolderModified(end),
         size: null
       })
+
+      if (end.isSame(limit, 'month')) {","is this always the condition at which the loop will stop? If so, should we simply change the while loop to ` while (end.isAfter(limit, 'month')) {` or something similar instead?",2020-09-09 11:12:13
482,"@@ -209,9 +211,15 @@ class Zoom extends Provider {
         modifiedDate: adapter.getDateFolderModified(end),
         size: null
       })
+
+      if (end.isSame(limit, 'month')) {
+        break
+      }
+
       end = start.clone().subtract(1, 'days')
     }
-    data.nextPagePath = adapter.getDateNextPagePath(start)
+
+    data.nextPagePath = adapter.getDateNextPagePath(start.clone(), allResultsShown)","I think we can just do:

```js
data.nextPagePath = allResultsShown ? null : adapter.getDateNextPagePath(start.clone())
```

and leave `getDateNextPagePath` as it was before this PR",2020-09-09 11:16:01
593,"@@ -21,11 +21,10 @@
  * the Set when it has been bundled.
  */
 
-const createStream = require('fs').createWriteStream
-const glob = require('multi-glob').glob
+const { createWriteStream:createStream, mkdirSync } = require('fs')","```suggestion
const { createWriteStream: createStream, mkdirSync } = require('fs')
```

maybe we should just name the variable itself `createWriteStream` to keep it clearer, but not a big deal",2021-06-28 10:05:33
294,"@@ -21,14 +16,12 @@ module.exports = function FileItem (props) {
   const isPaused = file.isPaused || false
   const error = file.error || false
 
-  const fileName = getFileNameAndExtension(file.meta.name).name
-  const truncatedFileName = props.isWide ? truncateString(fileName, 30) : fileName
-
   const showRemoveButton = props.individualCancellation
     ? !isUploaded
     : !uploadInProgress && !isUploaded
 
   const dashboardItemClass = classNames(
+    'uppy-u-reset',","Same here, is it beneficial to add it to the container?",2019-06-24 16:23:11
245,"@@ -21,6 +16,7 @@
     ""cors"": ""^2.8.4"",
     ""formidable"": ""^1.2.1"",
     ""npm-run-all"": ""^4.1.3"",
-    ""rimraf"": ""^2.6.2""
+    ""rimraf"": ""^2.6.2"",
+    ""uppy"": ""^0.30.4""
   }","I wonder if we need to add each individual uppy module instead of a bundle thing. So like `@uppy/core`, `@uppy/xhr-upload` etc.",2019-04-18 12:43:08
553,"@@ -21,6 +21,7 @@ const XHRUpload = require('@uppy/xhr-upload/src')
 const Transloadit = require('@uppy/transloadit/src')
 const Form = require('@uppy/form/src')
 const ImageEditor = require('@uppy/image-editor/src')
+const DomTarget = require('@uppy/dom-target/src')","```suggestion
const DropTarget = require('@uppy/drop-target/src')
```
(and below)",2021-03-31 07:26:39
893,"@@ -21,6 +31,12 @@ Included in: Uppy v3.0.0-beta
 
 - @uppy/companion: remove `searchProviders` wrapper & move `s3` options (Merlijn Vos / #3781)
 - @uppy/companion: remove support for EOL versions of Node.js (Antoine du Hamel / #3784)
+## 3.7.1","```suggestion

## 3.7.1
```",2022-07-27 16:50:02
935,"@@ -21,7 +21,7 @@ export type FileProgress = UppyUtils.FileProgress;
 export type FileRemoveReason = 'removed-by-user' | 'cancel-all';
 
 // Replace the `meta` property type with one that allows omitting internal metadata addFile() will add that
-type UppyFileWithoutMeta<TMeta, TBody> = OmitKey<
+type UppyFileWithoutMeta<TMeta extends IndexedObject<any>, TBody extends IndexedObject<any>> = OmitKey<",Can we avoid a lot of duplication here by creating a new type that already extends it?,2022-08-29 09:02:05
710,"@@ -21,7 +21,9 @@ PLUGINS=$(awk '{ if ($1 == ""spec:"") print $2 }' .yarnrc.yml)
 echo ""$PLUGINS"" | xargs -n1 -t corepack yarn plugin remove",maybe add a comment to the top of this script. I'm not 100% sure what is the purpose of it. Is it run from github actions? Or just a manual helper script to run on dev machine,2021-11-23 12:02:30
708,"@@ -21,7 +21,9 @@ PLUGINS=$(awk '{ if ($1 == ""spec:"") print $2 }' .yarnrc.yml)
 echo ""$PLUGINS"" | xargs -n1 -t corepack yarn plugin remove
 
 cp package.json .yarn/cache/tmp.package.json","I'm not sure how nice it is to use yarn's cache dir, but probably they will never put a file tmp.package.json file there, but you never know 😄",2021-11-23 12:00:49
709,"@@ -21,7 +21,9 @@ PLUGINS=$(awk '{ if ($1 == ""spec:"") print $2 }' .yarnrc.yml)
 echo ""$PLUGINS"" | xargs -n1 -t corepack yarn plugin remove
 
 cp package.json .yarn/cache/tmp.package.json
-sed ""s#yarn\"": \""$CURRENT_VERSION\""#yarn\"": \""$LAST_VERSION\""#;s#\""yarn@$CURRENT_VERSION\""#\""yarn@$LAST_VERSION\""#"" .yarn/cache/tmp.package.json > package.json
+sed ""s#\""yarn\"": \""$CURRENT_VERSION\""#\""yarn\"": \""$LAST_VERSION\""#;s#\""yarn@$CURRENT_VERSION\""#\""yarn@$LAST_VERSION\""#"" .yarn/cache/tmp.package.json > package.json","I think it can improved by using `sed -i` (in-place edit), then no need for these temp files?",2021-11-23 12:01:48
92,"@@ -210,9 +210,12 @@ module.exports = class DashboardUI extends Plugin {
     document.body.classList.add('is-UppyDashboard-open')
     document.body.style.top = `-${this.savedDocumentScrollPosition}px`
 
+    this.updateDashboardElWidth()
+    this.setFocusToFirstNode()
+
     // timeout is needed because yo-yo/morphdom/nanoraf; not needed without nanoraf",lets get rid of this outdated comment! might be confusing otherwise,2017-12-13 21:53:10
371,"@@ -212,25 +212,33 @@ const getOptionsMiddleware = (options) => {
   if (options.providerOptions.s3) {
     const S3 = require('aws-sdk/clients/s3')
     const AWS = require('aws-sdk')
-    const config = options.providerOptions.s3
+    const s3ProviderOptions = options.providerOptions.s3
+    const s3Options = Object.assign({",should we rather introduce a field that covers these options in `providerOptions.s3` itself? So maybe `providerOptions.s3.awsClientOptions` (or something better)?,2020-01-21 11:24:02
802,"@@ -215,6 +215,22 @@ module.exports = class Tus extends BasePlugin {
         if (typeof opts.onBeforeRequest === 'function') {
           opts.onBeforeRequest(req)
         }
+
+        if (queuedRequest == null) {",This good definitely use an extensive comment on what is going on here and why it works. It seems a bit random if you don't know the context,2022-03-24 06:40:29
427,"@@ -215,7 +215,7 @@ class DropBox extends Provider {
   _error (err, resp) {
     if (resp) {
       const fallbackMessage = `request to ${this.authProvider} returned ${resp.statusCode}`
-      const errMsg = resp.body.error_summary ? resp.body.error_summary : fallbackMessage
+      const errMsg = (resp.body || {}).error_summary ? resp.body.error_summary : fallbackMessage",this change can be ignored. I accidentally checked out of [this branch](https://github.com/transloadit/uppy/pull/2264/files),2020-05-17 19:43:33
584,"@@ -216,7 +216,7 @@ declare module Uppy {
      * This overload will be removed in Uppy 2.0.
      */
     use(pluginClass: TUseStrictTypes extends StrictTypes ? never : new (uppy: this, opts: any) => Plugin<any>, opts?: object): this
-    getPlugin(name: string): Plugin
+    getPlugin<TPlugin = Plugin>(name: string): TPlugin","maybe
```suggestion
    getPlugin<TPlugin extends Plugin = Plugin>(name: string): TPlugin
```
so you can't implicitly cast to a totally different type (you could still do a wrong thing like `getPlugin<AwsS3>('Url')` but at least not `getPlugin<number>('Url')`)",2021-06-25 13:13:37
806,"@@ -216,7 +216,7 @@ module.exports = class Tus extends BasePlugin {
           opts.onBeforeRequest(req)
         }
 
-        if (Object.hasOwn(queuedRequest, 'shouldBeRequeued')) {
+        if (queuedRequest.hasOwnProperty('shouldBeRequeued')) {",I think this works as long as `queuedRequest` is always an object,2022-03-28 12:16:42
80,"@@ -218,7 +218,7 @@ class Uppy {
     this.uploaders.push(fn)
   }
 
-  removeUploader (fn) {
+  _removeUploader (fn) {","`removeUploader` is used in upload plugins, so it should be public (similar to `removePreProcessor`)",2017-12-10 21:41:45
281,"@@ -218,7 +233,7 @@ const getOptionsMiddleware = (options) => {
       options,
       s3Client,
       authToken: req.header('uppy-auth-token') || req.query.uppyAuthToken,
-      clientVersion: req.header('uppy-versions') || req.query.uppyVersions,
+      clientVersion: req.header('uppy-versions') || decodeURIComponent(req.query.uppyVersions) || '1.0.0',","This still resolves to `undefined` instead of `1.0.0` in my tests, because, I think:

`typeof req.header('uppy-versions')` returns `undefined`
`typeof decodeURIComponent(req.query.uppyVersions)` returns `string` 😱
`console.log(decodeURIComponent(req.query.uppyVersions))` returns `undefined`",2019-06-11 18:06:12
636,"@@ -219,32 +238,46 @@ class MultipartUploader {
     })
   }
 
-  _uploadPartRetryable (index) {
+  _prepareUploadParts (candidates) {","Can we use a private method here? Given https://github.com/transloadit/uppy/pull/3076, it would make sense to use that instead of a trailing underscore method I think. Also I'd prefer to make it async to avoid `Promise.resolve().then` pattern that we don't need now that we've dropped IE support.
```suggestion
  async #prepareUploadParts (candidates) {
```",2021-08-06 15:21:16
634,"@@ -219,32 +238,46 @@ class MultipartUploader {
     })
   }
 
-  _uploadPartRetryable (index) {
+  _prepareUploadParts (candidates) {
+    this.lockedCandidatesForBatch.push(...candidates)","```suggestion
    this.lockedCandidatesForBatch.concat(candidates)
```",2021-08-06 09:15:11
989,"@@ -22,15 +22,15 @@
   },
   ""dependencies"": {
     ""@uppy/instagram"": ""workspace:^"",
-    ""@uppy/url"": ""workspace:^""
-  },
-  ""peerDependencies"": {
-    ""expo"": "">=33.0.0"",
+    ""@uppy/url"": ""workspace:^"",
     ""expo-document-picker"": "">=6.0.0"",
     ""expo-image-picker"": "">=6.0.0"",
     ""expo-permissions"": "">=6.0.0"",
-    ""react"": ""^16.0.0 || ^17.0.0 || ^18.0.0"",
-    ""react-native"": ""*"",
     ""react-native-super-grid"": ""*""","these needs clearly to be deps and not peerdeps, you even receive an error if you try to import uppy/react-native without directly installing also these expo libs",2022-10-22 00:48:29
758,"@@ -22,4 +22,5 @@ export default async function commit (spawnOptions, ...files) {
                  || `git@github.com:${REPO_OWNER}/${REPO_NAME}.git`
 
   console.log(`Please run \`git push ${remote} ${sha}:refs/heads/release\`.`)
+  console.log('Soon, a Release PR should open on GitHub. Do not merge it manually! Review the PR thoroughly, and if everything looks good to you, approve the PR.')","```suggestion
  console.log(
      'Once you have pushed to the remote branch, an automation will kick ' +
      'off and open a release candidate PR on the GitHub repository. Do not ' +
      'merge it manually! Review the PR thoroughly, you may close and ' +
      're-open it so the CI can run on it. If everything looks good to you, ' +
      'approve the PR, do not merge it manually, it will be automatically ' +
      'merged after the new versions have been automatically published to ' +
      'the npm registry.'
    )
```",2022-02-16 14:32:52
276,"@@ -22,6 +22,20 @@ describe('Test Provider options', () => {
     expect(grantConfig.instagram.secret).toBe('instagram_secret')
   })
 
+  test('adds provider options for secret files', () => {
+    process.env.COMPANION_DROPBOX_SECRET_FILE = process.env.PWD + '/test/resources/dropbox_secret_file'
+    process.env.COMPANION_GOOGLE_SECRET_FILE = process.env.PWD + '/test/resources/google_secret_file'
+    process.env.COMPANION_INSTAGRAM_SECRET_FILE = process.env.PWD + '/test/resources/instagram_secret_file'",maybe we should test that it truly overrides by setting values for `COMPANION_INSTAGRAM_SECRET` (and others) as well?,2019-06-05 14:39:06
516,"@@ -22,6 +22,7 @@ exports.StatusBar = require('@uppy/status-bar')
 
 // Acquirers
 exports.Dropbox = require('@uppy/dropbox')
+exports.Box = require('@uppy/box')","excluding box from global module for now as it will initially be released as beta

```suggestion
```",2020-11-13 09:17:44
887,"@@ -22,7 +22,7 @@ export interface AwsS3MultipartOptions extends PluginOptions {
     ) => MaybePromise<AwsS3Part[]>
     prepareUploadParts?: (
       file: UppyFile,
-      partData: { uploadId: string; key: string; partNumbers: Array<number>; chunks: { [k: number]: Blob } }
+      partData: { uploadId: string; key: string; parts: Record<number, Blob> }","my understanding of type [Record<K, T>](https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type) implies that `K` is the type of the keys expected, while `T` is the type of values expected.

So `Record<number, Blob>` would expect something like:
```ts
const parts = {1: new Blob('foo'), 4: new Blob('bar)}
```

Is that the intended type?

My thought is that we want something along the lines of `Array<{number: number; chunk: Blob}>` instead.",2022-07-25 19:45:10
71,"@@ -220,7 +221,7 @@ class Uppy {
     this.setState({meta: newMeta})
   }
 
-  updateMeta (data, fileID) {
+  setFileMeta (fileID, data) {","should we add an error like this for one release?

```js
updateMeta (data, fileID) {
  throw new Error('The Uppy#updateMeta(data, fileID) method has been renamed to setFileMeta(fileID, data)')
}
```",2017-11-29 14:54:20
483,"@@ -22034,7 +22035,6 @@
       ""version"": ""1.18.1"",
       ""resolved"": ""https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.1.tgz"",
       ""integrity"": ""sha512-7mz/721AbnJwIVbnaSv1Cz3Am0ZLT/UBwkC92VlxhXv/k/BBQfM2fXElQNC27BVGr0uwUpplYPQM9LnaBMR5NQ=="",
-      ""dev"": true,","I'm not sure why this is no longer ""dev"": true, as this wasn't changed. Please let me know if I should omit this change (likewise below)",2020-09-11 21:00:25
478,"@@ -225,7 +226,7 @@ class Zoom extends Provider {
       items: [],
       username: adapter.getUserEmail(userResponse)
     }
-    const items = results.meetings || results.recording_files
+    const items = results.meetings || results.recording_files.filter(file => file.file_type !== 'TIMELINE')","timeline files are json files that are intended for programmatic use, so we should omit them from the user's view (the same way that zoom omits these files from the their recording files list in zoom.us/recordings).",2020-09-04 17:00:44
657,"@@ -227,6 +218,15 @@ module.exports = class MiniXHRUpload {
         xhr.setRequestHeader(header, opts.headers[header])
       })
 
+      const queuedRequest = this.requests.run(() => {
+        xhr.send(data)
+        return () => {
+          // eslint-disable-next-line no-use-before-define","```suggestion
```",2021-08-31 12:30:25
827,"@@ -229,9 +230,9 @@ module.exports = class Tus extends BasePlugin {
             done()
             return () => {}
           })
-          return p
+          return Promise.all([p, userProvidedPromise])",Might be nice to add a comment here why we need two promises here?,2022-05-10 16:10:50
727,"@@ -23,12 +22,12 @@ describe('Chaos monkey', function test () {
     const types = ['application/octet-stream', 'text/plain']
     const generate = {
       'application/octet-stream' () {
-        const len = Math.round(Math.random() * 5000000)
+        const len = Math.round(Math.random() * 5_000_000)","fancy, I forgot again this syntax exists",2021-12-16 09:56:42
278,"@@ -23,12 +25,15 @@ module.exports = class RequestClient {
   get defaultHeaders () {
     return {
       'Accept': 'application/json',
-      'Content-Type': 'application/json'
+      'Content-Type': 'application/json',
+      'Uppy-Versions': '@uppy/companion-client=1.0.3'","We’ve now added `Plugin.VERSION` property available on all plugins, including `RequestClient`, so we should send that instead of the hardcoded value.",2019-06-05 17:11:08
417,"@@ -23,18 +23,27 @@ const getFingerprint = require('./getFingerprint')
  */
 const tusDefaultOptions = {
   endpoint: '',
-  resume: true,
+","Pulled in the latest default options. Two notable changes:
- the resume option has been removed (see comments below)
- the retryDelays option is enabled by default",2020-05-03 15:47:12
949,"@@ -23,6 +23,11 @@ jobs:
           tag-sha: true
           tag-match: |
             \d{1,3}.\d{1,3}.\d{1,3}
+      - name: Get Companion version
+        id: package-version
+        uses: martinbeentjes/npm-get-version-action@main","We should use a SHA here instead of `main`, otherwise the workflow is vulnerable if a malicious commit gets pushed to that repo we don't control. But do we even need to use an external action for this?
```suggestion
        run: jq -r '""::set-output name=current_version::"" + .version' < packages/@uppy/companion/package.json
```

Alternatively, we could use `GITHUB_REF` which would be set to the git tag that triggered the workflow (e.g. `@uppy/companion@4.0.1`).",2022-08-31 18:03:27
313,"@@ -23,6 +23,40 @@ uppy.use(FileInput, {
 
 The `@uppy/xhr-upload` example uses `@uppy/file-input` with the [`pretty`](#pretty-true) option enabled.
 
+## Custom file input","In the S3 plugins, we have additional sections below the `Options` one:
![image](https://user-images.githubusercontent.com/1006268/62628981-9c178f00-b92c-11e9-8fa8-bf5d81f62193.png)
for consistency, it might be best to move this to the end as well",2019-08-07 14:01:44
298,"@@ -23,6 +23,7 @@ module.exports = class Form extends Plugin {
       resultName: 'uppyResult',
       getMetaFromForm: true,
       addResultToForm: true,
+      replaceResultInFormWithNew: true,",":bike: :derelict_house: , but  maybe the default option should be `multipleResults: false` or `combineMultipleResults: false`? i feel like `replaceResultInFormWithNew` is very verbose but also doesn't immediately clarify what it's for.",2019-07-01 12:16:16
595,"@@ -23,7 +23,6 @@ class Slide extends Component {
     }
   }
 
-  // TODO: refactor this component to not use componentWillUpdate",Hum why remove this TODO? `componentWillUpdate` is still deprecated – it's been renamed to `UNSAFE_componentWillUpdate` in React 17: https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate,2021-06-28 10:12:54
416,"@@ -23,9 +23,9 @@ function isReactNative () {
 // For React Native and Cordova, we let tus-js-client’s default
 // fingerprint handling take charge.
 module.exports = function getFingerprint (uppyFileObj) {
-  return function (file, options, callback) {
+  return function (file, options) {",The fingerprint methods are now not callback-based but use Promises instead.,2020-05-03 15:46:08
456,"@@ -230,6 +235,22 @@ module.exports = class Dashboard extends Plugin {
     })
   }
 
+  openFileEditor = (file) => {
+    const { targets } = this.getPluginState()
+
+    this.setPluginState({
+      showFileEditor: true,
+      activeOverlayType: 'FileEditor'
+    })
+
+    const editors = this._getEditors(targets)
+    editors.forEach((editor) => {
+      const editorPlugin = this.uppy.getPlugin(editor.id)
+      editorPlugin.selectFile(file)
+      setTimeout(editorPlugin.initEditor, 4)
+    })","❓Questionable way of looping through editors and calling `selectFile` + `initEditor`, with the latter requiring “next tick”.",2020-07-13 09:18:32
379,"@@ -232,14 +238,18 @@ class Uploader {
     }
 
     this.writeStream.write(chunk, () => {
-      logger.debug(`${this.bytesWritten} bytes`, 'uploader.download.progress', this.shortToken)
+      // logger.debug(`${this.bytesWritten} bytes`, 'uploader.download.progress', this.shortToken)",leftover?,2020-03-05 14:31:11
119,"@@ -233,9 +233,11 @@ module.exports = class Webcam extends Plugin {
       return this.getImage()
     }).then((tagFile) => {
       this.captureInProgress = false
-      this.uppy.addFile(tagFile)
       const dashboard = this.uppy.getPlugin('Dashboard')
       if (dashboard) dashboard.hideAllPanels()
+      return this.uppy.addFile(tagFile).catch(() => {
+        // Ignore
+      })","But here we are also handling the error later, catching nonetheless.",2018-02-09 05:36:16
635,"@@ -236,8 +236,9 @@ module.exports = class MiniXHRUpload {
 
       xhr.open(opts.method.toUpperCase(), opts.endpoint, true)
       // IE10 does not allow setting `withCredentials` and `responseType`
-      // before `open()` is called.
-      xhr.withCredentials = opts.withCredentials
+      // before `open()` is called. It’s important to set withCredentials
+      // to a boolean, otherwise React Native crashes","nit
```suggestion
      // to a boolean, otherwise React Native crashes.
```",2021-08-06 13:30:09
850,"@@ -237,6 +237,7 @@ module.exports = {
         'packages/@uppy/webcam/src/**/*.js',
         'packages/@uppy/xhr-upload/src/**/*.js',
         'packages/@uppy/zoom/src/**/*.js',
+        'packages/@uppy/remote-sources/src/**/*.js',",Can you keep that list alphabetically ordered please?,2022-05-26 20:21:37
704,"@@ -237,7 +237,7 @@ const validateConfig = (companionOptions) => {
     fs.accessSync(`${companionOptions.filePath}`, fs.R_OK | fs.W_OK) // eslint-disable-line no-bitwise
   } catch (err) {
     throw new Error(
-      `No access to ""${companionOptions.filePath}"". Please ensure the directory exists and with read/write permissions.`
+      `No access to ""${companionOptions.filePath}"". Please ensure the directory exists and with read/write permissions.`,","Not sure about more commas, is this for the same reason, to add new args easier?",2021-11-05 11:18:20
629,"@@ -237,7 +237,7 @@ module.exports = class MiniXHRUpload {
       xhr.open(opts.method.toUpperCase(), opts.endpoint, true)
       // IE10 does not allow setting `withCredentials` and `responseType`
       // before `open()` is called.","```suggestion
// before `open()` is called.
// it’s important to set withCredentials to true or false, not undefinied, otherwise React Native crashes
```",2021-08-02 13:43:07
628,"@@ -237,7 +237,7 @@ module.exports = class MiniXHRUpload {
       xhr.open(opts.method.toUpperCase(), opts.endpoint, true)
       // IE10 does not allow setting `withCredentials` and `responseType`
       // before `open()` is called.
-      xhr.withCredentials = opts.withCredentials
+      xhr.withCredentials = opts.withCredentials || false","Would that work?
```suggestion
      xhr.withCredentials = Boolean(opts.withCredentials)
```",2021-08-02 13:42:38
673,"@@ -24,9 +24,10 @@
   ""pre-commit"": ""lint:staged"",
   ""license"": ""MIT"",
   ""engines"": {
-    ""npm"": ""7.x"",
-    ""node"": ""^v14.17.0 || >=v16.0.0""
+    ""node"": ""^v14.17.0 || >=v16.0.0"",
+    ""yarn"": ""3.0.2""",Can we make this a bit less strict? Won't we get a warning currently if you use for instance `3.0.3`?,2021-10-04 14:00:34
680,"@@ -241,7 +241,15 @@ class Uploader {
    * @param {Function} callback
    */
   onSocketReady (callback) {
-    emitter().once(`connection:${this.token}`, () => callback())
+    /** @type {any} */ // WriteStream.pending was added in Node.js 11.2.0
+    const stream = this.writeStream",Why was this added?,2021-10-23 06:11:26
859,"@@ -242,7 +242,14 @@ export default class Transloadit extends BasePlugin {
       this.uppy.log(`[Transloadit] Created Assembly ${assemblyID}`)
       return assembly
     }).catch((err) => {
-      throw new ErrorWithCause(`${this.i18n('creatingAssemblyFailed')}: ${err.message}`, { cause: err })
+      const wrapped = new ErrorWithCause(`${this.i18n('creatingAssemblyFailed')}: ${err.message}`, { cause: err })
+      if (err.details) {","I think we want to pass the value along even if it's falsy:
```suggestion
      if ('details' in err) {
```",2022-05-30 13:07:56
73,"@@ -243,6 +242,7 @@ module.exports = class Tus extends Plugin {
 
   connectToServerSocket (file) {
     const token = file.serverToken
+    console.log('123', token)",stray console.log? :),2017-12-04 14:53:37
393,"@@ -248,32 +248,26 @@ module.exports = class XHRUpload extends Plugin {
           this.uploaderEvents[file.id] = null
         }
 
-        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {
-          const body = opts.getResponseData(xhr.responseText, xhr)
-          const uploadURL = body[opts.responseUrlFieldName]
+        const body = opts.getResponseData(xhr.responseText, xhr)
+        const uploadURL = body[opts.responseUrlFieldName]","If there was an error, there may not be any response data—this was why it was initially separate. There can't really be an `uploadURL` if the upload failed :) we can do a check like this though:
```suggestion
        const uploadURL = body != null ? body[opts.responseUrlFieldName] : null
```",2020-03-30 11:08:13
662,"@@ -249,4 +249,8 @@ const validateConfig = (companionOptions) => {
       }
     })
   }
+
+  if (companionOptions.uploadUrls == null || companionOptions.uploadUrls.length === 0) {
+    logger.warn('Running without an uploadUrls whitelist is a security risk if running in production', 'startup.uploadUrls')","```suggestion
    logger.warn('Running without uploadUrls specified is a security risk if running in production', 'startup.uploadUrls')
```",2021-09-09 09:52:29
148,"@@ -25,14 +24,12 @@ uppy.use(FileInput, {
 })
 ```
 
+> Note that certain [restrictions set in Uppy’s main options](/docs/uppy#restrictions), namely `maxNumberOfFiles` and `allowedFileTypes`, affect the system file picker dialog. If `maxNumberOfFiles: 1`, users will only be able to select one file, and `allowedFileTypes: ['image/*, .jpg']` means only image or files with `.jpg` extension will be selectable.",ditto re: overlapping file types,2018-05-14 07:50:30
179,"@@ -25,51 +18,6 @@ function browserSupportsChooseFile (capabilities) {
          capabilities.platformName !== 'Android'
 }","This `browserSupportsChooseFile ` is not needed here, if we have `supportsChooseFile`?",2018-07-18 04:03:25
911,"@@ -25,6 +25,10 @@ const sendErrorToConsole = originalErr => err => {
   console.error(error, originalErr)
 }
 
+const COMPANION = 'https://api2.transloadit.com/companion'
+// Regex matching acceptable postMessage() origins for authentication feedback from companion.
+const ALLOWED_COMPANION_PATTERN = /\.transloadit\.com$/","Since this is a breaking change already, good opportunity to use more intention revealing names. `COMPANION` sounds like it contains the instance. 

```suggestion
const COMPANION_URL = 'https://api2.transloadit.com/companion'
// Regex matching acceptable postMessage() origins for authentication feedback from companion.
const COMPANION_URL_PATTERN = /\.transloadit\.com$/
```",2022-08-16 13:01:41
760,"@@ -25,7 +25,7 @@ import DropTarget from '@uppy/drop-target'
 import Audio from '@uppy/audio'
 /* eslint-enable import/no-extraneous-dependencies */
 
-// DEV CONFIG: create a .env.local file to customize those values.
+// DEV CONFIG: create a .env file in the project root directory to customize those values.",nice 👍 i forgot about that,2022-02-17 14:27:41
546,"@@ -25,7 +90,7 @@
     ""jsdoc/check-types"": [""warn""],
     ""jsdoc/newline-after-description"": [""warn""],
     ""jsdoc/valid-types"": [""warn""],
-    ""jsdoc/check-indentation"": [""off""]
+    ""jsdoc/check-indentation"": 0","i think ""off"" is clearer 😇 ",2021-03-10 08:03:39
233,"@@ -25,8 +25,10 @@ module.exports = class RequestClient {
     }
   }
 
-  get headers () {
-    return Object.assign({}, this.defaultHeaders, this.opts.serverHeaders || {})
+  headers () {
+    return new Promise((resolve, reject) => {
+      resolve(Object.assign({}, this.defaultHeaders, this.opts.serverHeaders || {}))",This can be `return Promise.resolve(Object.assign(...))`,2019-03-25 13:01:35
391,"@@ -251,6 +254,42 @@ module.exports = class Transloadit extends Plugin {
     })
   }
 
+  _createAssemblyWatcher (assemblyID, fileIDs, uploadID) {
+  // AssemblyWatcher tracks completion states of all Assemblies in this upload.
+    const watcher = new AssemblyWatcher(this.uppy, assemblyID)
+
+    watcher.on('assembly-upload', (id) => {","When I try it with this PR and `waitForEncoding: true`, the postprocessing step is never entered. I think it's because the `assembly-upload` event is not actually fired anywhere right now.",2020-03-30 09:41:32
552,"@@ -252,6 +252,33 @@ It gets passed `({value, onChange}, h)` where `value` is the current value of th
 })
 ```
 
+If you want the meta fields to be dynamically assigned depending on the file type, pass a function:","```suggestion
If you’d like the meta fields to be dynamically assigned depending on, for instance, the file type, pass a function:
```",2021-03-30 20:32:43
551,"@@ -252,6 +252,33 @@ It gets passed `({value, onChange}, h)` where `value` is the current value of th
 })
 ```
 
+You can also specify a function that takes a [File Object](https://uppy.io/docs/uppy/#File-Objects) and returns an array of UI field objects:","Maybe add “instead of an array” or similar? Not sure if it’s clear right now that this is about `metaFields`, because the example above refers to `render`. ",2021-03-29 20:02:35
734,"@@ -252,6 +259,24 @@ module.exports = class Tus extends BasePlugin {
         resolve(upload)
       }
 
+      uploadOptions.onShouldRetry = (err, retryAttempt, options) => {
+        if (err?.originalResponse?.getStatus() === 429) {",Needs a comment that 429 is a rate limit error.,2022-01-03 19:42:01
732,"@@ -252,6 +259,24 @@ module.exports = class Tus extends BasePlugin {
         resolve(upload)
       }
 
+      uploadOptions.onShouldRetry = (err, retryAttempt, options) => {
+        if (err?.originalResponse?.getStatus() === 429) {
+          if (!this.requests.isPaused) {",Without knowing the full API ... an `isPaused` on a plural noun seems fishy. I'd expect `this.requests` to be a collection of request objects that would each have an `isPaused` property. I guess it's for ease-of-use/simplification to have the `isPaused` property on the collection and then `pause()` and `resume()` all requests at the same time.,2022-01-03 19:26:07
733,"@@ -252,6 +259,24 @@ module.exports = class Tus extends BasePlugin {
         resolve(upload)
       }
 
+      uploadOptions.onShouldRetry = (err, retryAttempt, options) => {
+        if (err?.originalResponse?.getStatus() === 429) {
+          if (!this.requests.isPaused) {
+            const { done, value } = this.#retryDelayIterator.next()","What if `this.opts.retryDelays` was `null`, then `this.#retryDelayIterator` might be `null` and not be an iterator and thus have no `next()` method, causing a hard error. Should `this.opts.retryDelays` be set to `[]` if the consumer passes a useless value for it?",2022-01-03 19:37:49
574,"@@ -253,6 +249,6 @@ declare module Uppy {
  * private uppy: Uppy<Uppy.StrictTypes>;
  * ```
  */
-declare function Uppy<TUseStrictTypes extends Uppy.TypeChecking = Uppy.TypeChecking>(opts?: Uppy.UppyOptions): Uppy.Uppy<TUseStrictTypes>
+// declare function Uppy<TUseStrictTypes extends Uppy.TypeChecking = Uppy.TypeChecking>(opts?: Uppy.UppyOptions): Uppy.Uppy<TUseStrictTypes>
 
-export = Uppy
+// export = Uppy","```suggestion
export default Uppy
```",2021-06-18 08:30:32
14,"@@ -253,6 +254,27 @@ module.exports = class View {
     })
   }
 
+  handleAuth () {
+    let urlId = Math.floor(Math.random() * 999999) + 1
+    let redirect = `${location.href}${location.search ? '&' : '?'}id=${urlId}`
+
+    const authState = btoa(JSON.stringify({ redirect }))
+    const link = `${this.plugin.opts.host}/connect/${this.Provider.authProvider}?state=${authState}`
+
+    let authWindow = window.open(link, '_blank')
+
+    let checkAuth = () => {","I’d probably prefer to use `let` only if we need to set/reset later, `const` would seem more appropriate here.",2017-01-27 23:13:48
774,"@@ -255,22 +255,24 @@ class Uploader {
     const useFormData = useFormDataIsSet ? req.body.useFormData : true
 
     return {
-      companionOptions: req.companion.options,
+      // Client provided info.","```suggestion
      // Client provided info (must be validated and not blindly trusted):
```",2022-03-03 12:41:35
971,"@@ -255,26 +256,30 @@ export default class ProviderView extends View {
       // Check if it's a string before doing the JSON.parse to maintain support
       // for older Companion versions that used object references
       const data = typeof e.data === 'string' ? JSON.parse(e.data) : e.data
+      window.removeEventListener('message', handlePostMessageToken)
+      handleToken(data)","not sure what's happening here, care to explain with a comment?",2022-09-14 19:54:31
964,"@@ -25553,7 +25553,7 @@ hexo-filter-github-emojis@arturi/hexo-filter-github-emojis:
   languageName: node
   linkType: hard
 
-""moment@npm:>= 2.9.0, moment@npm:^2.10.6, moment@npm:^2.22.2, moment@npm:^2.29.2"":
+""moment@npm:>= 2.9.0, moment@npm:^2.10.6, moment@npm:^2.22.2, moment@npm:^2.29.4"":
   version: 2.29.4","Clearly we are already using `2.29.4`, I'm not sure I get what this PR is doing.",2022-09-13 11:30:18
535,"@@ -256,7 +256,7 @@ module.exports = class Tus extends Plugin {
         }
       }
 
-      /** @type {{ [name: string]: string }} */
+      /** @type {Record<string, string>} */",Working around a possible limitation in the JSDoc plugin's typescript syntax checking. This means the same thing,2020-11-30 09:51:00
48,"@@ -259,7 +271,7 @@ module.exports = class DashboardUI extends Plugin {
   }
 
   handleDrop (files) {
-    this.core.log('All right, someone dropped something...')
+    this.core.log('[Dashboard] Files were droppeded')",tiniest nit: 'droppeded' → 'dropped',2017-09-09 11:48:16
509,"@@ -26,6 +26,7 @@ const Uppy = require('@uppy/core')
 const Dashboard = require('@uppy/dashboard')
 const GoogleDrive = require('@uppy/google-drive')
 const Dropbox = require('@uppy/dropbox')
+const Box = require('@uppy/box')","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:12:59
111,"@@ -26,7 +26,10 @@ Unit tests are using Jest and can be run with:
 
 For acceptance (or end to end) tests, we use [Webdriverio](http://webdriver.io). For it to run locally, you need to install selenium standalone server, just follow [the guide](http://webdriver.io/guide.html) to do so. You can also install Selenium Standalone server from NPM:
 
-`npm install selenium-standalone`
+```bash
+npm install selenium-standalone
+selenium-standalone install
+```",I wonder if it’s better to do `npm install selenium-standalone -g` as suggested on https://www.npmjs.com/package/selenium-standalone,2018-02-01 05:41:56
775,"@@ -261,6 +232,8 @@ class Uppy {
 
     this.i18nInit()
 
+    this.#restricter.opts = this.opts","Instead of reassigning this all the time, maybe in the Restrictors constructor we could instead pass a function `getOptions: () => this.opts` that it can call. that way we don't have to duplicate the state in two places?",2022-03-04 06:23:29
780,"@@ -263,7 +263,7 @@ export COMPANION_PERIODIC_PING_INTERVAL=60000
 export COMPANION_PERIODIC_PING_STATIC_JSON_PAYLOAD=""{\""static\"":\""data\""}""
 ```
 
-See [env.example.sh](https://github.com/transloadit/uppy/blob/main/env.example.sh) for an example configuration script.
+See [env.example.sh](https://github.com/transloadit/uppy/blob/main/.env.example) for an example configuration script.","```suggestion
See [`.env.example`](https://github.com/transloadit/uppy/blob/main/.env.example) for an example environment configuration file.
```",2022-03-11 12:03:39
897,"@@ -264,17 +264,10 @@ class TransitionGroup extends Component {
   render ({ childFactory, transitionLeave, transitionName, transitionAppear, transitionEnter, transitionLeaveTimeout, transitionEnterTimeout, transitionAppearTimeout, component, ...props }, { children }) {
     // TODO: we could get rid of the need for the wrapper node",But we are not solving / getting rid of the todo?,2022-08-01 22:49:30
151,"@@ -265,9 +289,9 @@ module.exports = class Dashboard extends Plugin {
 
   onKeydown (event) {
     // close modal on esc key press
-    if (event.keyCode === 27) this.requestCloseModal(event)
+    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)
     // maintainFocus on tab key press
-    if (event.keyCode === 9) this.maintainFocus(event)
+    if (event.keyCode === TAB_KEY) this.maintainFocus(event)",yay nice,2018-05-29 09:20:18
234,"@@ -27,14 +27,14 @@ Object {
       ""name"": ""foo.jpg"",
       ""preview"": undefined,
       ""progress"": Object {
-        ""bytesTotal"": 0,
+        ""bytesTotal"": null,
         ""bytesUploaded"": 0,
         ""percentage"": 0,","Should all those be `null` then? Otherwise `bytesTotal` is `null`, but `bytesUploaded` is `0`?",2019-03-26 09:03:04
651,"@@ -27,5 +39,6 @@ module.exports = function callback (req, res, next) { // eslint-disable-line no-
 
   logger.debug(`Did not receive access token for provider ${providerName}`, null, req.id)
   logger.debug(grant.response, 'callback.oauth.resp', req.id)
-  return res.sendStatus(400)
+","Should we keep the status code to `400`? It feels wrong to send `200` when there's clearly an error.
```suggestion
res.statusCode = 400
```",2021-08-30 14:44:23
653,"@@ -27,5 +39,6 @@ module.exports = function callback (req, res, next) { // eslint-disable-line no-
 
   logger.debug(`Did not receive access token for provider ${providerName}`, null, req.id)
   logger.debug(grant.response, 'callback.oauth.resp', req.id)
-  return res.sendStatus(400)
+res.statusCode = 400","```suggestion
  res.statusCode = 400
```",2021-08-30 15:17:24
652,"@@ -27,5 +39,6 @@ module.exports = function callback (req, res, next) { // eslint-disable-line no-
 
   logger.debug(`Did not receive access token for provider ${providerName}`, null, req.id)
   logger.debug(grant.response, 'callback.oauth.resp', req.id)
-  return res.sendStatus(400)
+res.statusCode = 400
+  return res.send(closePageHtml)","According to https://expressjs.com/en/4x/api.html#res.status, my previous suggestion is wrong, it should be something like:
```suggestion
  return res.status(400).send(closePageHtml)
```

Sorry I didn't check earlier.",2021-08-30 15:17:24
147,"@@ -27,6 +26,8 @@ uppy.use(DragDrop, {
 })
 ```
 
+> Note that certain [restrictions set in Uppy’s main options](/docs/uppy#restrictions), namely `maxNumberOfFiles` and `allowedFileTypes`, affect the system file picker dialog. If `maxNumberOfFiles: 1`, users will only be able to select one file, and `allowedFileTypes: ['image/*, .jpg']` means only image or files with `.jpg` extension will be selectable.","It might be clearer to have non overlapping example here, eg ""`allowedFileTypes: ['image/*', '.pdf']` means only images and PDFs will be selectable""",2018-05-14 07:50:11
504,"@@ -27,7 +27,7 @@ function logout (req, res, next) {
       }
 
       delete companion.providerTokens[providerName]
-      tokenService.removeFromCookies(res, companion.options, companion.provider.authProviderName)
+      tokenService.removeFromCookies(res, companion.options, companion.provider.authProvider)",spotted a bug.,2020-11-11 11:23:22
143,"@@ -27,8 +28,9 @@ class ActionBrowseTagline extends Component {
           tabindex=""-1""
           type=""file""
           name=""files[]""
-          multiple=""true""
+          multiple={this.props.maxNumberOfFiles !== 1 || !this.props.maxNumberOfFiles}","not sure what the '|| !this.props.maxNumberOfFiles' is for, according to the left side of the condition, it can be simplified to `!1` which is always false.",2018-05-09 15:51:33
117,"@@ -277,6 +277,8 @@ module.exports = class Dashboard extends Plugin {
         name: file.name,
         type: file.type,
         data: blob
+      }).catch(() => {","> UI plugins swallow rejection errors so they don't end up in the console with no way to fix

But it will still catch upstream in `addFile` and restrictions to show the informer?.. 🤔",2018-02-09 05:35:06
831,"@@ -277,8 +277,9 @@ export default class Tus extends BasePlugin {
         resolve(upload)
       }
 
-      uploadOptions.onShouldRetry = (err) => {
+      function defaultOnShouldRetry (err) {","```suggestion
      const defaultOnShouldRetry = (err) => {
```",2022-05-17 14:21:16
829,"@@ -278,10 +277,16 @@ export default class Tus extends BasePlugin {
         resolve(upload)
       }
 
-      uploadOptions.onShouldRetry = (err) => {
+      if (this.opts.onShouldRetry !== null) {
+        uploadOptions.onShouldRetry = (err) => opts.onShouldRetry(err, defaultOnShouldRetry)
+      } else {
+        uploadOptions.onShouldRetry = defaultOnShouldRetry
+      }
+
+      function defaultOnShouldRetry (err) {",Can we avoid using the function before it's declared? ,2022-05-17 01:02:19
166,"@@ -278,9 +278,7 @@ describe('src/Core', () => {
       plugins: {},
       totalProgress: 0
     })
-    expect(core.plugins.acquirer[0].mocks.uninstall.mock.calls.length).toEqual(
-      1
-    )
+    expect(core.plugins[Object.keys(core.plugins)[0]].length).toEqual(0)",Can we keep the other assertion too? I think it's helpful to ensure that the uninstall function was called too,2018-06-11 09:27:23
9,"@@ -28,6 +28,14 @@ Even though bundled in this repo, the website is regarded as a separate project.
 
 It's recommended to exclude `./website/public/` from your editor if you want efficient searches.
 
+To install the required node modules, type:
+```bash
+npm install
+cd website
+npm install
+cd ..
+```
+","Maybe combine it like:
```bash
npm install && cd website && npm install && cd ..
```
?",2016-12-13 01:17:23
221,"@@ -28,6 +28,7 @@
     ""@uppy/thumbnail-generator"": ""0.29.1"",
     ""@uppy/utils"": ""0.29.1"",
     ""classnames"": ""^2.2.6"",
+    ""cuid"": ""^2.1.1"",
     ""drag-drop"": ""2.13.3"",","In other places we are using uuid, I think, is there a reason to use different packages? I was actually gonna suggest we switch to https://github.com/ai/nanoid everywhere, it’s smaller and ids are smaller.",2019-01-28 19:04:23
489,"@@ -28,7 +28,7 @@ class Zoom extends Provider {
     return 'zoom'
   }
 
-  list (options, done) {
+  async list (options, done) {","for consistency with other providers, can this be achieved without explicit `async-await`?",2020-09-14 10:33:37
528,"@@ -28,7 +28,8 @@ module.exports.verifyToken = (token, secret) => {
  *
  * @param {object} res
  * @param {string} token
- * @param {object=} companionOptions
+ * @param {object} companionOptions
+ * @param {string=} companionOptions.cookieDomain","```suggestion
```",2020-11-23 07:26:18
392,"@@ -287,9 +281,17 @@ module.exports = class XHRUpload extends Plugin {
           this.uploaderEvents[file.id].remove()
           this.uploaderEvents[file.id] = null
         }
+        const body = opts.getResponseData(xhr.responseText, xhr)","I don't think this should be done in the `error` handler. AFAIK the response is always null here, so there is no data to retrieve. It's the same for the `status` value below: it would always be 0 in this code path. Having the `response` object is not really useful in that case.",2020-03-30 11:07:08
81,"@@ -289,6 +289,10 @@ module.exports = class Tus extends Plugin {
 
     socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))
 
+    socket.on('error', (errData) => {
+      this.core.emitter.emit('core:upload-error', file.id, new Error(errData.error))","nitpick, but its better if we are consistent: `this.core.emitter.emit` --> `this.core.emit`.",2017-12-11 16:46:07
390,"@@ -29,11 +29,11 @@ class FileCard extends Component {
     }
   }
 
-  tempStoreMeta = (ev, name) => {
+  updateMeta = (newVal, name) => {","I can add back the old function if needed, but felt kinda useless now :)",2020-03-23 20:08:13
389,"@@ -29,11 +29,13 @@ class FileCard extends Component {
     }
   }
 
-  tempStoreMeta = (ev, name) => {
+  tempStoreMeta = (ev, name, type) => {
+    var value = ev.target.value
+    if (type === 'checkbox') value = ev.target.checked ? 'on' : 'off'",This is an example of why I prefer a flexible custom `render()` solution … 'on'/'off' may not be the right value for every application. You have to make a lot of decisions even for very simple form fields :(,2020-03-23 10:16:03
268,"@@ -29,21 +27,12 @@
         text-align: right;
         border: 2px solid purple;
       }
-
-      ul {
-        margin: 60px;
-      }
-
-      li {
-        margin: 60px;
-      }
-
-      .foo a {
-        color: purple;
-      }","These were added to test Uppy’s style protection from some styles that might be on a page where Uppy is used. Not sure it’s the best idea, but just noting that there was a reason, maybe we should keep it.",2019-05-28 08:16:23
462,"@@ -29,6 +29,12 @@ module.exports = () => {
       transport: 'session',
       scope: ['files.read.all', 'offline_access', 'User.Read'],
       callback: '/onedrive/callback'
+    },
+    zoom: {
+      transport: 'session',
+      authorize_url: 'https://zoom.us/oauth/authorize',
+      access_url: 'https://zoom.us/oauth/token',
+      callback: '/zoom/callback'",we need to add the permission scopes that the API will be using kind of like [this one](https://github.com/transloadit/uppy/blob/e9651443c7eb1eca0de93d98b3d960d7738efd19/packages/%40uppy/companion/src/config/grant.js#L24),2020-07-16 04:08:35
520,"@@ -29,6 +33,11 @@ class MockPurest {
       const responses = fixtures[this.opts.providerName].responses
       const url = this._query ? `${this._requestUrl}?${this._query}` : this._requestUrl
       const endpointResponses = responses[url] || responses[this._requestUrl]
+      if (endpointResponses == null || !has(endpointResponses, this._method)) {
+        done(new Error(`No fixture for ${this._method} ${url}`))
+        return
+      }","For debugging: a test failure on CI was due to a missing fixture and it was not super easy to find.

That failure was fixed in https://github.com/transloadit/uppy/pull/2628/files?file-filters%5B%5D=.js&file-filters%5B%5D=.json&file-filters%5B%5D=.ts#diff-230671caf421c053be258aa2c0a54a7086622503a88bf18c87607155f5b08157",2020-11-16 11:52:28
835,"@@ -297,6 +297,38 @@ module.exports = {
       rules: {
         'no-restricted-syntax': 'warn',
         'no-underscore-dangle': 'off',
+
+        // transloadit rules we would like to enforce in the future","what does this have to do with jsdoc?
shouldn't this be done in the parent .eslintrc instead?",2022-05-21 19:23:39
38,"@@ -299,10 +299,6 @@ class Uppy {
           preview: file.preview
         }
 
-        if (Utils.isPreviewSupported(fileTypeSpecific) && !isRemote) {
-          newFile.preview = Utils.getThumbnail(file.data)
-        }",This is moved to the `core:generate-preview` event.,2017-08-18 14:06:53
549,"@@ -299,5 +299,6 @@ module.exports = class AwsS3 extends Plugin {
 
   uninstall () {
     this.uppy.removePreProcessor(this.handleUpload)
+    this.uppy.removeUploader(this.handleUpload)","```suggestion
    this.uppy.removeUploader(this.handleUpload)
```",2021-03-22 08:32:35
967,"@@ -3,13 +3,16 @@ changesetBaseRefs:
   - upstream/main
   - origin/main
 
+enableGlobalCache: false
+
 initScope: uppy
 
-enableGlobalCache: false
 nodeLinker: node-modules
 
 plugins:
   - path: .yarn/plugins/@yarnpkg/plugin-workspace-tools.cjs
     spec: ""@yarnpkg/plugin-workspace-tools""
   - path: .yarn/plugins/@yarnpkg/plugin-version.cjs
     spec: ""@yarnpkg/plugin-version""
+
+yarnPath: .yarn/releases/yarn-3.2.1.cjs",these changes seem unrelated,2022-09-14 19:47:01
517,"@@ -3,6 +3,7 @@ const has = require('@uppy/utils/lib/hasProperty')
 
 const remoteProviders = {
   dropbox: require('@uppy/dropbox'),
+  box: require('@uppy/box'),","excluding box from global module for now as it will initially be released as beta
```suggestion
```",2020-11-13 09:20:12
503,"@@ -3,6 +3,7 @@ const has = require('@uppy/utils/lib/hasProperty')
 const TransloaditResults = require('./TransloaditResultsPlugin')
 
 const transloaditOptionNames = [
+  'id',
   'service',","```suggestion
  'service',
```
`id` is intentionally\* not passed in because there isn't really a reason to rename plugin instances with Robodog

<small>\* at least that was my undocumented intent!</small>",2020-11-03 14:31:36
970,"@@ -3,6 +3,8 @@ module.exports = () => {
     generateState: () => 'some-cool-nice-encrytpion',
     addToState: () => 'some-cool-nice-encrytpion',
     getFromState: (state, key) => {
+      if (key === 'callbackToken') return 'client-token'",what's the purpose of this?,2022-09-14 19:51:51
956,"@@ -3,6 +3,8 @@ name: Deploy uppy.io
 on:
   push:
     branches: main
+    paths:
+      - 'website/**'","```suggestion
      - yarn.lock
      - 'website/**'
```",2022-09-07 08:13:28
951,"@@ -3,7 +3,7 @@ name: Companion Deploy
 on:
   push:
     tags:
-      - '@uppy/companion@*'
+      - '@uppy/companion@**'","what's the purpose of this? [as far as i can see](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet), `**` is the same as `*` but it also matches slashes. Does companion version ever include a slash?",2022-09-01 22:24:33
174,"@@ -3,7 +3,8 @@
   ""name"": ""uppy-build"",
   ""description"": ""Extensible JavaScript file upload widget with support for drag&drop, resumable uploads, previews, restrictions, file processing/encoding, remote providers like Instagram, Dropbox, Google Drive, S3 and more :dog:"",
   ""lint-staged"": {
-    ""*.js"": ""eslint""","Not really related, but may I ask you to add [bin config](https://docs.npmjs.com/files/package.json#bin) like so?

```json
...
""bin"": {
  ""companion"" : ""./lib/standalone/start-server.js""
},
...
```

or similar?

That way a `companion` file would be dropped in `node_modules/.bin` and folks & machines could just run `companion` (if they have it in their PATH, or start it from npm scripts), vs having to do some research to get at `./lib/standalone/start-server.js`",2018-07-16 09:52:53
858,"@@ -30,11 +30,10 @@ describe('Dashboard with Tus', () => {
     cy.get('.uppy-StatusBar-actionBtn--upload').click()
 
     cy.intercept(
-      { method: 'PATCH', pathname: '/files/*', times: 2 },
+      { method: 'PATCH', pathname: '/files/*', times: 1 },
       { statusCode: 429, body: {} },
     ).as('patch')
 
-    cy.wait('@patch')
     cy.wait('@patch')",Same here,2022-05-30 12:27:13
631,"@@ -30,12 +33,10 @@ function debounce (fn) {
  * Use this for plugins that need a user interface.
  *
  * For plugins without an user interface, see BasePlugin.
- *
- * @param {object} main Uppy core object
- * @param {object} object with plugin options
- * @returns {Array|string} files or success/fail message",Why remove JSDoc?,2021-08-04 21:03:56
434,"@@ -30,14 +30,14 @@
 }
 
 // http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/
-.uppy-DragDrop-input {
-  width: 0.1px;
-  height: 0.1px;
-  opacity: 0;
-  overflow: hidden;
-  position: absolute;
-  z-index: -1;
-}
+// .uppy-DragDrop-input {
+//   width: 0.1px;
+//   height: 0.1px;
+//   opacity: 0;
+//   overflow: hidden;
+//   position: absolute;
+//   z-index: -1;
+// }
 ",let's delete?,2020-06-08 14:00:01
219,"@@ -30,34 +30,34 @@
   },
   ""dependencies"": {
     ""@purest/providers"": ""1.0.0"",
-    ""@uppy/fs-tail-stream"": ""^1.2.0"",
+    ""@uppy/fs-tail-stream"": ""1.2.0"",","I think we need to pin these versions to the versions we had in `package-lock.json`, otherwise, we will effectively be downgrade some libraries to these pinned versions",2019-01-27 06:45:09
772,"@@ -30,6 +30,8 @@ en_US.strings = {
   companionError: 'Connection with Companion failed',
   companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',
   complete: 'Complete',
+  compressedX: 'Saved %{size} by compressing images',","I wonder if the string should actually refer to images, while the key could imply it can be used to report a compression of any kind.",2022-03-03 11:03:17
533,"@@ -30,7 +30,6 @@
     ""hexo-include-markdown"": ""^1.0.2"",
     ""hexo-renderer-ejs"": ""^1.0.0"",
     ""hexo-renderer-marked"": ""2.0.0"",
-    ""hexo-renderer-scss"": ""^1.2.0"",",Replaced with a simple custom implementation https://github.com/transloadit/uppy/pull/2661/files#diff-62cdb2e4aadebffa495eadc250549237f9e5a08ebbb55d90ac1e3ea79027823d,2020-11-27 10:08:50
314,"@@ -30,7 +30,7 @@ class Uppy {
   /**
    * Instantiate Uppy
    *
-   * @param {Object} opts — Uppy options
+   * @param {object} opts — Uppy options",I thought the new jsdoc rule set actually wanted these capitalized? 🤔 ,2019-08-12 11:19:43
655,"@@ -30,7 +30,7 @@ describe('delay', () => {
 
     // should have rejected before the timer is done
     const time = Date.now() - start
-    expect(time).toBeGreaterThanOrEqual(50)
-    expect(time).toBeLessThan(100)
+    expect(time).toBeGreaterThanOrEqual(30)
+    expect(time).toBeLessThan(70)","tbh using `Date` API is probably not a great idea for this kind of tests, it could use a refactor to `performance.now()`. But a change for another time, it should not block this PR.",2021-08-31 10:35:49
997,"@@ -30,8 +27,6 @@ function ensureInt (value) {
 class MultipartUploader {
   #abortController = new AbortController()
 
-  #isPaused = false","It's probably not a good idea to get rid of it before we fixed the pause/resume for individual files, it could come in handy (but also, it would be quite easy to add back, so why not)",2022-11-03 18:48:57
688,"@@ -302,6 +274,10 @@ class Drive extends Provider {
       })
   }
 
+  async logout (options) {
+    return promisify(this._logout.bind(this))(options)
+  }","Same here, we should avoid calling promisify at each call",2021-10-28 08:34:46
328,"@@ -302,7 +309,7 @@ module.exports = class ThumbnailGenerator extends Plugin {
     }
   }
 
-  onRestored () {
+  onRestored = () => {","I'm not familiar with this syntax, will this still be an instance method? If not, what becomes of `this` within the `function`?",2019-08-29 10:39:40
668,"@@ -31,6 +31,12 @@ class DashboardModal extends React.Component {
     } else if (!prevProps.open && this.props.open) {
       this.plugin.openModal()
     }
+
+    for (const key of Object.keys(this.props)) {
+      if (this.props[key] !== prevProps[key] && key in this.plugin.opts) {
+        this.plugin[key] = this.props[key]",Are we sure we want to do this for everything? This may have unexpected consequences in the future. Perhaps it's better to just explicitly update the value in question.,2021-09-20 15:53:48
669,"@@ -31,6 +31,12 @@ class DashboardModal extends React.Component {
     } else if (!prevProps.open && this.props.open) {
       this.plugin.openModal()
     }
+
+    for (const key of Object.keys(this.props)) {
+      if (this.props[key] !== prevProps[key] && key in this.plugin.opts) {
+        this.plugin[key] = this.props[key]
+      }
+    }","Alright. But some suggestions:

- should use  `.setOptions` to do this.
- optional: simplify with some equality util or micro lib, like we do in Vue.

```suggestion
    if (!shallowEqualObjects(this.props, prevProps)) {
      this.plugin.setOptions(this.props)
    }
```",2021-09-21 09:48:18
518,"@@ -31,6 +31,7 @@
     ""@uppy/core"": ""file:../core"",
     ""@uppy/dashboard"": ""file:../dashboard"",
     ""@uppy/dropbox"": ""file:../dropbox"",
+    ""@uppy/box"": ""file:../box"",","excluding box from global module for now as it will initially be released as beta
```suggestion
```",2020-11-13 09:20:58
387,"@@ -31,7 +19,7 @@ class AddFiles extends Component {
     event.target.value = null
   }
 
-  renderPoweredByUppy () {
+  renderPoweredByUppy = () => {","Are all these changes necessary? :thinking: 

e; ah, I guess it's because it allows removing the `.bind()` calls in the constructor. I think some of these don't really need to be bound…",2020-03-09 14:47:17
396,"@@ -31,7 +31,12 @@ module.exports = class ThumbnailGenerator extends Plugin {
     const defaultOptions = {
       thumbnailWidth: null,
       thumbnailHeight: null,
-      waitForThumbnailsBeforeUpload: false
+      waitForThumbnailsBeforeUpload: false,
+      lazy: false
+    }
+
+    if (defaultOptions.lazy && defaultOptions.waitForThumbnailsBeforeUpload) {",Should be `this.opts` instead of `defaultOptions`,2020-04-14 17:45:35
5,"@@ -31,7 +31,7 @@ export default class Spinner extends Plugin {
   }
 
   initEvents () {
-    this.core.emitter.on('progress', (data) => {
+    this.core.emitter.on('upload-progress', (data) => {
       const percentage = data.percentage
       const plugin = data.plugin","`const { plugin, percentage } = data`
",2016-04-04 15:51:42
485,"@@ -31,7 +31,7 @@ exports.getDateName = (start, end) => {
 }
 
 exports.getAccountCreationDate = (results) => {
-  return moment(results.created_at)
+  return moment.utc(results.created_at)",zoom api timestamps are in UTC but it looks like `moment()` uses the local server time by default. this fixes that - see https://momentjs.com/docs/#/parsing/,2020-09-11 21:02:54
830,"@@ -316,6 +317,12 @@ export default class Tus extends BasePlugin {
         return true
       }
 
+      if (opts.onShouldRetry !== null) {","```suggestion
      if (opts.onShouldRetry != null) {
```",2022-05-17 14:18:41
832,"@@ -316,6 +317,12 @@ export default class Tus extends BasePlugin {
         return true
       }
 
+      if (opts.onShouldRetry !== null) {
+        uploadOptions.onShouldRetry = (...args) => opts.onShouldRetry(...args, defaultOnShouldRetry.bind(this))","Let's use an arrow function instead and drop the `.bind`
```suggestion
        uploadOptions.onShouldRetry = (...args) => opts.onShouldRetry(...args, defaultOnShouldRetry)
```",2022-05-17 14:21:18
131,"@@ -316,7 +316,7 @@ module.exports = class Webcam extends Plugin {
     const webcamState = this.getPluginState()
 
     if (!webcamState.cameraReady) {
-      return PermissionsScreen(webcamState)
+      return PermissionsScreen(Object.assign({}, { icon: WebcamIcon }))",No need for `Object.assign` (`PermissionsScreen({ icon: WebcamIcon })`),2018-03-12 12:06:55
120,"@@ -318,6 +318,36 @@ Subscribe to an uppy-event. See below for the full list of events.
 
 Uppy exposes events that you can subscribe to in your app:
 
+### `file-added`
+
+Fired each time file is added.
+
+```javascript
+uppy.on('file-added', (fileID) => {
+  console.log('Added file', uppy.getFile(fileID))","This one should actually be:

```js
uppy.on('file-added', (file) => {
  console.log('Added file', file)
})
```",2018-02-12 10:06:57
698,"@@ -318,7 +320,7 @@ export class Uppy {
     file: AddFileOptions<TMeta>
   ): string
 
-  removeFile(fileID: string): void
+  removeFile(fileID: string, reason: FileRemoveReason): void","The argument is optional: https://github.com/transloadit/uppy/blob/56a67de550c5d774250b476f72a5b26310b32ec5/packages/@uppy/core/src/Uppy.js#L906
```suggestion
  removeFile(fileID: string, reason?: FileRemoveReason): void
```",2021-10-29 20:44:24
699,"@@ -32,12 +32,6 @@ if (typeof AggregateError === 'undefined') {
     }
   }
 }
-class AggregateRestrictionError extends AggregateError {
-  constructor (...args) {
-    super(...args)
-    this.isRestriction = true
-  }
-}",Why are we removing this? I think we should keep it.,2021-11-01 18:26:45
799,"@@ -32,18 +62,27 @@ module.exports = (redisUrl, redisPubSubScope) => {
    * @param {object} message the message to pass along with the event
    */
   function emit (eventName, message) {
-    return nrp.emit(eventName, message || {})
+    if (eventName === 'error') {","AFAIK our app doesn't ever emit the error event, and I'm not sure what's the use case of this.",2022-03-22 15:13:47
800,"@@ -32,18 +62,27 @@ module.exports = (redisUrl, redisPubSubScope) => {
    * @param {object} message the message to pass along with the event
    */
   function emit (eventName, message) {
-    return nrp.emit(eventName, message || {})
+    if (eventName === 'error') {
+      errorHandler && errorHandler(message) // eslint-disable-line no-unused-expressions
+      return
+    }
+    connectedPromise.then(() => publisher.publish(prefix + eventName, message)).catch(errorHandler)",Will this work? Shouldn't message be JSON.stringified?,2022-03-22 15:14:35
277,"@@ -32,19 +32,19 @@ const getConfigFromEnv = () => {
     providerOptions: {
       google: {
         key: process.env.COMPANION_GOOGLE_KEY,
-        secret: process.env.COMPANION_GOOGLE_SECRET
+        secret: typeof process.env.COMPANION_GOOGLE_SECRET_FILE === 'string' ? fs.readFileSync(process.env.COMPANION_GOOGLE_SECRET_FILE).toString() : process.env.COMPANION_GOOGLE_SECRET",can we pull this into a function instead? And reuse it for others too?,2019-06-05 14:47:38
169,"@@ -32,48 +32,46 @@
     ""eslint"": ""^3.19.0"",
     ""eslint-config-standard"": ""^10.2.1"",","standard v11 has been out for a while but it has a different indent rule which requires some code changes, didn't want to do any in this pr",2018-06-28 12:23:57
135,"@@ -32,6 +40,7 @@ const ReduxDevTools = require('./plugins/ReduxDevTools')
 
 module.exports = {
   Core,
+  lib,","not sure how else to expose this. Happy to get suggestions here. I thought about adding it to core, but I didn't go that route because of the future idea of breaking some parts of uppy to its own npm package. If it were in core then it would be against that future idea.

In any case, I think it is important to expose these modules to allow users write their own custom plugins with these helpers. If there's an understanding I am missing, please let me know.",2018-03-26 08:59:55
921,"@@ -32,7 +37,17 @@ if (typeof __REDUX_DEVTOOLS_EXTENSION__ !== 'undefined') {
   enhancer = compose(enhancer, __REDUX_DEVTOOLS_EXTENSION__())
 }
 
-const store = createStore(reducer, enhancer)
+const store = configureStore({
+  reducer,
+  enhancers: [enhancer],
+  middleware: (getDefaultMiddleware) => getDefaultMiddleware({
+    serializableCheck: {
+      // Ignore these action types","```suggestion
```",2022-08-19 15:05:06
204,"@@ -323,6 +331,30 @@ uppy.upload().then((result) => {
 })
 ```
 
+### `uppy.pauseResume(fileID)`
+
+Toggle pause/resume on an upload. Will only work if resumable upload plugin, such as [Tus](/docs/tus/), is used.
+
+### `uppy.pauseAll()`
+
+Pause all uploads. Will only work if resumable upload plugin, such as [Tus](/docs/tus/), is used.",a resumable upload plugin,2018-10-08 11:06:56
612,"@@ -326,16 +326,16 @@ describe('src/Core', () => {
   describe('preprocessors', () => {
     it('should add a preprocessor', () => {
       const core = new Core()
-      const preprocessor = () => {}
+      const preprocessor = () => { }","That doesn't seem to be necessary.
```suggestion
      const preprocessor = () => {}
```",2021-07-15 16:36:50
49,"@@ -326,7 +337,7 @@ module.exports = class DashboardUI extends Plugin {
     }
 
     const pauseUpload = (fileID) => {
-      this.core.emit.emit('core:upload-pause', fileID)
+      this.core.emit('core:upload-pause', fileID)",whelp! good catch :D,2017-09-09 11:48:34
216,"@@ -327,7 +331,11 @@ module.exports = class Tus extends Plugin {
       })
 
       socket.on('success', (data) => {
-        this.uppy.emit('upload-success', file, data, data.url)
+        const uploadResp = {
+          uploadURL: data.url
+        }
+
+        this.uppy.emit('upload-success', file, uploadResp)
         this.resetUploaderReferences(file.id)",Should `data` be passed as `body` here? 🤔,2018-12-19 20:22:17
994,"@@ -328,6 +328,14 @@ module.exports = {
         'examples/vue/**/*.js',
         'examples/vue3/**/*.js',
       ],
+      rules: {
+        'no-unused-vars': [
+          'error',
+          {
+            'varsIgnorePattern': 'React',
+          },
+        ],
+      },","within the react-native-expo example ""React"" is considered an unused var, but if it's removed I get the following error. 
The fix should actually be smarter and not just a rule exclusion

![Simulator Screen Shot - iPhone 12 Pro Max - 2022-11-01 at 16 50 52](https://user-images.githubusercontent.com/9303791/199288515-82de60bf-9c68-48d9-8030-37e82e231866.png)
",2022-11-01 15:57:54
257,"@@ -329,10 +331,7 @@ class Uploader {
    * start the tus upload
    */
   uploadTus () {
-    const fname = path.basename(this.options.path)
-    const ftype = this.options.metadata.type
-    const metadata = Object.assign({ filename: fname, filetype: ftype }, this.options.metadata || {})","hah ok, so we did already do it here!",2019-05-22 20:06:22
343,"@@ -33,7 +33,9 @@ const Tus = require('@uppy/tus')
 
 const uppy = Uppy({ autoProceed: false })
   .use(Dashboard, { trigger: '#select-files' })
-  .use(GoogleDrive, { target: Dashboard, companionUrl: 'https://companion.uppy.io' })
+  .use(GoogleDrive, { target: Dashboard, companion","The option name is actually `companionUrl`, we can’t change that here :) See https://uppy.io/docs/facebook/#Options",2019-10-21 10:22:49
133,"@@ -330,7 +330,9 @@ module.exports = class Webcam extends Plugin {
       recording: webcamState.isRecording,
       mirror: this.opts.mirror,
       src: this.stream
-    }))
+    })
+
+    return <CameraScreen {...CameraScreenProps} />","We could also only use JSX spread here instead of object.assign:

```js
<CameraScreen
  {...webcamState}
  onSnapshot={this.takeSnapshot}
  /* ... etc ... */
  src={this.stream}
/>
```",2018-03-13 12:49:00
21,"@@ -333,7 +336,9 @@ module.exports = class DashboardUI extends Plugin {
     totalSize = prettyBytes(totalSize)
     totalUploadedSize = prettyBytes(totalUploadedSize)
 
-    const isAllComplete = state.totalProgress === 100
+    const isAllComplete = state.totalProgress === 100 &&
+      completeFiles.length === Object.keys(files).length &&
+      processingFiles.length === 0","This needed some additional checks, because `totalProgress` refers to upload progress, but doesn't tell if postprocessing completed. I'm actually not sure if the `completeFiles.length === ` check is still necessary, it may be a leftover of my first shot at this, I can look into that tomorrow.",2017-05-31 20:46:16
67,"@@ -338,6 +338,8 @@ class Uppy {
           },
           size: file.data.size || 'N/A',
           isRemote: isRemote,
+          isCheckbox: file.isCheckbox || false,
+          isFolder: file.isFolder || false,
           remote: file.remote || '',","Not sure how I feel about adding `isCheckbox` to a file object. It seems it’s only used to not close the provider panel when a checkbox is selected. I think we could separate the file name and checkbox is the markup and have two different click handlers for those cases. 

Or maybe it’s better to not show checkboxes at all do multiselect on click, and then submit only when “done” is pressed?",2017-11-13 18:11:24
321,"@@ -339,9 +339,11 @@ uppy.addFile({
 
 `addFile` gives an error if the file cannot be added, either because `onBeforeFileAdded(file)` gave an error, or because `uppy.opts.restrictions` checks failed.
 
+If you try to add a file that already exists, `addFile` will throw an error. Unless that duplicate file was dropped/selected from a folder — duplicate files from different folders are allowed, when selected with that folder. This is because we add `file.meta.relativePath` to the `file.id`.","When we select files from different folders there is no `.relativePath`, we only have `.relativePath` on drop.",2019-08-23 18:39:09
851,"@@ -34,6 +34,7 @@ export { default as Url } from '@uppy/url'
 export { default as Webcam } from '@uppy/webcam'
 export { default as ScreenCapture } from '@uppy/screen-capture'
 export { default as Audio } from '@uppy/audio'
+export { default as RemoteSources } from '@uppy/remote-sources'",Can we merge https://github.com/transloadit/uppy/pull/3747 first and keep the list alphabetically ordered?,2022-05-26 20:25:59
267,"@@ -34,6 +34,8 @@ function assertServerError (res) {
 }
 
 module.exports = class AwsS3Multipart extends Plugin {
+  static VERSION = require('../package.json').version","Is there an advantage to this vs setting `this.version` in the constructor? Cleaner this way, at the top?",2019-05-27 16:17:56
795,"@@ -34,7 +34,7 @@
     ""body-parser"": ""1.19.0"",
     ""chalk"": ""2.4.2"",
     ""common-tags"": ""1.8.0"",
-    ""connect-redis"": ""4.0.3"",
+    ""connect-redis"": ""6.1.3"",",this will be a breaking change because they dropped support for node 10 in v6,2022-03-22 14:38:29
729,"@@ -34,7 +34,7 @@ fr_FR.strings = {
   dashboardWindowTitle: 'Fenêtre de téléchargeur de fichier (Appuyez sur echap pour fermer)',
   dataUploadedOfTotal: '%{complete} sur %{total}',
   done: 'Terminé',
-  dropHereOr: 'Déposer les fichiers ici ou %{browse}',",@aduh95 isn't the previous one more correct?,2021-12-28 15:25:13
681,"@@ -342,62 +381,49 @@ class Uploader {
   }
 
   /**
-   * This method emits upload progress but also creates an ""upload progress"" illusion
-   * for the waiting period while only download is happening. Hence, it combines both
-   * download and upload into an upload progress.
    *
-   * @see emitProgress
-   * @param {number=} bytesUploaded the bytes actually Uploaded so far
+   * @param {number} bytesUploaded","```suggestion
   * @param {number} [bytesUploaded]
```",2021-10-23 16:33:43
682,"@@ -342,62 +381,49 @@ class Uploader {
   }
 
   /**
-   * This method emits upload progress but also creates an ""upload progress"" illusion
-   * for the waiting period while only download is happening. Hence, it combines both
-   * download and upload into an upload progress.
    *
-   * @see emitProgress
-   * @param {number=} bytesUploaded the bytes actually Uploaded so far
+   * @param {number} bytesUploaded
+   * @param {number | null} bytesTotalIn","```suggestion
   * @param {number | null} [bytesTotalIn]
```",2021-10-23 16:33:57
264,"@@ -344,7 +342,13 @@ class Uploader {
       resume: true,
       retryDelays: [0, 1000, 3000, 5000],
       uploadSize: this.bytesWritten,
-      metadata,
+      metadata: Object.assign(
+        {
+          // file name and type as specified by tus protocol","Nitpicking, but is it defined by the protocol, or just the tusd implementation? I didn’t find it in the protocol, so maybe linking here: https://github.com/tus/tusd/blob/5b376141903c1fd64480c06dde3dfe61d191e53d/unrouted_handler.go#L614-L646?",2019-05-24 14:59:30
326,"@@ -346,8 +409,24 @@ module.exports = class Tus extends Plugin {
 
         this.uppy.emit('upload-success', file, uploadResp)
         this.resetUploaderReferences(file.id)
+        queuedRequest.done()","![image](https://user-images.githubusercontent.com/7578559/63731836-0451f480-c88b-11e9-93f0-d6828b155b9c.png)

I got this error here once, but I'm not sure why, and I don't seem to be able to reproduce it.",2019-08-27 00:26:01
686,"@@ -35,13 +38,17 @@ class Box extends Provider {
       .request(done)
   }
 
+  async list (options) {
+    return promisify(this._list.bind(this))(options)
+  }","This will create a new bound function each time it is called (because it will run `this._list.bind(this)` every time, and `promisify()` every time). Instead, we could declare the following outside the class body:

```js
Box.prototype.list = promisify(Box.prototype._list)
Box.prototype.thumbnail = promisify(Box.prototype._thumbnail)
Box.prototype.size = promisify(Box.prototype._size)
Box.prototype.logout = promisify(Box.prototype._logout)
```",2021-10-28 08:31:19
990,"@@ -35,6 +35,10 @@ Install from NPM:
 npm install @uppy/facebook
 ```
 
+## OAuth
+
+You need to set up OAuth in your Facebook app for Companion to be able to connect to users’ Facebook accounts. You have to enable ’Advanced Access’ for the `user_photos` permission. A precondition of that is “Business Verification“ which involves setting up a Meta Business Account and submitting documents to prove business ownership.","```suggestion
You need to set up OAuth in your Facebook app for Companion to be able to connect to users’ Facebook accounts. You have to enable “Advanced Access” for the `user_photos` permission. A precondition of that is “Business Verification“ which involves setting up a Meta Business Account and submitting documents to prove business ownership.
```",2022-10-25 17:13:30
284,"@@ -35,6 +35,11 @@
         color: purple;
       }
     </style>
+
+    <!-- polyfills for IE11 -->
+    <script src=""https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js""></script>
+    <script src=""https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js""></script>","1. I don’t think both promise files are needed, we used to recommend just `es6-promise.auto.min.js`, and I think it worked in our tests: https://github.com/transloadit/uppy/pull/1576/files. I could be wrong.
2. We have these polyfills included in the website examples, like https://uppy.io/examples/dashboard/. Maybe that’s enough for testing, and we could keep `dev` smaller/faster? On the one hand, it’s not too big of an addition, on the other it’s external resources just for IE testing.",2019-06-13 11:33:53
840,"@@ -35,6 +35,8 @@ async function handleJSONResponse (res) {
 export default class RequestClient {
   static VERSION = packageJson.version
 
+  #companionHeaders = {}","We don't need to create a throw away object since that value is overridden in the constructor anyway.
```suggestion
  #companionHeaders
```",2022-05-23 10:15:40
991,"@@ -35,6 +35,9 @@ import isXml from './isXml.js'
 import locale from './locale.js'
 
 function resolveUrl (origin, link) {
+  // Digital oceans don't return the protocal from Location","```suggestion
  // DigitalOcean doesn’t return the protocol from Location
```
",2022-10-26 12:18:28
992,"@@ -35,6 +35,9 @@ import isXml from './isXml.js'
 import locale from './locale.js'
 
 function resolveUrl (origin, link) {
+  // Digital oceans don't return the protocal from Location
+  // if we don't adding protocal then new URL will fail with error: Failed to construct 'URL'","```suggestion
  // without it, the `new URL` constructor will fail
```",2022-10-26 12:19:35
993,"@@ -35,6 +35,9 @@ import isXml from './isXml.js'
 import locale from './locale.js'
 
 function resolveUrl (origin, link) {
+  // Digital oceans don't return the protocal from Location
+  // if we don't adding protocal then new URL will fail with error: Failed to construct 'URL'
+  link = link.startsWith(""https://"") ? link : `https://${link}`","```suggestion
  link = link.startsWith('https://') ? link : `https://${link}`
```",2022-10-26 12:20:02
579,"@@ -35,7 +35,7 @@ Instead of adding a UI plugin to an Uppy instance with `.use()`, the Uppy instan
 ```html
 <template>
   <div id=""app"">
-    <dashboard :uppy=""uppy"" :plugins=""['Webcam']""/>
+    <dashboard :uppy=""uppy"" :plugins=""['Webcam']"" :props=""{theme: 'light'}"" />","`uppy` and `plugins` are already props, so now you have `props` inside props. I don't think that is something we want to document. Could you elaborate?",2021-06-23 13:47:29
18,"@@ -353,6 +354,30 @@ function findDOMElement (element) {
   }
 }
 
+function getSocketHost (url) {
+  // get the host domain
+  var regex = /^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/
+  var host = regex.exec(url)[1]
+  var socketProtocol = location.protocol === 'https:' ? 'wss' : 'ws'
+
+  return `${socketProtocol}://${host}`
+}
+
+function _emitSocketProgress (uppyInstance, progressData, file) {","Can you rename `uppyInstance` to something like `uploader`? I think that's a bit clearer, I thought it was referring to a `Core` instance first.",2017-05-26 10:40:46
127,"@@ -355,7 +355,8 @@ describe('src/Core', () => {
         })
         .then(() => {
           const fileId = Object.keys(core.state.files)[0]
-          core.emit('preprocess-progress', fileId, {
+          const file = core.state.files[fileId]",`core.getFile(fileId)`?,2018-02-22 14:28:03
664,"@@ -357,6 +357,7 @@ class MultipartUploader {
         defer.reject(error)
         return
       }
+      this.chunks[index] = null;  // Note: by uploading thousands of files with a total of many GB, this avoids the net::ERR_OUT_OF_MEMORY in CHromium Browsers","nit
```suggestion
      this.chunks[index] = null;  // This avoids the net::ERR_OUT_OF_MEMORY in Chromium Browsers.
```",2021-09-10 09:50:18
803,"@@ -358,10 +360,35 @@ class Uploader {
     return Uploader.shortenToken(this.token)
   }
 
-  async awaitReady () {
-    // TODO timeout after a while? Else we could leak emitters
+  async awaitReady (timeout) {
     logger.debug('waiting for socket connection', 'uploader.socket.wait', this.shortToken)
-    await new Promise((resolve) => emitter().once(`connection:${this.token}`, resolve))
+
+    await new Promise((resolve, reject) => {","```suggestion
    // TODO: replace the Promise constructor call when dropping support for Node.js <16 with
    // await once(emitter, eventName, timeout && { signal: AbortSignal.timeout(timeout) })
    await new Promise((resolve, reject) => {
```",2022-03-24 11:35:08
301,"@@ -358,14 +358,14 @@ module.exports = class ProviderView {
       state = this.plugin.getPluginState()
       state.selectedFolders[folderId] = { loading: false, files: files }
       this.plugin.setPluginState({ selectedFolders: folders })
-      const dashboard = this.plugin.uppy.getPlugin('Dashboard')","I think we have to keep this as a fallback for now, else it's a small breaking change :(",2019-07-08 09:46:31
788,"@@ -36,18 +36,21 @@ class Uppy {
   /** @type {Record<string, BasePlugin[]>} */
   #plugins = Object.create(null)
 
+  #uploader = new Uploader(
+    this.getState.bind(this),
+    this.setState.bind(this),
+    this.emit.bind(this),
+    this.log.bind(this),
+    this.getFile.bind(this),
+    () => this.opts,","I feel strongly that we should pass the `Uppy` instance rather than try to cherry-pick what we use from it. What's the point of using classes if we are only passing methods around?
```suggestion
    this
```",2022-03-16 19:24:11
249,"@@ -36,7 +29,8 @@ class UrlUI extends Component {
         aria-label={this.props.i18n('enterUrlToImport')}
         placeholder={this.props.i18n('enterUrlToImport')}
         onkeyup={this.handleKeyPress}
-        ref={(input) => { this.input = input }} />
+        ref={(input) => { this.input = input }}
+        data-uppy-super-focusable />",`ref={(input)` not needed here?,2019-05-03 18:28:28
291,"@@ -36,7 +36,7 @@ function addDashboardPlugin (uppy, opts, overrideOpts) {
   })
 
   const inline = overrideOpts.inline == null ? dashboardOpts.inline : overrideOpts.inline
-  if (inline === false) {
+  if (!inline) {",@arturi this is where we were checking it inside Robodog to determine whether modal options should be passed through,2019-06-24 14:07:00
128,"@@ -361,8 +361,10 @@ data = {
 ```
 
 ```javascript
-uppy.on('upload-progress', (data) => {",the `data` object snippet still has an `id` up here—i think we can probably remove it entirely because you added the object shape in a comment in this code block.,2018-02-22 14:30:50
360,"@@ -365,19 +366,27 @@ module.exports = class ThumbnailGenerator extends Plugin {
   }
 
   install () {
-    this.uppy.on('file-added', this.onFileAdded)
     this.uppy.on('file-removed', this.onFileRemoved)
-    this.uppy.on('restored', this.onRestored)
+    if (this.opts.lazy) {
+      this.uppy.on('thumbnail:request', this.onFileAdded)","When scrolling a list of non-image files, this results in queue events like this:

<img width=""1227"" alt=""Screen Shot 2019-11-27 at 19 14 59"" src=""https://user-images.githubusercontent.com/1199054/69740292-399c0600-114a-11ea-9d52-e57bc3696833.png"">

Should we add `isPreviewSupported(file.type)` to `onFileAdded`?",2019-11-27 16:15:42
385,"@@ -365,6 +382,23 @@ module.exports = class Webcam extends Plugin {
     }, 1000)
   }
 
+  changeVideoSource (deviceId) {
+    this.stop()
+    this.start(deviceId)
+  }
+
+  getVideoSources () {
+    this.videoSources = []
+    this.mediaDevices.enumerateDevices().then(res => {
+      this.videoSources = []
+      res.forEach((device) => {","We can do `this.videoSources = res.filter()` here, using [Array#filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).",2020-03-09 09:55:59
54,"@@ -367,7 +367,7 @@ function copyToClipboard (textToCopy, fallbackString) {
     const magicCopyFailed = (err) => {
       document.body.removeChild(textArea)
       window.prompt(fallbackString, textToCopy)
-      return reject('Oops, unable to copy displayed fallback prompt: ' + err)
+      return reject(new Error('Oops, unable to copy displayed fallback prompt: ' + err))
     }","> unable to copy displayed fallback prompt

does this mean “unable to copy, so displayed fallback prompt instead”? :) should it reject if the prompt is successful shown?",2017-09-22 18:01:13
436,"@@ -37,19 +37,6 @@ module.exports = class GoogleDrive extends Plugin {
     this.view = new DriveProviderViews(this, {
       provider: this.provider
     })
-    // Set default state for Google Drive
-    this.setPluginState({
-      authenticated: false,
-      files: [],
-      folders: [],
-      directories: [],
-      activeRow: -1,
-      filterInput: '',
-      isSearchVisible: false,
-      hasTeamDrives: false,
-      teamDrives: [],
-      teamDriveId: ''","This teamDrive stuff is specific to gdrive, should it be kept so it's still initialised properly? Or added to the DriveProviderViews constructor maybe?",2020-06-15 13:05:23
909,"@@ -37,6 +33,11 @@ const TL_COMPANION = /https?:\/\/api2(?:-\w+)?\.transloadit\.com\/companion/
 export default class Transloadit extends BasePlugin {
   static VERSION = packageJson.version
 
+  static COMPANION = 'https://api2.transloadit.com/companion'
+
+  // Regex matching acceptable postMessage() origins for authentication feedback from companion.
+  static ALLOWED_COMPANION_PATTERN = /\.transloadit\.com$/
+","I though we would not do that, and instead define them as static only in the bundle?",2022-08-16 06:29:59
952,"@@ -37,7 +37,7 @@ jobs:
           context: .
           platforms: linux/amd64,linux/arm64
           file: Dockerfile
-          tags: ${{ steps.docker_meta.outputs.tags }}
+          tags: ${{ env.GITHUB_REF }}",I think this will become `refs/tags/vX.Y.Z`. Should'nt we instead use the version?,2022-09-01 22:28:37
818,"@@ -37,7 +38,7 @@ jobs:
       - name: Build Uppy packages
         run: corepack yarn build
       - name: Run end-to-end browser tests
-        run: corepack yarn run e2e:ci
+        run: corepack yarn run e2e:ci --browser chrome --record --key ${{secrets.CYPRESS_RECORD_KEY}}","@aduh95 this doesn't work unfortunately, this isn't appended after `e2e:headless`. Ideas how to fix while keeping the key in this file for the secret?

```json
    ""e2e:ci"": ""start-server-and-test 'npm-run-all --parallel e2e:client start:companion' '1234|3020' e2e:headless"",
    ""e2e:headless"": ""yarn workspace e2e cypress:headless""
``` ",2022-05-04 10:42:01
558,"@@ -370,6 +370,7 @@ module.exports = class Webcam extends Plugin {
           // eslint-disable-next-line compat/compat
           recordedVideo: URL.createObjectURL(file.data),
         })
+        this.opts.mirror = false",Will this reset if you cancel and then re-record?,2021-04-01 22:26:01
283,"@@ -370,8 +380,13 @@ module.exports = class XHRUpload extends Plugin {
       files.forEach((file, i) => {
         const opts = this.getOptions(file)
 
+        // Set `file.data.type` in the blob to `file.meta.type`,
+        // because we might have detected a more accurate file type in Uppy
+        // https://stackoverflow.com/a/50875615
+        file.data = file.data.slice(0, file.data.size, file.meta.type)","I would prefer doing `const data = file.data.slice()` here instead of mutating the object, state isn't supposed to be modified outside of setState() calls",2019-06-12 08:12:47
378,"@@ -372,6 +372,9 @@ uppy.addFile({
   name: 'my-file.jpg', // file name
   type: 'image/jpeg', // file type
   data: blob, // file blob
+  meta: {
+      relativePath: string, // optional, determines the unique relative path to build the file uppy id","The file ID is kind of a detail. I think the important thing for end-users is that it allows you to add multiple identical files. Maybe we can do something like this?
```suggestion
    // optional, store the directory path of a file so Uppy can tell identical files in different directories apart
    relativePath: webkitFileSystemEntry.relativePath,
```",2020-03-02 14:04:06
646,"@@ -38,3 +38,20 @@ hedgerh:
   name: 'Harry Hedger'
   id: 'harry'
   tagline: 'Frontend developer'
+aduh95:
+  email: 'antonie@transloadit.com'
+  name: 'Antoine du Hamel '","```suggestion
  name: 'Antoine du Hamel'
```",2021-08-25 18:16:46
142,"@@ -381,6 +393,7 @@ class Uppy {
       fileName = 'noname'
     }
     const fileExtension = Utils.getFileNameAndExtension(fileName).extension
+    console.log(fileExtension)",forgot to remove this?,2018-05-09 15:47:15
263,"@@ -385,7 +389,15 @@ class Uploader {
     const formData = Object.assign(
       {},
       this.options.metadata,
-      { [this.options.fieldname]: file }
+      {
+        [this.options.fieldname]: {
+          value: file,
+          options: {
+            filename: this.uploadFileName,
+            contentType: this.options.metadata.type
+          }
+        }
+      }","Maybe a comment/link here too, as to why `filename` and `contentType`? Stating that it’s conventional and linking to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition#Directives and https://github.com/request/request?",2019-05-24 14:38:17
807,"@@ -39,6 +39,13 @@ describe('dashboard-compressor', () => {
       timeout: 10000,
     }).should('be.visible')
 
+    cy.window().then(({ uppy }) => {
+      for (const file of uppy.getFiles()) {
+        expect(file.name.split('.')[1]).to.equal('webp')","```suggestion
        expect(file.extension).to.equal('webp')
```",2022-03-31 06:32:59
369,"@@ -39,6 +46,19 @@ module.exports = function getIconByMime (fileType) {
     }
   }
 
+  if (fileTypeGeneral === 'application' && (
+    fileTypeSpecific === 'zip' ||
+    fileTypeSpecific === 'x-7z-compressed' ||
+    fileTypeSpecific === 'x-rar-compressed' ||
+    fileTypeSpecific === 'x-gtar' ||
+    fileTypeSpecific === 'x-apple-diskimage')","@goto-bus-stop do you maybe have better ideas on detecting archives? I could move the `fileTypeSpecific`s to an array, but other than that :)",2020-01-16 18:54:57
881,"@@ -39,6 +47,35 @@ class AddFiles extends Component {
     )
   }
 
+  renderHiddenCameraInput = (type, refCallback) => {
+    let accept
+    switch (type) {
+      case 'photo':
+        accept = 'image/*'
+        break
+      case 'video':
+        accept = 'video/*'
+        break
+      default:
+        break
+    }","```suggestion
    const typeToAccept = { photo: 'image/*', video: 'video/*' }
    const accept = typeToAccept[type]
```",2022-07-18 11:36:27
986,"@@ -39,7 +39,7 @@ class UrlUI extends Component {
         <button
           className=""uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Url-importButton""
           type=""button""
-          onClick={this.handleClick}
+          onClick={this.handleSubmit}","```suggestion
          onClick={this.#handleSubmit}
```",2022-10-18 19:45:02
236,"@@ -392,7 +394,7 @@
 .uppy-ProviderBrowserItem-checkbox {
   position: relative;
   display: inline-block;
-  top: -3px;
+  // top: -3px;",probably better to delete since we are now approaching `1.0`,2019-03-28 00:59:24
639,"@@ -393,19 +392,32 @@ module.exports = class Webcam extends UIPlugin {
     }
   }
 
-  stop () {
+  async stop () {
     if (this.stream) {","```suggestion
    this.stream?.getAudioTracks().concat(this.stream.getVideoTracks()).forEach((track) => track.stop())
```",2021-08-13 14:29:50
640,"@@ -393,19 +392,32 @@ module.exports = class Webcam extends UIPlugin {
     }
   }
 
-  stop () {
+  async stop () {
     if (this.stream) {
-      this.stream.getAudioTracks().forEach((track) => {
-        track.stop()
-      })
-      this.stream.getVideoTracks().forEach((track) => {
-        track.stop()
+      this.stream.getAudioTracks().forEach((track) => track.stop())
+      this.stream.getVideoTracks().forEach((track) => track.stop())
+    }","```suggestion
```",2021-08-13 14:30:04
70,"@@ -394,7 +395,7 @@ class Uppy {
    */
   generatePreview (file) {
     if (Utils.isPreviewSupported(file.type) && !file.isRemote) {
-      Utils.createThumbnail(file, 200).then((thumbnail) => {
+      Utils.createThumbnail(file, 200, this.opts.thumbnailGeneration).then((thumbnail) => {","I wonder if it would be better to do the `this.opts.thumbnailGeneration` check here instead of changing `createThumbnail`? You probably wanted to keep it clean with the promise, maybe that’s a good idea.",2017-11-23 18:37:30
217,"@@ -395,9 +393,13 @@ module.exports = class XHRUpload extends Plugin {
         timer.done()
 
         if (ev.target.status >= 200 && ev.target.status < 300) {
-          const resp = this.opts.getResponseData(xhr.responseText, xhr)
+          const body = this.opts.getResponseData(xhr.responseText, xhr)
+          const uploadResp = {
+            status: ev.target.status,
+            body
+          }",No `uploadURL` for bundles?,2018-12-19 20:22:39
650,"@@ -4,6 +4,18 @@
 const tokenService = require('../helpers/jwt')
 const logger = require('../logger')
 
+const closePageHtml = `
+  <!DOCTYPE html>
+  <html>
+  <head>
+      <meta charset=""utf-8"" />
+      <script>
+        window.close()
+      </script>
+  </head>
+  <body></body>","IMHO it would be worth displaying something in the body in case the browser refuses to close the window:
```suggestion
  <body>Authentication failed.</body>
```",2021-08-30 13:40:18
514,"@@ -4,6 +4,7 @@ const Uppy = require('@uppy/core')
 const Dashboard = require('@uppy/dashboard')
 const GoogleDrive = require('@uppy/google-drive')
 const Dropbox = require('@uppy/dropbox')
+const Box = require('@uppy/box')","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:14:29
871,"@@ -4,6 +4,7 @@ import { createWriteStream, mkdirSync, readFileSync } from 'node:fs'
 import { spawnSync } from 'node:child_process'
 
 import prompts from 'prompts'
+import { TARGET_BRANCH } from './config.js'","This has landed on `main` (5a09823f6d725974a657e8c9e6438fa508d5965b), removing it from this PR so it doesn't get reverted when we decide to release 3.x as stable.
```suggestion
```",2022-06-09 16:45:16
816,"@@ -4,6 +4,8 @@ name: Companion Deploy
 on:
   push:
     branches: [main]
+    paths:
+    - 'packages/@uppy/companion/**'","Should we deploy only on Companion releases?
```suggestion
    - 'packages/@uppy/companion/CHANGELOG.md'
```",2022-05-02 09:37:08
762,"@@ -4,7 +4,7 @@
   ""version"": ""0.0.0"",
   ""description"": ""Extensible JavaScript file upload widget with support for drag&drop, resumable uploads, previews, restrictions, file processing/encoding, remote providers like Instagram, Dropbox, Google Drive, S3 and more :dog:"",
   ""lint-staged"": {
-    ""*.js"": ""eslint"",
+    ""*.js"": ""eslint --fix"",","Unrelated to unsplash, and will cause problems in the short term. We can reconsider once we've moved all packages to ESM.
```suggestion
    ""*.js"": ""eslint"",
```",2022-02-17 15:43:55
660,"@@ -4,7 +4,7 @@ const { h } = require('preact')
 const DriveProviderViews = require('./DriveProviderViews')
 
 module.exports = class GoogleDrive extends UIPlugin {
-  static VERSION = require('../package.json').version
+  static VERSION = require('../package.json').version;","```suggestion
  static VERSION = require('../package.json').version
```",2021-09-08 10:58:44
37,"@@ -4,8 +4,8 @@
     <input type=""text"" id=""search-query"" class=""MainMenu-searchQuery st-default-search-input"">
   </form>
 </li> -->
-<li><a href=""/guide/"" class=""nav-link<%- page.path.match(/guide/) ? ' current' : '' %>"">Guide</a></li>
-<li><a href=""/api/"" class=""nav-link<%- page.path.match(/api/) ? ' current' : '' %>"">API</a></li>",Can haz redirects for poor internetters stumbling upon `/api/`?,2017-08-14 12:14:02
931,"@@ -4,8 +4,8 @@ name: Companion Deploy
 on:
   push:
     branches: [main]",This will cause it to build on pushes to the main branch as well as tags. Is this what we want :thinking: ? ,2022-08-23 13:41:03
929,"@@ -4,8 +4,8 @@ name: Companion Deploy
 on:
   push:
     branches: [main]
-    paths:
-    - 'packages/@uppy/companion/**'
+    tags:
+      - '@uppy/companion*'","We don't want it to match `@uppy/companion-client` releases, do we? ;)
```suggestion
      - '@uppy/companion@*'
```",2022-08-23 12:08:42
627,"@@ -40,11 +40,19 @@ The `@uppy/aws-s3-multipart` plugin has the following configurable options:
 
 ### `limit: 0`
 
-The maximum amount of chunks to upload simultaneously. Set to `0` to disable limiting.
+The maximum amount of chunks to upload simultaneously.","I removed the comment ""Set to `0` to disable limiting."" here because it is not true -- the limit defaults to 5 here:

https://github.com/martin-brennan/uppy/blob/af9030ece598bc2cb7835100b165c7cd9736c616/packages/@uppy/aws-s3-multipart/src/index.js#L218-L218

Also I don't think the candidate part gathering code would work with no limit?",2021-07-30 01:49:56
247,"@@ -40,6 +41,7 @@
     ""eslint-plugin-jest"": ""^21.27.2"",
     ""eslint-plugin-node"": ""^4.2.3"",
     ""eslint-plugin-promise"": ""^3.8.0"",
+    ""eslint-plugin-react"": ""^7.12.4"",
     ""eslint-plugin-standard"": ""^3.1.0"",",do we need `eslint-plugin-react` for something?,2019-04-25 10:51:48
122,"@@ -40,6 +41,8 @@ class MusicUploadButton extends React.Component {
   }
 
   render () {
+    this.props.uppy.use(Webcam, { id: ""Webcam"" });
+","Webcam will get `id: ""Webcam""` by default, so I’m wondering if we should omit this here for simplicity.",2018-02-15 00:35:04
839,"@@ -400,7 +400,10 @@ class Uploader {
    */
   saveState (state) {
     if (!this.storage) return
-    this.storage.set(`${Uploader.STORAGE_PREFIX}:${this.token}`, jsonStringify(state))
+    // make sure the keys get cleaned up.
+    // https://github.com/transloadit/uppy/issues/3748
+    const keyExpirySec = 60 * 60 * 24
+    this.storage.sendCommand('SET', [`${Uploader.STORAGE_PREFIX}:${this.token}`, jsonStringify(state), 'EX', keyExpirySec])","```suggestion
    const redisKey = `${Uploader.STORAGE_PREFIX}:${this.token}`
    this.storage.set(redisKey, jsonStringify(state), 'EX', keyExpirySec)
```",2022-05-23 06:32:39
28,"@@ -401,6 +401,27 @@ function findDOMElement (element) {
   }
 }
 
+/**
+* Get metadata object from a form element
+*
+* @param {Node|string} element
+* @return {Object|null}
+*/
+
+function getMetaFromForm (element) {
+  if (!element || element.tagName !== 'FORM') {
+    console.error('Metadata can only be extracted from form elements')
+    return null
+  }
+
+  var formData = new FormData(element)
+  var result = {}
+  for (var entry of formData.entries()) {",`entries()` is not supported in IE and Edge…but it looks like there isn't really another way to get data out of a FormData instance 😕 Maybe there's a library for that that doesn't use `FormData`?,2017-06-29 11:30:41
195,"@@ -401,6 +401,6 @@ class Uploader {
 
 Uploader.FILE_NAME_PREFIX = 'uppy-file'
 // @todo do a proper migration to change this name
-Uploader.STORAGE_PREFIX = 'uppy-server'
+Uploader.STORAGE_PREFIX = 'companion'",Do we need a proper migration to change this name as the comment says? :smile: I think this is only for temporary storage so it may not be a big deal…,2018-09-03 12:00:04
50,"@@ -402,8 +402,9 @@ describe('src/Core', () => {
         .then(() => core.upload())
         .then(() => {
           expect(postprocessor1.mock.calls.length).toEqual(1)
-          const lastModifiedTime = new Date()
-          const fileId = 'foojpg' + lastModifiedTime.getTime()
+          // const lastModifiedTime = new Date()
+          // const fileId = 'foojpg' + lastModifiedTime.getTime()",Could remove these lines entirely :) ,2017-09-11 07:50:13
974,"@@ -41,10 +41,13 @@ a.Stats-package {
 }
 
 .on-the-githubs {","
```suggestion
.on-the-githubs {
  &:empty::before {
    content: ""Loading..."";
  }
```

(not sure `:empty` is the perfect selector as it might trigger if there's an error or something, I haven't checked, but it might work ""well enough"" for our use case)",2022-09-21 14:17:19
212,"@@ -41,7 +41,7 @@
     ""express-interceptor"": ""^1.2.0"",
     ""express-prom-bundle"": ""^3.1.0"",
     ""express-session"": ""1.15.6"",
-    ""grant-express"": ""^4.0.1"",
+    ""grant-express"": ""4.1.2"",
     ""helmet"": ""3.8.2"",",Why this version of `grant-express`? And should we pin everything else too?,2018-11-21 10:11:41
614,"@@ -41,7 +41,7 @@ ar_SA.strings = {
   encoding: 'التشفير...',
   enterCorrectUrl: 'خطأ في الرابط: ارجو التأكد من ادخال رابط مباشر للملف',
   enterUrlToImport: 'ادخل الرابط لاستيراد الملفات',
-  exceedsSize: 'الملف اكبر من الحجم المسموح',
+  exceedsSize: 'الملف اكبر من الحجم المسموح %{size}',",:sweat_smile: It will have to be on the other end ,2021-07-16 12:41:27
115,"@@ -411,6 +424,10 @@ class Uppy {
     const removedFile = updatedFiles[fileID]
     delete updatedFiles[fileID]
 
+    this.removers.forEach((remover) => {
+      remover([fileID])
+    })","Processor and uploader functions are kept in arrays in core because you can have multiple. I think a single remover function should be enough; it doesn't need a pipeline like uploads may need.

Maybe this can be done by emitting a `remove-file` event here in `removeFile()`, and then listening for it in a `DeleteFiles` plugin instead?",2018-02-05 10:41:10
794,"@@ -412,3 +412,7 @@ uppy.on('transloadit:complete', (assembly) => {
 [assembly-status]: https://transloadit.com/docs/api/#assembly-status-response
 
 [template-credentials]: https://transloadit.com/docs/#how-to-create-template-credentials
+
+## Close behaviour
+
+When Uppy“s `close` method is called with `reason: 'user'`, the Transloadit plugin will cancel any Assemblies that were started as a result of uploads.","```suggestion
## Assembly behavior when Uppy is closed

When integrating `@uppy/transloadit` with `@uppy/dashboard`, closing the dashboard will result in continuing assemblies on the server. When the user manually cancels the upload any running assemblies will be cancelled.
```",2022-03-22 08:37:36
75,"@@ -413,14 +424,7 @@ class Uppy {
    * Set the preview URL for a file.
    */
   setPreviewURL (fileID, preview) {
-    const { files } = this.getState()
-    this.setState({
-      files: Object.assign({}, files, {
-        [fileID]: Object.assign({}, files[fileID], {
-          preview: preview
-        })
-      })
-    })
+    this.setFileState(fileID, { preview: preview })",yay!,2017-12-09 16:05:26
35,"@@ -415,7 +415,7 @@ class Uppy {
       throttledCalculateProgress(data)
     })
 
-    this.on('core:upload-success', (fileID, uploadResp, uploadURL) => {","I think someone specifically asked for a full response object, and it makes sense. Is this removing uploadResp, or am I missing something?",2017-07-12 23:12:26
813,"@@ -417,7 +417,7 @@ module.exports = {
     },
     {
       files: ['e2e/**/*.ts', 'e2e/**/*.js'],
-      rules: { 'import/no-extraneous-dependencies': 'off' },
+      rules: { 'import/no-extraneous-dependencies': 'off', 'no-unused-expressions': 'off' },","I guess this change is necessary because `.to.be.called` looks like an unused expression otherwise, correct? Well I have to say that's a sad API design decision (it should have been a function), but there's not much we can do but disable the rule indeed.",2022-04-27 21:13:14
522,"@@ -42,14 +54,38 @@ module.exports = class Provider extends RequestClient {
     return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey)
   }
 
-  authUrl () {
-    return `${this.hostname}/${this.id}/connect`
+  authUrl (queries) {","Technically this is a breaking change. But the `authUrl()` function is not a public API, but one for use by provider-views. So I think we should do a major version bump to companion-client (because of this API change) and provider-views (because it expects the new API), but the provider modules themselves don't need one.",2020-11-16 12:51:13
519,"@@ -42,14 +54,38 @@ module.exports = class Provider extends RequestClient {
     return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey)
   }
 
-  authUrl () {
-    return `${this.hostname}/${this.id}/connect`
+  authUrl (queries) {
+    const urlQueries = []
+    if (queries) {
+      urlQueries.push(queries)
+    }
+
+    if (this.preAuthToken) {
+      urlQueries.push(`uppyPreAuthToken=${this.preAuthToken}`)
+    }
+
+    queries = urlQueries.join('&')","Maybe we can reduce the room for error here by making `authUrl` take an object and using [`qs-stringify`](https://www.npmjs.com/package/qs-stringify)? The preAuthToken is not being URL-encoded here and that might be fine, but it's also something that's easy to forget when passing query strings into the `queries` argument.",2020-11-16 11:25:31
433,"@@ -42,44 +37,150 @@ function progressIndicatorTitle (props) {
   return ''
 }
 
+// function PauseResumeCancelIcon (props) {","I'd vote that, when we're ready to commit to master, it's time to remove large old functions as comments like this one and start relying on Git for history to retrieve them",2020-06-03 08:40:00
620,"@@ -42,6 +45,13 @@ module.exports = class BasePlugin {
     this.setPluginState() // so that UI re-renders with new options
   }
 
+  i18nInit () {
+    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])
+    this.i18n = this.translator.translate.bind(this.translator)
+    this.i18nArray = this.translator.translateArray.bind(this.translator)",Could we move `translator` and `i18nArray` to private properties?,2021-07-21 14:34:38
950,"@@ -42,7 +37,7 @@ jobs:
           context: .
           platforms: linux/amd64,linux/arm64
           file: Dockerfile
-          tags: ${{ steps.package-version.outputs.current-version }}
+          tags: $GITHUB_REF","```suggestion
          tags: ${{ env.GITHUB_REF }}
```",2022-09-01 14:14:43
784,"@@ -42,7 +42,7 @@ exports.verifyToken = (req, res, next) => {
   const { err, payload } = tokenService.verifyEncryptedToken(token, req.companion.options.secret)
   if (err || !payload[providerName]) {
     if (err) {
-      logger.error(err, 'token.verify.error', req.id)
+      logger.error(err.message, 'token.verify.error', req.id)",why not send the whole err object like in the other instances?,2022-03-16 05:07:19
279,"@@ -420,7 +420,7 @@ module.exports = class ProviderView {
   handleAuth () {
     const authState = btoa(JSON.stringify({ origin: getOrigin() }))
     // @todo remove this hardcoded version
-    const clientVersion = 'companion-client:1.0.2'
+    const clientVersion = encodeURIComponent('@uppy/companion-client=1.0.2')",`ProviderView` just got `VERSION` too.,2019-06-05 17:32:55
225,"@@ -422,7 +422,7 @@ module.exports = class ProviderView {
   }
 
   handleAuth () {
-    const authState = btoa(JSON.stringify({ origin: location.origin }))
+    const authState = btoa(JSON.stringify({ origin: location.origin, redirect: 'http://localhost:3' }))
     const link = `${this.provider.authUrl()}?state=${authState}`",`http://localhost:3` 🤔 ,2019-02-21 15:04:33
297,"@@ -422,8 +422,7 @@ module.exports = class ProviderView {
 
   handleAuth () {
     const authState = btoa(JSON.stringify({ origin: getOrigin() }))
-    // @todo remove this hardcoded version
-    const clientVersion = encodeURIComponent('@uppy/companion-client=1.0.2')
+    const clientVersion = encodeURIComponent(`@uppy/companion-client=${ProviderView.VERSION}`)",Hmm this should've been `@uppy/provider-views` I guess! Can we still change it now with back compat or will we just have to suck it up? :P ,2019-07-01 11:48:19
323,"@@ -423,6 +423,27 @@ class Uppy {
     }
   }
 
+  _showOrLogErrorAndThrow (err, showInformer = true) {","Maybe let's make it `(err, { showInformer = true } = {})`,  so that we can use
```
this._showOrLogErrorAndThrow('Cannot add the file'), { showInformer: true })
```
instead of less obvious
```
this._showOrLogErrorAndThrow('Cannot add the file'), false)
```
?",2019-08-23 22:32:32
322,"@@ -423,6 +423,27 @@ class Uppy {
     }
   }
 
+  _showOrLogErrorAndThrow (err, showInformer = true) {
+    const message = typeof err === 'object' ? err.message : err","Is `err` ever not an object? Looks like it's always an Error object in our code, and we don't need this check.",2019-08-23 22:28:19
324,"@@ -423,6 +423,27 @@ class Uppy {
     }
   }
 
+  _showOrLogErrorAndThrow (err, showInformer = true) {
+    const message = typeof err === 'object' ? err.message : err
+    const details = (typeof err === 'object' && err.details) ? err.details : ''",What's that `error.details` field? Do we define it somewhere?,2019-08-23 22:36:22
582,"@@ -428,7 +414,46 @@ class Uppy {
    */
   getFiles () {
     const { files } = this.getState()
-    return Object.keys(files).map((fileID) => files[fileID])
+    return Object.values(files)",Is this on purpose?,2021-06-24 13:10:04
581,"@@ -428,7 +414,46 @@ class Uppy {
    */
   getFiles () {
     const { files } = this.getState()
-    return Object.keys(files).map((fileID) => files[fileID])
+    return Object.values(files)
+  }
+
+  getObjectOfFilesPerState () {
+    const { files: filesObject, totalProgress, error } = this.getState()
+    const files = Object.values(filesObject)
+    const inProgressFiles = files.filter(
+      (file) => !file.progress.uploadComplete && file.progress.uploadStarted
+    )","nit: one-liner
```suggestion
    const inProgressFiles = files.filter(({ progress }) => !progress.uploadComplete && progress.uploadStarted)
```",2021-06-24 13:06:54
736,"@@ -43,10 +44,13 @@ jobs:
     steps:
       - name: Checkout sources
         uses: actions/checkout@v2
+      - name: Alter dockerfile
+        run: |
+          sed -i 's/3020/$PORT/g' Dockerfile","```suggestion
          sed -i 's/^EXPOSE 3020$/EXPOSE $PORT/g' Dockerfile
```",2022-01-10 09:53:10
837,"@@ -43,6 +43,11 @@ export default class RequestClient {
     this.onReceiveResponse = this.onReceiveResponse.bind(this)
     this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token']
     this.preflightDone = false
+    this.companionHeaders = opts !== undefined && opts.companionHeaders !== undefined ? opts.companionHeaders : {}
+  }
+
+  setCompanionHeaders (headers) {
+    this.companionHeaders = headers
   }","Same here, we should not make it publicly available. You can add a `[Symbol.for('uppy test: getCompanionHeaders')]` method to access it from the tests.
```suggestion
    this.#companionHeaders = headers
  }
  
  [Symbol.for('uppy test: getCompanionHeaders')] () { return this.#companionHeaders }
```",2022-05-22 18:31:56
823,"@@ -43,6 +43,8 @@ uppy.use(Compressor, {
 })
 ```
 
+> **Note:** that _all_ these options are passed to Compressor.js.","I think this can be more clear. You are now saying all the _documented_ options are passed to Compressor.js, but the truth is that anything you put in `this.opts` will be passed. Furthermore, you should link to the options and mention to what it is passed (the constructor?)",2022-05-05 10:05:15
511,"@@ -43,6 +44,7 @@
     ScreenCapture: document.querySelector('#opts-ScreenCapture'),
     GoogleDrive: document.querySelector('#opts-GoogleDrive'),
     Dropbox: document.querySelector('#opts-Dropbox'),
+    Box: document.querySelector('#opts-Box'),","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:13:31
690,"@@ -43,7 +43,6 @@ module.exports = {
   rules: {
     // transloadit rules we are actually ok with in the uppy repo
     'import/extensions': 'off',
-    'no-await-in-loop': 'off',",we no longer enforce this in 2.0.0-0 as requested by Antoine,2021-10-28 11:51:48
834,"@@ -43,7 +43,7 @@ module.exports.getURLBuilder = (options) => {
    *
    * @param {string} path the tail path of the url
    * @param {boolean} isExternal if the url is for the external world
-   * @param {boolean=} excludeHost if the server domain and protocol should be included","Out of curiosity, what does this fix exactly? isn't `{boolean=}` a valid JSDoc format?",2022-05-21 19:22:43
841,"@@ -43,8 +45,15 @@ export default class RequestClient {
     this.onReceiveResponse = this.onReceiveResponse.bind(this)
     this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token']
     this.preflightDone = false
+    this.#companionHeaders = opts !== undefined && opts.companionHeaders !== undefined ? opts.companionHeaders : {}","This line can be reduced to:
```js
    this.#companionHeaders = opts?.companionHeaders ?? {}
```
or even better (I don't think it's ever a problem if it stays undefined):
```suggestion
    this.#companionHeaders = opts?.companionHeaders
```",2022-05-23 10:17:14
586,"@@ -43,9 +43,6 @@ function adaptData (listFilesResp, sharedDrivesResp, directory, query, showShare
     modifiedDate: adapter.getItemModifiedDate(item),
     size: adapter.getItemSize(item),
     custom: {
-      // @todo isTeamDrive is left for backward compatibility. We should remove it in the next
-      // major release.
-      isTeamDrive: adapter.isSharedDrive(item),",👍,2021-06-28 09:49:26
524,"@@ -430,11 +447,23 @@ module.exports = class ProviderView {
     }
   }
 
-  listAllFiles (path, files = null) {
+  listAllFiles (path, files = null, meta = undefined) {
     files = files || []
     return new Promise((resolve, reject) => {
       this.provider.list(path).then((res) => {","This `res` is where we'd need `currentFolderName`. Currently, if `moreFiles === true`, this implementation won't reproduce the correct parent's folder names for **Google Drive** and **OneDrive** since their IDs are unique, hashed strings instead of folder names (IMHO, Dropbox took the cleverest approach here).

FWIW, the `relativePath` in the `data` object is giving `/{fileId}`; and this is the reason that the above statement is relevant.

Read more at https://github.com/transloadit/uppy/pull/2605#issuecomment-729799907.",2020-11-18 16:49:58
523,"@@ -430,11 +447,23 @@ module.exports = class ProviderView {
     }
   }
 
-  listAllFiles (path, files = null) {
+  listAllFiles (path, files = null, meta = undefined) {
     files = files || []
     return new Promise((resolve, reject) => {
       this.provider.list(path).then((res) => {
+        let itemsRelativePath
+
+        if (meta) {","My idea on having this condition here is that if there's a meta, then there's a `previousRelativePath` and a `currentFolder`. That's why I skipped checking those individual properties.",2020-11-18 16:41:33
922,"@@ -434,6 +434,18 @@ class Uppy {
    * The `files` value is passed in because it may be updated by the caller without updating the store.
    */
   #checkAndCreateFileStateObject (files, fileDescriptor) {
+    // Uppy expects files in { name, type, size, data } format.
+    // If the actual File object is passed from input[type=file] or drag-drop,
+    // we normalize it to match Uppy file object
+    if (!fileDescriptor.data && !fileDescriptor.isRemote) {","This seems like a indirect way to guess that we are dealing with a `File`. Wouldn't it be better to do:
```suggestion
    if (fileDescriptor instanceof File) {
```",2022-08-22 09:30:19
683,"@@ -436,151 +462,150 @@ class Uploader {
   /**
    * start the tus upload","Not sure how to fill it in, but it'd be nice to document what this `stream` param is. (ditto in below methods)
```suggestion
   * start the tus upload
   * @param {any} stream
```",2021-10-23 16:36:29
836,"@@ -436,6 +438,11 @@ export default class AwsS3Multipart extends BasePlugin {
     return Promise.all(promises)
   }
 
+  setCompanionHeaders () {","Let's not add public methods if it's not necessary.
```suggestion
  #setCompanionHeaders = () => {
```",2022-05-22 18:27:18
604,"@@ -44,7 +46,7 @@ function setTypeInBlob (file) {
 }
 
 module.exports = class XHRUpload extends Plugin {
-  static VERSION = require('../package.json').version
+  static VERSION = version","I don't think that's correct, I'm afraid it would break https://github.com/andrewimm/babel-plugin-inline-package-json.",2021-07-12 14:01:18
376,"@@ -44,9 +44,12 @@ module.exports = class Client {
       body: data
     }).then((response) => response.json()).then((assembly) => {
       if (assembly.error) {
-        const error = new Error(assembly.error)
+        const error = new Error(assembly)
         error.message = assembly.error","hmm, I think we can just do `new Error(assembly.error)` and that should set `error.message` correctly too. I don't know why it was done this way with a separate `.message` assignment before :sweat_smile: 

Should we do `error.assembly = assembly` so the template editor can access it that way, rather than parsing `error.details`?",2020-02-10 10:20:37
368,"@@ -44,9 +44,9 @@ module.exports = class Client {
       body: data
     }).then((response) => response.json()).then((assembly) => {
       if (assembly.error) {
-        const error = new Error(assembly.error)
+        const error = new Error(assembly)
         error.message = assembly.error
-        error.details = assembly.reason
+        error.details = `${assembly.message} Assembly ID: ${assembly.assembly_id}`","@Acconut Marius, I added `assembly_id`, not sure how to best include all of the error response in Uppy’s error message, as you proposed in https://github.com/transloadit/uppy/issues/2000. Maybe you’ve got suggestions? :)",2020-01-07 16:50:01
202,"@@ -446,6 +446,10 @@ this.info({
 
 Subscribe to an uppy-event. See below for the full list of events.
 
+### `uppy.off('event', action)`
+
+Unsubscribe to an uppy-event. See below for the full list of events.
+",Minor neat-pick: “unsubscribe from?”,2018-09-26 21:09:27
320,"@@ -448,11 +448,18 @@ module.exports = class Tus extends Plugin {
 
   handleUpload (fileIDs) {
     if (fileIDs.length === 0) {
-      this.uppy.log('Tus: no files to upload!')
+      this.uppy.log('[Tus] No files to upload')
       return Promise.resolve()
     }
 
-    this.uppy.log('Tus is uploading...')
+    if (fileIDs.length > 10 && this.opts.limit === 0) {",Shall we always throw this warning if a limit wasnt set?,2019-08-21 16:49:55
463,"@@ -448,6 +463,36 @@ The class must also have an `authProvider` string (lowercased) field which typic
 }
 ```
 
+## Migrating v1 to v2
+
+### Prerequisite
+
+Since v2, you now need to be running `node.js > v10.0.0` to use Companion.",Should this be `>= v10.0.0`?,2020-07-16 06:54:55
479,"@@ -448,6 +463,36 @@ The class must also have an `authProvider` string (lowercased) field which typic
 }
 ```
 
+## Migrating v1 to v2
+
+### Prerequisite
+
+Since v2, you now need to be running `node.js >= v10.0.0` to use Companion.","```suggestion
Since v2, you now need to be running `node.js >= v10.20.1` to use Companion.
```",2020-09-07 09:38:25
157,"@@ -448,7 +448,7 @@ class Uppy {
       this.scheduledAutoProceed = setTimeout(() => {
         this.scheduledAutoProceed = null
         this.upload().catch((err) => {
-          console.error(err.stack || err.message || err)
+          onError(err.stack || err.message || err)","`upload()` already logs an error and shows the informer, so we don't need to use `onError` here. (`console.error` is probably not that necessary either)",2018-05-31 10:21:00
415,"@@ -449,7 +449,6 @@ class Uploader {
       uploadUrl: this.options.uploadUrl,
       // @ts-ignore
       uploadLengthDeferred: false,
-      resume: true,",The `resume` option did not have any effect when used inside Node.js without specifying the `urlStorage` parameter as well. So this can be removed.,2020-05-03 15:45:45
844,"@@ -45,3 +45,32 @@ jobs:
           # Necessary for Node.js v10.x
           NODE_OPTIONS: --experimental-worker
           YARN_IGNORE_NODE: 1
+  test:
+    name: Unit tests
+    runs-on: ubuntu-latest
+    strategy:
+      matrix:
+        node-version: [14.x, 16.x, 17.x]","18 might make more sense?

```suggestion
        node-version: [14.x, 16.x, 18.x]
```",2022-05-23 10:51:51
39,"@@ -45,3 +45,356 @@
     line-height: 40px;
   }
 }
+
+.UppyInformer span {
+  line-height: 12px;
+  width: 13px;
+  height: 13px;
+  display: inline-block;
+  vertical-align: middle;
+  background-color: $color-white;
+  border-radius: 50%;
+  position: relative;
+  top: -1px;
+  left: 5px;
+  font-size: 10px;
+  margin-left: -1px;
+}
+
+.UppyInformer span:after {
+  line-height: 1.3;
+  word-wrap: break-word;
+}
+
+// balloon
+// https://kazzkiq.github.io/balloon.css/","Minor, but perhaps this could be in a separate file?",2017-08-28 08:01:25
847,"@@ -45,6 +45,10 @@ function getMaskableSecrets (companionOptions) {
     })
   }
 
+  if (s3 && s3.secret) {","Since we're dropping legacy Node.js in the next major anyway.
```suggestion
  if (s3?.secret) {
```",2022-05-24 15:42:44
592,"@@ -45,7 +44,7 @@ try {
   fs.mkdirSync(DATA_DIR)
 }
 process.on('exit', () => {
-  rimraf.sync(DATA_DIR)
+  fs.rm(DATA_DIR, { recursive: true, force: true })",🎉 ,2021-06-28 10:04:37
783,"@@ -45,7 +45,16 @@ module.exports = class DropTarget extends BasePlugin {
     }
   }
 
+  isFileTransfer = (event) => {
+   const transferTypes = event.dataTransfer.types ?? []
+   return transferTypes.some((type) => type === 'Files')","```suggestion
    const transferTypes = event.dataTransfer.types ?? []
    return transferTypes.some((type) => type === 'Files')
```",2022-03-14 11:00:22
782,"@@ -45,7 +45,17 @@ module.exports = class DropTarget extends BasePlugin {
     }
   }
 
+  isFileTransfer = (event) => {
+    return [].some.call(event.dataTransfer.types, (t) => {
+      return t === 'Files'
+    })","```suggestion
   const transferTypes = event.dataTransfer.types ?? []
   return transferTypes.some((type) => type === 'Files')
```",2022-03-14 04:18:43
781,"@@ -45,8 +45,9 @@ describe('Dashboard with Tus', () => {
 
   it('should upload remote image with URL plugin', () => {
     cy.get('[data-cy=""Url""]').click()
-    cy.get('.uppy-Url-input').type('https://via.placeholder.com/600x400')
+    cy.get('.uppy-Url-input').type('https://raw.githubusercontent.com/transloadit/uppy/main/assets/developed-by-transloadit.png')","Can we make it fetch `127.0.0.1` instead? That would avoid network flakiness, and make the test pass locally even if I don't have internet.",2022-03-11 12:08:43
165,"@@ -455,7 +455,7 @@ module.exports = class ProviderView {
     const handleToken = (e) => {
       const allowedOrigin = new RegExp(noProtocol(this.plugin.opts.hostPattern))
       if (!allowedOrigin.test(noProtocol(e.origin)) || e.source !== authWindow) {
-        console.log(`rejecting event from ${e.origin} vs allowed pattern ${this.plugin.opts.hostPattern}`)
+        this.plugin.uppy.log(`rejecting event from ${e.origin} vs allowed pattern ${this.plugin.opts.hostPattern}`)",:+1: ,2018-06-11 09:09:05
372,"@@ -455,8 +457,9 @@ class Uploader {
         }
       }
     )
+    const httpMethod = (this.options.httpMethod || '').toLowerCase() === 'put' ? 'put' : 'post'",nice :+1: ,2020-02-03 10:09:34
853,"@@ -456,7 +454,7 @@ class Uploader {
    * @param {string} url
    * @param {object} extraData
    */
-  emitSuccess (url, extraData) {
+  _emitSuccess (url, extraData) {",Should we work on replacing all leading underscores by `#` (so private fields and private methods) now that we have dropped support for Node.js 12?,2022-05-30 09:33:04
66,"@@ -457,6 +451,15 @@ module.exports = class Transloadit extends Plugin {
         onAssemblyError(assembly, error)
       }
 
+      const checkAllComplete = () => {","Moved this check from `onAssemblyFinished` into here, so we don't reject the entire upload anymore if an assembly fails. Instead, the files belonging to that assembly are added to the `{ failed }` result array.",2017-11-10 16:14:57
206,"@@ -458,7 +459,12 @@ module.exports = class Dashboard extends Plugin {
     this.uppy.on('plugin-remove', this.removeTarget)
     this.uppy.on('file-added', (ev) => {
       this.toggleAddFilesPanel(false)
-      this.hideAllPanels()
+    })
+    this.uppy.on('complete', ({ failed, uploadID }) => {
+      if (this.opts.closeAfterFinish && failed.length === 0) {
+        // All uploads are done
+        this.requestCloseModal()
+      }",Should this event listener be removed `.off` in `uninstall` too?,2018-10-15 15:49:40
260,"@@ -458,8 +458,8 @@ module.exports = class ProviderView {
 
     const patterns = Array.isArray(allowedOrigin) ? allowedOrigin.map(getRegex) : [getRegex(allowedOrigin)]
     return patterns
-      .filter((pattern) => pattern !== null)
-      .some((pattern) => pattern.test(origin))
+      .filter((pattern) => pattern != null) // loose comparison to catch undefined","I wonder if it’s better to explicitly check for `undefined` for readability. But with your comment this works, just thinking out loud.",2019-05-23 12:23:36
6,"@@ -46,12 +40,18 @@ export default class Tus10 extends Plugin {
           percentage = Math.round(percentage)
 
           // Dispatch progress event
-          this.core.emitter.emit('progress', {
-            plugin: this,
-            percentage: percentage
+          this.core.emitter.emit('upload-progress', {","We could potentially destructure `emitter` and `log` from `this.core` if we have to call them a bunch, but it may be better to be explicit about using `this.core.emitter`, etc.

For instance:

`const { emitter, log } = this.core`
",2016-04-04 15:53:58
187,"@@ -46,7 +46,7 @@ spec:
                 - companion
             topologyKey: kubernetes.io/hostname    
       containers:
-      - image: docker.io/transloadit/companion:latest
+      - image: docker.io/kiloreux/uppy-companion:latest",Should be transloadit,2018-08-17 05:11:41
97,"@@ -46,7 +46,8 @@ module.exports = class StatusBar extends Plugin {
       target: 'body',
       hideUploadButton: false,
       showProgressDetails: false,
-      locale: defaultLocale
+      locale: defaultLocale,
+      hideAfterFinish: false",Would it make sense to default this to `true`?,2018-01-01 22:40:36
59,"@@ -46,8 +46,17 @@ function getFiles (store) {
   })
 }
 
+function probe (event) {
+  sendMessageToAllClients({
+    type: 'uppy/HERE_I_AM'
+  })
+}","MDN said something about using `clients.get(event.clientId)` to only send the message back to the sender, but `clientId` was undefined for me--i guess that's why we were sending the `uppy/ALL_FILES` message to all clients too.",2017-10-02 09:44:31
805,"@@ -461,3 +461,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+E).","```suggestion
## License

[The MIT License](LICENSE).
```",2022-03-24 13:42:58
739,"@@ -461,3 +461,8 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+rstack.com"" target=""_blank""> <img align=""left"" width=""117"" alt=""BrowserStack logo"" src=""https://i.ibb.co/HDRDHmx/Browserstack-logo-2x.png""> </a>
+
+## License
+
+[The MIT License](LICENSE).",Hum,2022-01-10 18:54:42
426,"@@ -464,6 +466,7 @@ module.exports = class Tus extends Plugin {
         this.uppy.emit('upload-success', file, uploadResp)
         this.resetUploaderReferences(file.id)
         queuedRequest.done()","I think these should also be flipped. This is when a 'remote' upload has finished, eg. when you select files from Google Drive.",2020-05-13 11:11:58
808,"@@ -465,3 +465,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+E).","```suggestion
```",2022-04-07 18:52:58
706,"@@ -465,6 +467,12 @@ class Uploader {
    * @param {any} stream
    */
   async _uploadTus (stream) {
+    testIdx++
+    if (testIdx > 1) {
+      this.failed = true
+      setTimeout(() => this.emitError(new Error('test')), 1000)
+      return Promise.reject(new Error('test'))
+    }",Is this a deliberate change or was meant to be removed after testing? ,2021-11-11 16:54:40
870,"@@ -467,3 +467,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+E).","```suggestion
```",2022-06-09 14:33:02
259,"@@ -47,15 +46,18 @@ class Uploader {
 
     this.options = options
     this.token = uuid.v4()
-    this.options.path = `${this.options.pathPrefix}/${Uploader.FILE_NAME_PREFIX}-${this.token}`
+    this.path = `${this.options.pathPrefix}/${Uploader.FILE_NAME_PREFIX}-${this.token}`
+    this.metadata = Object.assign({}, this.options.metadata || {})
+    this.metadata.filename = this.metadata.name || path.basename(this.path)
+    this.metadata.filetype = this.metadata.type
     this.streamsEnded = false","What about adding this `filename` and `filetype` conversion to `uploadRemote` on `@uppy/tus` client instead? Then it’s consistent — tusd expects metadata this way, it doesn’t convert `name` to `filename` for you, and so will Companion. We have that conversion for direct uploads, and we’ll do the same in the same place for remote uploads.

https://github.com/transloadit/uppy/blob/master/packages/%40uppy/tus/src/index.js#L180-L184",2019-05-23 07:40:38
809,"@@ -47,6 +47,10 @@ const RESTORE = false
 // Rest is implementation! Obviously edit as necessary...
 
 export default () => {
+  const companionAllowedHosts = undefined
+  // If you want to test dynamic OAuth, instead use:
+  // const companionAllowedHosts = Transloadit.COMPANION_PATTERN",Can we use `import.meta.env.VITE_COMPANION_ALLOWED_HOSTS` instead?,2022-04-11 12:46:13
3,"@@ -47,6 +47,7 @@
     ""zuul"": ""^3.7.2""
   },
   ""dependencies"": {
-    ""async"": ""^1.5.0""
+    ""async"": ""^1.5.0"",","This can be removed I think then?
",2015-12-07 14:12:01
494,"@@ -47,7 +47,7 @@ class Zoom extends Provider {
         }
 
         if (!from && !to && !meetingId) {
-          const end = cursor && moment.utc(cursor).endOf('day').tz(userResponse.timezone || 'UTC')
+          const end = cursor && moment.utc(cursor).endOf('day').tz(userBody.timezone || 'UTC')","caught a bug while testing. `userResponse` is a response object, not body",2020-10-19 07:41:49
529,"@@ -47,7 +48,8 @@ module.exports.addToCookies = (res, token, companionOptions, providerName) => {
 /**
  *
  * @param {object} res
- * @param {object=} companionOptions
+ * @param {object} companionOptions
+ * @param {string=} companionOptions.cookieDomain","```suggestion
```",2020-11-23 07:26:56
975,"@@ -470,3 +470,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+E).","```suggestion
```",2022-09-25 19:17:08
505,"@@ -471,6 +478,9 @@ class Uploader {
     const headers = headerSanitize(this.options.headers)
     const reqOptions = { url: this.options.endpoint, headers, encoding: null }
     const httpRequest = request[httpMethod]
+    if (this.options.insecureUpload) {",what is this option for? 🤔 ,2020-11-11 13:27:37
902,"@@ -472,3 +472,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 
 [The MIT License](LICENSE).
 E).
+E).","```suggestion
```",2022-08-04 15:25:55
315,"@@ -472,6 +472,13 @@ class Uppy {
 
     const fileID = generateFileID(file)
 
+    if (files[fileID]) {
+      this.info(`Not adding duplicate file '${fileName}', it already exists`, 'error', 5000)
+      this.log(`Not adding duplicate file '${fileName}', it already exists`)","Is this causing multiple log statements? If so, is it intended?",2019-08-12 15:24:47
497,"@@ -473,6 +474,21 @@ class Uppy {
       }
     }
 
+    // We can't check maxTotalFileSize if the size is unknown.
+    if (maxTotalFileSize && file.data.size != null) {
+      let totalFilesSize = 0
+      totalFilesSize += file.size",Should we use `file.data.size` here too?,2020-10-23 10:34:06
988,"@@ -474,3 +474,4 @@ We use Browserstack for manual testing <a href=""https://www.browserstack.com"" ta
 ## License
 
 [The MIT License](LICENSE).
+E).","```suggestion
```",2022-10-19 20:45:52
560,"@@ -476,7 +476,11 @@ module.exports = class Webcam extends Plugin {
   }
 
   getVideo () {
-    const mimeType = this.recordingChunks[0].type
+    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)
+    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'
+    // attribute in order to determine the correct MIME type.
+    const mimeType = this.recordingChunks.find(blob => blob.type?.length > 0).type",is it safe for us to use the `blob.type?.length` optional chaining with IE11 support? @goto-bus-stop ,2021-04-08 20:11:24
64,"@@ -477,7 +477,7 @@ class Uppy {
   retryAll () {
     const updatedFiles = Object.assign({}, this.getState().files)
     const filesToRetry = Object.keys(updatedFiles).filter(file => {
-      return updatedFiles[file].error
+      return updatedFiles[file].error.message","Should we be checking if `error.message` exists first? What if string is returned from somewhere? Though I think we have an Eslint rule for that now, an extra check would not be too bad?",2017-11-02 03:08:09
626,"@@ -48,6 +45,17 @@ class FileCard extends Component {
     this.props.toggleFileCard(false)
   }
 
+  // TODO(aduh95): move this to `UNSAFE_componentWillMount` when updating to Preact X+.",No other way apart from `UNSAFE_componentWillMount`? `constructor` not working for this?,2021-07-29 09:52:53
355,"@@ -48,6 +48,10 @@ matrix:
       env: COMPANION=true
       addons:
         apt: *APT
+    - node_js: 6
+      env: COMPANION_NODE6=true","We can just reuse the `COMPANION=true` env var again here, I think, similarly to how we have 2 jobs for `UNIT=true` (one on stable node and one on node 10)",2019-11-23 12:13:38
849,"@@ -48,7 +48,7 @@ function checkIfCorrectURL (url) {
 }
 
 function getFileNameFromUrl (url) {
-  return url.substring(url.lastIndexOf('/') + 1)
+  return url.substring(url.lastIndexOf('/') + 1).split('?')[0], // make sure filename does not have query params in it","That won't work as expected if there's a `/` after the `?` char. Instead we can do
```suggestion
  const queryParamsIndexOf = url.indexOf('?')
  const queryParamsStart = queryParamsIndexOf === -1 ? undefined : queryParamsIndexOf
  return url.substring(url.lastIndexOf('/', queryParamsStart) + 1, queryParamsStart)
```",2022-05-26 08:27:57
860,"@@ -48,7 +48,8 @@ function checkIfCorrectURL (url) {
 }
 
 function getFileNameFromUrl (url) {
-  return url.substring(url.lastIndexOf('/') + 1)
+  const { pathname } = new URL(url)
+  return pathname.substring(pathname.lastIndexOf('/') + 1)",This change looks good to me.,2022-05-31 16:57:59
863,"@@ -48,7 +48,8 @@ function checkIfCorrectURL (url) {
 }
 
 function getFileNameFromUrl (url) {
-  return url.substring(url.lastIndexOf('/') + 1)
+  const { pathname } = new URL(url)
+  return pathname.substring(pathname.lastIndexOf('/') + 1)  ","```suggestion
  return pathname.substring(pathname.lastIndexOf('/') + 1)
```",2022-06-01 10:22:03
852,"@@ -48,7 +48,9 @@ function checkIfCorrectURL (url) {
 }
 
 function getFileNameFromUrl (url) {
-  return url.substring(url.lastIndexOf('/') + 1)
+  const queryParamsIndexOf = url.indexOf('?')
+  const queryParamsStart = queryParamsIndexOf === -1 ? undefined : queryParamsIndexOf
+  return url.substring(url.lastIndexOf('/', queryParamsStart) + 1, queryParamsStart)","I think we can use web apis for this
```suggestion
  return new URL(url).origin
```",2022-05-30 09:32:56
467,"@@ -480,6 +483,16 @@ class Uppy {
         }))
       }
     }
+
+    // We can't check minFileSize if the size is unknown.
+    if (minFileSize && file.data.size != null) {
+      if (file.data.size < minFileSize) {
+        throw new RestrictionError(this.i18n('inferiorSize2', {
+          backwardsCompat: this.i18n('inferiorSize'),
+          size: prettierBytes(minFileSize)
+        }))","```suggestion
        throw new RestrictionError(this.i18n('inferiorSize', {
          size: prettierBytes(minFileSize)
        }))
```",2020-07-27 10:56:57
271,"@@ -480,7 +480,8 @@ class Uploader {
       if (error) {
         this.emitError(error)
       } else {
-        this.emitSuccess(null, {
+        const url = data && data.Location ? data.Location : null;","```suggestion
        const url = data && data.Location ? data.Location : null
```",2019-05-30 08:18:35
82,"@@ -486,6 +707,9 @@ module.exports = class Transloadit extends Plugin {
       this.uppy.on('upload-success', this.onFileUploadURLAvailable)
     }
 
+    this.uppy.on('restore:get-data', this.getPersistentData)
+    this.uppy.on('restored', this.onRestored)
+",So will `restore:` here a goldenretriever-specific event and `restored` a global one?,2017-12-12 03:28:14
890,"@@ -49,15 +51,16 @@ class Dashboard extends Component {
     uppy.removePlugin(this.plugin)
   }
 
+  [Symbol.for('htmlProps')] () { return this.#htmlProps }",what's the purpose of this?,2022-07-26 13:10:27
468,"@@ -49,6 +49,10 @@ Set rules and conditions to limit the type and/or number of files that can be se
 
 Maximum file size in bytes for each individual file.
 
+### `restrictions.minFileSize`
+
+Minimun file size in bytes for each individual file.","Little typo 😇 
```suggestion
Minimum file size in bytes for each individual file.
```",2020-07-27 10:58:23
333,"@@ -49,6 +49,7 @@ class Uppy {
         youCanOnlyUploadFileTypes: 'You can only upload: %{types}',
         companionError: 'Connection with Companion failed',
         companionAuthError: 'Authorization required',
+        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',","The link is not clickable and users won't be able to copy it before the bubble disappears, so I'm not sure if this is super useful. Maybe we could make it say something like ""You can now remove the authorization in %{provider}'s settings panel""? Would be nice to actually link to the page but that would require some changes in the info bubbles...",2019-09-23 11:33:47
144,"@@ -49,7 +49,8 @@ class Tabs extends Component {
             tabindex=""-1""
             type=""file""
             name=""files[]""
-            multiple=""true""
+            multiple={this.props.maxNumberOfFiles !== 1 || !this.props.maxNumberOfFiles}",same here,2018-05-09 15:51:47
388,"@@ -492,18 +502,25 @@ class Uploader {
     })
   }
 
-  /**
-   * Upload the file to S3 while it is still being downloaded.
-   */
-  uploadS3Multipart () {
+  beginTailReadStream () {
     const file = createTailReadStream(this.path, {",we are dropping the use of tail read stream as seen [here](https://github.com/transloadit/uppy/pull/2114). So maybe we should as well do without in this PR?,2020-03-11 18:17:36
78,"@@ -492,7 +492,7 @@ function _emitSocketProgress (uploader, progressData, file) {
   const {progress, bytesUploaded, bytesTotal} = progressData
   if (progress) {
     uploader.core.log(`Upload progress: ${progress}`)",I think these `uploader.core` references also need to be changed to `.uppy`,2017-12-09 16:09:47
329,"@@ -496,6 +494,25 @@ module.exports = class ProviderView {
     }
   }
 
+  listAllFiles (path, files = null) {
+    files = files || []
+    return new Promise((resolve) => {
+      this.provider.list(path).then((res) => {",should we add a `catch` for this call. Otherwise what will happen when the call to `this.provider.list` fails?,2019-08-29 19:09:35
330,"@@ -496,6 +494,25 @@ module.exports = class ProviderView {
     }
   }
 
+  listAllFiles (path, files = null) {
+    files = files || []
+    return new Promise((resolve) => {
+      this.provider.list(path).then((res) => {
+        res.items.forEach((item) => {
+          if (!item.isFolder) {
+            files.push(item)
+          }
+        })
+        let moreFiles = res.nextPagePath || null
+        if (moreFiles) {
+          return this.listAllFiles(moreFiles, files).then((files) => resolve(files))",do we need to add a `catch` here too? 🤔 ,2019-08-29 19:39:24
149,"@@ -498,7 +498,7 @@ module.exports = class ProviderView {
       }
 
       // split url because chrome adds '#' to redirects
-      if (authWindowUrl && authWindowUrl.split('#')[0] === redirect) {
+      if (authWindowUrl && (authWindowUrl === redirect || authWindowUrl.split('#')[0] === redirect)) {","Hi, what scenario does this solve? Testing in chrome, the current implementation already covers for both scenarios. 

```js
""yahoo.com?redherring=3894"".split('#')
[""yahoo.com?redherring=3894""]
""yahoo.com?redherring=3894#"".split('#')
(2) [""yahoo.com?redherring=3894"", """"]
```

Or does `.split` behave differently in other browsers?
",2018-05-15 15:17:59
589,"@@ -5,10 +5,7 @@ module.exports = class DriveProviderViews extends ProviderViews {
     e.stopPropagation()
     e.preventDefault()
 
-    // Shared Drives aren't selectable; for all else, defer to the base ProviderView.",should we keep this comment as it provides an explanation of how it works?,2021-06-28 10:01:08
959,"@@ -5,6 +5,9 @@ import installLogsPrinter from 'cypress-terminal-report/src/installLogsPrinter.j
 
 export default defineConfig({
   defaultCommandTimeout: 16000,
+  retries: {
+    runMode: 3,
+  },","This treats all tests as flaky, right? I'm not sure that's the right move, as if a PR introduces a flakiness to a test, we would be less likely to notice, reducing the overall usefulness of the whole test suite.",2022-09-12 11:02:27
954,"@@ -5,6 +5,9 @@ on:
   pull_request:
     # We want all branches so we configure types to be the GH default again
     types: [ opened, synchronize, reopened ]
+    paths:
+      - yarn.lock
+      - 'packages/@uppy/companion'","```suggestion
      - 'packages/@uppy/companion/**'
```",2022-09-07 08:12:04
319,"@@ -5,7 +5,7 @@
 <script src=""/uppy/uppy.min.js""></script>
 <script>
   var uppy = Uppy.Core({debug: true});
-  uppy.use(Uppy.Tus, {endpoint: '//master.tus.io/files/'});
+  uppy.use(Uppy.Tus, {endpoint: 'https://master.tus.io/files/'});","Question: what is `/examples/bundle/` about, we don't seem to have a link to it on a site anywhere, is it for some local testing? It works, but we need to add `{ autoProceed: true }`, and actually attach ProgressBar somewhere.",2019-08-15 18:05:53
914,"@@ -5,7 +5,7 @@ describe('AppComponent', () => {
   beforeEach(async () => {
     await TestBed.configureTestingModule({
       declarations: [
-        AppComponent,
+        AppComponent","```suggestion
        AppComponent,
```",2022-08-17 09:56:33
475,"@@ -5,8 +5,7 @@
 const config = require('@purest/providers')
 const dropbox = require('./dropbox')
 const drive = require('./drive')
-const instagram = require('./instagram')",can we delete any code in the provider implementation? i imagine the entire thing is unused now?,2020-09-02 07:00:38
565,"@@ -50,12 +50,11 @@ module.exports = class Translator {
    * @license https://github.com/airbnb/polyglot.js/blob/master/LICENSE
    * taken from https://github.com/airbnb/polyglot.js/blob/master/lib/polyglot.js#L299
    *
-   * @param {string} phrase that needs interpolation, with placeholders
+   * @param {any} phrase that needs interpolation, with placeholders","Hmm, I think we only allow string here and then all the jsx elements and such are inside the `options` object?",2021-05-26 15:16:38
912,"@@ -50,4 +50,7 @@ export { default as GoldenRetriever } from '@uppy/golden-retriever'
 export { default as ReduxDevTools } from '@uppy/redux-dev-tools'
 export { default as ThumbnailGenerator } from '@uppy/thumbnail-generator'
 
+export { COMPANION as TRANSLOADIT_COMPANION } from '@uppy/transloadit'
+export { ALLOWED_COMPANION_PATTERN as TRANSLOADIT_ALLOWED_COMPANION_PATTERN } from '@uppy/transloadit'","```suggestion
import { default as Transloadit, COMPANION, ALLOWED_COMPANION_PATTERN } from '@uppy/transloadit'
Transloadit.COMPANION = COMPANION
Transloadit.ALLOWED_COMPANION_PATTERN = ALLOWED_COMPANION_PATTERN
```",2022-08-16 13:36:29
178,"@@ -50,6 +20,35 @@
   <a href=""http://hughsk.io/disc/"">disc</a>.
   <hr />
 
+  <h2 id=""bundle-sizes"">Bundle Sizes</h2>
+  <p>
+    Below are the minified and gzipped sizes for each Uppy package. Note that this includes the dependencies for each package, some of which are shared when you install multiple plugins—for example, the `@uppy/dropbox` and `@uppy/instagram` package are both over 11kB including dependencies, but only sum up to about 15kB when they are used together.
+  </p>","Markdown doesn’t work here, so maybe we could wrap package names in `<code>`?",2018-07-16 20:47:45
286,"@@ -50,8 +56,12 @@ exports.getItemId = (item) => {
 }
 
 exports.getItemRequestPath = (item) => {
-  // If it's from a Team Drive, add the Team Drive ID as a query param.
+  // If it's from/is a Team Drive, add the Team Drive ID as a query param.",is this a typo?,2019-06-17 08:38:14
287,"@@ -50,8 +56,12 @@ exports.getItemId = (item) => {
 }
 
 exports.getItemRequestPath = (item) => {
-  // If it's from a Team Drive, add the Team Drive ID as a query param.
+  // If it's from/is a Team Drive, add the Team Drive ID as a query param.
   // The server needs the Team Drive ID to list files in a Team Drive folder.
+  if (exports.isTeamDrive(item)) {",does this mean that we can delete the `if` block that is right under this one?,2019-06-17 09:22:10
327,"@@ -502,29 +524,48 @@ module.exports = class XHRUpload extends Plugin {
   }
 
   uploadFiles (files) {
-    const actions = files.map((file, i) => {
+    const promises = files.map((file, i) => {
       const current = parseInt(i, 10) + 1
       const total = files.length
 
       if (file.error) {
         return () => Promise.reject(new Error(file.error))","#todo - we have this error in master too, this should be `return Promise.reject(new Error(file.error))` instead, otherwise we're getting `.then` is not a function on request fail&retry, with aws-s3 plugin:

![image](https://user-images.githubusercontent.com/7578559/63789337-96e8a700-c910-11e9-89dc-6e82a1eb2c7c.png)
",2019-08-27 16:22:30
544,"@@ -502,6 +504,12 @@ module.exports = class Dashboard extends Plugin {
     }
   }
 
+  disableAllFocusableElements = (disable) => {
+    const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS))
+    focusableNodes.forEach(node => node.setAttribute('tabindex', disable ? '-1' : '0'))","@goto-bus-stop what do you think of this? I’ve checked and we mostly have `tabindex=0` on FOCUSABLE_ELEMENTS, nothing else is used, so not worth storing the previous value before changing it to `-1`?

P.S. TIL “[The maximum value for tabindex is 32767](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)”.",2021-02-24 14:45:16
966,"@@ -508,6 +508,14 @@ uppy.on('dashboard:modal-open', () => {
 
 Fired when the Dashboard modal is closed.
 
+### `dashboard:show-panel`
+
+**Parameters:**
+
+* `id` — The unique identifier of the plugin that is being shown
+
+Fired when a user clicks on a specific source plugin in the Dashboard","```suggestion
Fired when a user clicks on a source plugin, such as Webcam or Google Drive, in the Dashboard.
```",2022-09-14 08:04:19
229,"@@ -51,11 +56,14 @@ module.exports = class Provider extends RequestClient {
   }
 
   logout (redirect = location.href) {
-    return this.get(`${this.id}/logout?redirect=${redirect}`)
-      .then((res) => {
-        this.uppy.getPlugin(this.pluginId).storage.removeItem(this.tokenKey)
-        return res
-      })
+    return new Promise((resolve, reject) => {","this promise chain can also be flattened

```js
return this.get(`${this.id}/logout?redirect=${redirect}`).then((res) => {
  return this.uppy.getPlugin(this.pluginId).storage.removeItem(this.tokenKey)
    .then(() => res)
})
```",2019-03-25 10:33:01
901,"@@ -51,13 +51,14 @@ export default class Compressor extends BasePlugin {
           const compressedSavingsSize = file.data.size - compressedBlob.size
           this.uppy.log(`[Image Compressor] Image ${file.id} compressed by ${prettierBytes(compressedSavingsSize)}`)
           totalCompressedSize += compressedSavingsSize
+          console.log('YOOOO', compressedBlob)",YOOOO,2022-08-03 18:28:38
883,"@@ -51,6 +51,11 @@ function getMediaDevices () {
   // eslint-disable-next-line compat/compat
   return navigator.mediaDevices
 }
+
+function isModeAvailable (modes, mode) {
+  return modes.indexOf(mode) !== -1","```suggestion
  return modes.includes(mode)
```",2022-07-21 00:35:29
473,"@@ -51,7 +51,10 @@ const getConfigFromEnv = () => {
       },
       zoom: {
         key: process.env.COMPANION_ZOOM_KEY,
-        secret: getSecret('COMPANION_ZOOM_SECRET')
+        secret: getSecret('COMPANION_ZOOM_SECRET'),
+        custom: {
+          verificationToken: getSecret('COMPANION_ZOOM_VERIFICATION_TOKEN')","`verificationToken` is a required option, right? can we put it on the `zoom` options object itself instead of inside `custom`?",2020-08-17 09:00:03
292,"@@ -51,7 +51,7 @@ module.exports = function FileProgress (props) {
   ) {
     return (
       <div class=""uppy-DashboardItem-progress"">
-        <div class=""uppy-DashboardItem-progressIndicator"">
+        <div class=""uppy-u-reset uppy-DashboardItem-progressIndicator"">","Is `uppy-u-reset` supposed to be on a div, instead of a button?",2019-06-24 16:00:34
308,"@@ -51,8 +51,11 @@
       };
     }
 
+    // IE 10 doesn’t support console.debug
+    var consoleDebug = console.debug || console.log
+
     console.log = customLog(console.log.bind(console), document.getElementById(""console-log""));","I guess we don’t need `console.log =` here then, because `.debug` calls `.log` when needed? But it’s a minor detail, it’s not hurting anything.",2019-08-05 12:15:51
76,"@@ -514,44 +523,31 @@ class Uppy {
       files: updatedFiles
     })
 
-    this.emit('core:upload-retry', fileID)
+    this.emit('upload-retry', fileID)
 
     const uploadID = this.createUpload([ fileID ])
-    return this.runUpload(uploadID)
+    return this._runUpload(uploadID)
   }
 
   reset () {
     this.cancelAll()
   }
 
-  cancelAll () {
-    this.emit('core:cancel-all')
-    this.setState({ files: {}, totalProgress: 0 })
-  }
-
   calculateProgress (data) {
     const fileID = data.id",can `calculateProgress` and `calculateTotalProgress` also be private?,2017-12-09 16:06:34
47,"@@ -516,7 +516,12 @@ function isDOMElement (obj) {
  */
 function findDOMElement (element) {
   if (typeof element === 'string') {
-    return document.querySelector(element)
+    const elements = [].slice.call(document.querySelectorAll(element))
+    if (elements.length > 1) {
+      return elements
+    }
+    return elements[0]
+    // return document.querySelector(element)",Changing this function means other cases (like a `target` option) where the selector exists more than once on the page also return an array. Maybe better to have a separate function that always returns an array?,2017-09-09 11:47:20
487,"@@ -52,11 +52,13 @@ class Zoom extends Provider {
         })
     })
 
+    const userResponse = await userPromise
+
     if (from && to) {
       const queryObj = {
         page_size: PAGE_SIZE,
-        from,
-        to
+        from: moment.tz(from, userResponse.body.timezone || 'UTC').startOf('day').tz('UTC').format('YYYY-MM-DD'),
+        to: moment.tz(to, userResponse.body.timezone || 'UTC').endOf('day').tz('UTC').format('YYYY-MM-DD')","example: user in Canada (EDT, (UTC -4)) clicks on a folder for a month (eg 08-01 to 08-31), they're really asking for  files for 08-01 0:00 EDT (08-01 04:00 UTC) to 08-31 23:59 EDT (09-01 03:59 UTC). 

so the incoming request from/to is in local time, we convert to their timezone, set it to start/end of day, convert to UTC, and get just the date portion (because Zoom API only accepts date, not date time)
",2020-09-11 21:08:57
671,"@@ -52,28 +52,32 @@ describe('AwsS3Multipart', () => {
         }),
         completeMultipartUpload: jest.fn(() => Promise.resolve({ location: 'test' })),
         abortMultipartUpload: jest.fn(),
-        prepareUploadParts: jest.fn(() => {
+        prepareUploadParts: jest.fn(() => new Promise((resolve) => {",doesn't `jest.fn(async () => {})` work here?,2021-09-23 14:08:15
171,"@@ -52,4 +52,27 @@ module.exports = class Provider extends RequestClient {
         return res
       })
   }
+
+  static initPlugin (plugin, opts, defaultOpts) {","This static function serves as a place where setups common to all Provider Plugins is done. Please let me know if you have suggestions for a better place where this function can live.

PS: I don't know of a different way to approach this. It's either we do it the way I'm doing it here. Or we have a class called `ProviderPlugin` which all Provider Plugins extend. Otherwise, we would continue to have repetitive code in all providers, which is hard to maintain.",2018-07-01 11:53:46
602,"@@ -52,6 +52,7 @@
     ""jsonwebtoken"": ""8.5.1"",
     ""lodash"": ""^4.17.20"",
     ""mime-types"": ""2.1.25"",
+    ""moment"": ""^2.29.1"",",That doesn't seem to be necessary.,2021-07-08 15:18:32
307,"@@ -52,7 +52,7 @@
     }
 
     console.log = customLog(console.log.bind(console), document.getElementById(""console-log""));
-    console.debug = customLog(console.log.bind(console), document.getElementById(""console-log""));
+    console.debug = customLog(console.debug.bind(console), document.getElementById(""console-log""));",I think this used console.log for compatibility with IE,2019-07-24 12:34:13
51,"@@ -524,6 +524,17 @@ function findDOMElement (element) {
   }
 }
 
+/**
+ * Find one or more DOM elements.
+ *
+ * @param {string} selector
+ * @return {Array|null}
+ */
+function findAllDOMElements (selector) {
+  const elements = [].slice.call(document.querySelectorAll(selector))
+  return elements.length > 0 ? elements : null","🤔 looking at this now, `trigger:` should also still accept a DOM element being passed in. If it's not a CSS selector string but a DOM element we should return that in an array.",2017-09-11 09:11:47
228,"@@ -53,50 +55,63 @@ module.exports = class RequestClient {
   }
 
   get (path) {
-    return fetch(this._getUrl(path), {
-      method: 'get',
-      headers: this.headers,
-      credentials: 'same-origin'
-    })
-      // @todo validate response status before calling json
-      .then(this.onReceiveResponse)
-      .then((res) => res.json())
-      .catch((err) => {
-        throw new Error(`Could not get ${this._getUrl(path)}. ${err}`)
+    return new Promise((resolve, reject) => {",This promise wrapper should be unnecessary—can `return` the `this.headers().then()` chain instead,2019-03-25 10:31:57
947,"@@ -53,67 +53,73 @@ describe('Dashboard with Transloadit', () => {
   it('should emit one assembly-cancelled event when cancelled', FLAKY, () => {","If it's no longer flaky, let's remove this :))
```suggestion
  it('should emit one assembly-cancelled event when cancelled', () => {
```",2022-08-31 17:53:29
441,"@@ -53,7 +53,7 @@ describe('React: Dashboard', () => {
     await toggle()
 
     // open GDrive panel
-    const gdriveButton = await $('.uppy-DashboardTab:nth-child(1) button')
+    const gdriveButton = await $('.uppy-DashboardTab[data-acquirer-id=""GoogleDrive""] button')","```suggestion
    const gdriveButton = await $('.uppy-DashboardTab[data-uppy-acquirer-id=""GoogleDrive""] button')
```",2020-06-29 12:35:22
848,"@@ -53,7 +53,7 @@ export default class Dashboard extends UIPlugin {
 
     this.defaultLocale = locale
 
-    // set default options
+    // set default options, must be kept in sync with packages/@uppy/react/src/DashboardModal.js","As we import Dashboard anyway, couldn't we export and use the default options?",2022-05-25 09:08:55
235,"@@ -534,10 +535,8 @@ module.exports = class ProviderView {
             pluginName={this.plugin.title}
             pluginIcon={this.plugin.icon}
             demo={this.plugin.opts.demo}
-            checkAuth={this.checkAuth}
             handleAuth={this.handleAuth}
-            handleDemoAuth={this.handleDemoAuth}
-            checkAuthInProgress={checkAuthInProgress} />
+            handleDemoAuth={this.handleDemoAuth} />","Should we remove this, have not been used for a while, right?",2019-03-27 09:42:50
270,"@@ -535,6 +536,15 @@ module.exports = class Dashboard extends Plugin {
     //    To support IE.
     this.el.addEventListener('focus', this.recordIfFocusedOnUppyAtLeastOnce, true)
     this.el.addEventListener('click', this.recordIfFocusedOnUppyAtLeastOnce, true)
+
+    if (this.opts.inline) {
+      document.addEventListener('keydown', this.handleKeyDownInInline)
+    }",Nitpicking: would `this.el.addEventListener` work?,2019-05-29 17:34:22
317,"@@ -537,6 +537,12 @@ module.exports = class XHRUpload extends Plugin {
     const files = fileIDs.map((fileID) => this.uppy.getFile(fileID))
 
     if (this.opts.bundle) {
+      // if bundle: true, we don’t support remote uploads
+      const isSomeFileRemote = files.some(file => file.isRemote)
+      if (isSomeFileRemote) {
+        throw new Error('Can’t bundle remote files when bundle: true is set')",Maybe change it to `'Can’t UPLOAD remote files when bundle: true is set'`?,2019-08-13 12:57:30
615,"@@ -539,6 +557,33 @@ class Uppy {
     }
   }
 
+  /**
+   * Check if requiredMetaField restriction is met before uploading.
+   *
+   * @private
+   */
+  checkRequiredMetaFields (files) {
+    const { requiredMetaFields } = this.opts.restrictions
+    const { hasOwnProperty } = Object.prototype.hasOwnProperty
+
+    const errors = []
+    const fileIDs = Object.keys(files)
+    for (let i = 0; i < fileIDs.length; i++) {","I wonder if `forEach` would be clearer here? Nested `i`s are a bit overcomplicating it, I think.",2021-07-17 05:10:27
675,"@@ -54,3 +59,54 @@ const cleanUpFinishedUploads = (dirPath) => {
     })
   })
 }
+
+async function runPeriodicPing ({ urls, requestTimeout }) {
+  // Run requests in parallel
+  await Promise.all(urls.map(async (url) => {
+    try {
+      // TODO rewrite to use a non-deprecated request library","i would like to post a key that is set via environment, then we can hand out such random keys and recognize customers by them",2021-10-06 14:43:44
180,"@@ -54,42 +67,40 @@ if (!watchifyEnabled && process.argv[2]) {
 }
 
 // Find each app.es6 file with glob.
-glob(srcPattern, function (err, files) {
+glob(srcPattern, (err, files) => {
   if (err) throw new Error(err)
 
   if (watchifyEnabled) {
     console.log('--> Watching examples..')
   }
 
-  var muted = []
+  const muted = new Set()
 ",TIL about `Set`,2018-07-18 23:50:18
632,"@@ -54,6 +54,10 @@ module.exports = class Webcam extends UIPlugin {
   // eslint-disable-next-line global-require
   static VERSION = require('../package.json').version
 
+  // enableMirror is used to toggle mirroring, for instance when discarding the video,
+  // while `opts.mirror` is used to remember the initial user setting
+  #enableMirror = this.opts?.mirror ?? true","`this.opts` is always `undefined` at this point (unless `this.opts` is defined in a parent class field?). Class field assignments are executed before class constructor:

```js
new class extends class {
  constructor() {
    console.log(""3rd: super constructor"");
  }
  #priv = console.log(""1st: super class field"");
} {
  constructor() {
    super();
    console.log(""4th: sub-constructor"");
  }
  #priv = console.log(""2nd: class field"");
}
```
The assignment needs to stay in the constructor body after `this.opts` assignment.
```suggestion
  #enableMirror
```",2021-08-05 12:37:48
876,"@@ -54,6 +54,8 @@ async function getAssemblyOptions () {
 // Rest is implementation! Obviously edit as necessary...
 
 export default () => {
+  const companionAllowedHosts = import.meta.env.VITE_COMPANION_ALLOWED_HOSTS",Can this destructured along the other env variables? https://github.com/transloadit/uppy/blob/9a597114fd2eb54f2c20627f8870309b98d27c26/private/dev/Dashboard.js#L23-L33,2022-07-06 13:09:31
466,"@@ -54,6 +54,8 @@ class Uppy {
         // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.
         exceedsSize2: '%{backwardsCompat} %{size}',
         exceedsSize: 'This file exceeds maximum allowed size of',
+        inferiorSize2: '%{backwardsCompat} %{size}',
+        inferiorSize: 'This file is smaller than the allowed size of',","```suggestion
        inferiorSize: 'This file is smaller than the allowed size of %{size}',
```",2020-07-27 10:56:35
331,"@@ -546,7 +546,17 @@ module.exports = class Dashboard extends Plugin {
     })
 
     // 4. Add all dropped files
-    getDroppedFiles(event.dataTransfer)
+    let executedDropErrorOnce = false
+    const logDropError = (error) => {
+      this.uppy.log(error.message, 'error')","Is there a reason for logging `error.message` specifically, maybe log the whole error object?",2019-08-30 06:16:26
332,"@@ -546,7 +546,17 @@ module.exports = class Dashboard extends Plugin {
     })
 
     // 4. Add all dropped files
-    getDroppedFiles(event.dataTransfer)
+    let executedDropErrorOnce = false
+    const logDropError = (error) => {
+      this.uppy.log(error.message, 'error')
+
+      // In practice all drop errors are most likely the same, so let's just show one to avoid overwhelming the user
+      if (!executedDropErrorOnce) {",👍 ,2019-08-30 06:16:44
796,"@@ -55,11 +55,10 @@
     ""moment-timezone"": ""^0.5.31"",
     ""morgan"": ""1.10.0"",
     ""ms"": ""2.1.2"",
-    ""node-redis-pubsub"": ""^5.0.0"",
     ""node-schedule"": ""1.3.2"",
     ""prom-client"": ""12.0.0"",
     ""purest"": ""3.1.0"",
-    ""redis"": ""3.1.1"",
+    ""redis"": ""4.0.4"",",they also dropped support for node 10,2022-03-22 14:39:40
74,"@@ -55,24 +56,22 @@ const uppy = Uppy({
     closeModalOnClickOutside: false,
     locale: {
       strings: {browse: 'browse'}
-    }
+    },
+    metaFields: [
+      { id: 'license', name: 'License', value: 'Creative Commons', placeholder: 'specify license' },
+      { id: 'caption', name: 'Caption', value: '', placeholder: 'describe what the image is about' }
+    ]",we should add docs for the `metaFields` option. could do it here or in a followup pr.,2017-12-09 16:01:35
346,"@@ -55,6 +55,12 @@ module.exports = class AwsS3 extends Plugin {
 
     this.opts = { ...defaultOptions, ...opts }
 
+    if (!this.opts.includes('companionUrl')) {","We should only warn if there is no user-provided getUploadParameters function:
```suggestion
    if (!this.opts.companionUrl && !opts.getUploadParameters) {
```

(and check for the `companionUrl` _property_ because it's an object rather than an array)",2019-11-08 12:45:22
242,"@@ -55,7 +55,7 @@
 .uppy-StatusBar:not([aria-hidden=true]).is-waiting {
   background-color: $white;
   height: 65px;
-  border-top: 1px solid $gray-200;
+  border-top: 1px solid #eaeaea;
 }","Could we stick to the variables for colors, maybe we should be using a different one? Not sure about the reason for this change.",2019-04-16 14:49:45
419,"@@ -55,7 +64,6 @@ module.exports = class Tus extends Plugin {
 
     // set default options
     const defaultOptions = {
-      resume: true,","In tus-js-client v2 the `resume` option has been removed. When previously enabled, the uploader would look into localStorage to see if a file with the same fingerprint has been uploaded before and then resume from that URL. Regardless of whether `resume` is enabled, the retries of errored requests is controlled by the `retryDelays` option.

In v2, the app can now query the previous uploads on its own and ask the user (or determine on its own) which upload should be resumed. The API looks like this:

```js
  upload = new tus.Upload(file, options);
  upload.findPreviousUploads().then((previousUploads) => {
    // Prompt user which upload should be resumed
    const index = askToResumeUpload(previousUploads);
    if (index != null) {
       upload.resumeFromPreviousUpload(previousUploads[index]);
    }

    upload.start();
  });
```

I didn't add the call to findPreviousUploads yet because I don't really know where to fit it. Maybe you can help?",2020-05-03 16:10:31
310,"@@ -553,16 +553,14 @@ class Uppy {
 
     this.setState({
       currentUploads: updatedUploads,
-      files: updatedFiles
+      files: updatedFiles,
+      ...(
+        // If this is the last file we just removed - allow new uploads!
+        Object.keys(updatedFiles).length === 0 &&
+        { allowNewUpload: true }
+      )","Is `...(` necessary because you don’t want to `allowNewUpload: false` if this was not the last file?

I mean, why not:

```js
const isLastFile = Object.keys(updatedFiles).length === 0
setState({
  allowNewUpload: isLastFile
})
```",2019-08-06 10:13:30
87,"@@ -555,7 +556,7 @@ module.exports = class View {
     }
 
     if (!authenticated) {
-      return AuthView({
+      return h(AuthView, {","ok, that's not so bad :D",2017-12-13 21:44:52
309,"@@ -556,6 +556,13 @@ class Uppy {
       files: updatedFiles
     })
 
+    // If nothing is uploading anymore, and if nothing has uploaded yet - allow new uploads!
+    if (Object.keys(updatedFiles).length === 0) {
+      this.setState({
+        allowNewUpload: true","Could we combine this with the `setState` call above, so we don’t have to call it twice?",2019-08-05 15:42:01
674,"@@ -56,11 +56,14 @@ module.exports = class DropTarget extends BasePlugin {
 
     // 3. Add all dropped files
     this.uppy.log('[DropTarget] Files were dropped')
+
     const logDropError = (error) => {
       this.uppy.log(error, 'error')
     }
-    getDroppedFiles(event.dataTransfer, { logDropError })
-      .then((files) => this.addFiles(files))
+
+    const files = await getDroppedFiles(event.dataTransfer, { logDropError })
+    this.addFiles(files)
+    this.opts.onDrop?.(event)","Should we pass the files here?
```suggestion
    this.opts.onDrop?.(event, files)
```",2021-10-05 08:38:08
186,"@@ -56,29 +70,47 @@ export interface Store {
   subscribe(listener: any): () => void;
 }
 
+interface LocaleObject {
+  [key: string]: string | LocaleObject;","A locale object can only have a `strings` and `pluralize` key, I think it should be:

```ts
interface LocaleStrings {
  [key: string]: string | LocaleStrings;
}
interface Locale {
  strings: LocaleStrings;
  pluralize: (n: number) => number;
}
```",2018-08-16 09:36:39
139,"@@ -56,6 +56,8 @@ module.exports = function fileItem (props) {
         ? props.i18n('retryUpload')
         : props.i18n('cancelUpload')
 
+  console.log('ЕБА', props.showLinkToFileUploadResult)",:point_up: :),2018-04-17 14:28:13
153,"@@ -565,6 +588,10 @@ module.exports = class ProviderView {
       i18n: this.plugin.uppy.i18n
     })
 
-    return <Browser {...browserProps} />
+    return (
+      <CloseWrapper onUnmount={this.clearSelection}>
+        <Browser {...browserProps} />
+      </CloseWrapper>
+    )","👍

`onUnmount` is handy, but a Preact-only thing it seems. Very much not a big deal, but I was trying to keep an open door for React, hence not using `render(state, props)` and other niceties :) But we can always refactor of course, no need to stick to theoretical benefits :) ",2018-05-29 13:34:31
352,"@@ -57,6 +57,11 @@ const getConfigFromEnv = () => {
         region: process.env.COMPANION_AWS_REGION,
         useAccelerateEndpoint:
           process.env.COMPANION_AWS_USE_ACCELERATE_ENDPOINT === 'true'
+      },
+      b2: {
+        keyId: process.env.COMPANION_B2_KEY_ID,","This is used as `applicationKeyId` elsewhere:
```suggestion
        applicationKeyId: process.env.COMPANION_B2_KEY_ID,
```",2019-11-18 14:32:37
353,"@@ -57,6 +57,11 @@ const getConfigFromEnv = () => {
         region: process.env.COMPANION_AWS_REGION,
         useAccelerateEndpoint:
           process.env.COMPANION_AWS_USE_ACCELERATE_ENDPOINT === 'true'
+      },
+      b2: {
+        keyId: process.env.COMPANION_B2_KEY_ID,
+        key: getSecret('COMPANION_B2_KEY'),","similarly:
```suggestion
        applicationKey: getSecret('COMPANION_B2_KEY'),
```",2019-11-18 14:32:53
771,"@@ -57,7 +57,7 @@ if (page.series) {
         <span id=""logo"" class=""MainLogo"">
           <a class=""MainLogo-link"" href=""/""><%- config.title %></a>
           <!-- Was used for 1.0, we can re-use for 2.0 or major announcements -->
-          <!-- <a class=""MainLogo-version"" href=""/blog/2019/04/1.0/"">
+          <!-- <a class=""MainLogo-annoncement"" href=""/blog/2019/04/1.0/"">","```suggestion
          <!-- <a class=""MainLogo-announcement"" href=""/blog/2019/04/1.0/"">
```",2022-03-01 11:55:37
302,"@@ -57,9 +57,11 @@ class FileCard extends Component {
     const metaFields = this.props.metaFields || []
 
     return metaFields.map((field, i) => {
+      const id = `uppy-DashboardFileCard-input-${field.id}`","I wonder if a `field.id` might contain special characters that could make `id` an invalid css selector?

In that case we might be better of using `cuid`, like: https://github.com/transloadit/uppy/blob/fcfdf64d7e058d74f9315d3258dee5aaa8f1af82/packages/%40uppy/dashboard/src/index.js#L40

Not sure, just sharing a thought.

https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors",2019-07-08 14:31:39
397,"@@ -570,6 +570,21 @@ module.exports = class Dashboard extends Plugin {
       })
   }
 
+  handleRequestThumbnail = (file) => {
+    if (!this.opts.waitForThumbnailsBeforeUpload) {
+      this.uppy.emit('thumbnail:request', file)
+    }
+  }
+
+  /**
+   * We cancel thumbnail requests when a file item component unmounts to avoid clogging up the queue when the user scrolls past many elements.",Really nice ,2020-04-14 17:53:49
140,"@@ -58,4 +58,19 @@ module.exports = class RequestClient {
       // @todo validate response status before calling json
       .then((res) => res.json())
   }
+
+  delete (path, data) {
+    return fetch(`${this.hostname}/${path}`, {
+      method: 'post',",shouldn't `method` be `'delete'`?,2018-04-24 13:17:03
744,"@@ -58,6 +58,7 @@ export interface DashboardOptions extends PluginOptions {
   onDragOver?: (event: DragEvent) => void
   onDragLeave?: (event: DragEvent) => void
   onDrop?: (event: DragEvent) => void
+  waitForThumbnailsBeforeUpload?: boolean,",Should we make `DashboardOptions` and `ThumbnailGeneratorOptions` inherit those properties from a unique interface to avoid duplication? https://github.com/transloadit/uppy/blob/89f09c810a0b0374c2b72690f7adfe610492330e/packages/@uppy/thumbnail-generator/types/index.d.ts#L5-L12,2022-01-27 12:03:35
645,"@@ -58,7 +58,7 @@ module.exports = () => {
       username: 'John',
       license: 'Creative Commons',
     },
-    restrictions: { requiredMetaFields: ['caption'] },",Shouldn't we keep this line but commented? It could be useful to have a way to quickly adding restrictions.,2021-08-18 14:36:58
559,"@@ -58,7 +58,7 @@ module.exports = function Dashboard (props) {
       className={dashboardClassName}
       data-uppy-theme={props.theme}
       data-uppy-num-acquirers={props.acquirers.length}
-      data-uppy-drag-drop-supported={isDragDropSupported()}
+      data-uppy-drag-drop-supported={!props.disableLocalFiles && isDragDropSupported()}",sane condition? 🤔 ,2021-04-08 18:40:09
843,"@@ -58,7 +67,7 @@ export default class RequestClient {
   }
 
   headers () {
-    const userHeaders = this.opts.companionHeaders || {}
+    const userHeaders = this.#companionHeaders || {}","We probably don't need the variable, we can pass the value directly to the spread operator.
```suggestion
```",2022-05-23 10:18:09
842,"@@ -58,7 +67,7 @@ export default class RequestClient {
   }
 
   headers () {
-    const userHeaders = this.opts.companionHeaders || {}
+    const userHeaders = this.#companionHeaders || {}
     return Promise.resolve({
       ...RequestClient.defaultHeaders,
       ...userHeaders,","We don't need the `|| {}`, the spread operator already does the smart thing (it's treats non-plain-object as empty objects).
```suggestion
      ...this.#companionHeaders,
```",2022-05-23 10:18:03
201,"@@ -588,16 +586,18 @@ class Uppy {
   cancelAll () {
     this.emit('cancel-all')
 
-    // TODO Or should we just call removeFile on all files?
     const { currentUploads } = this.getState()
     const uploadIDs = Object.keys(currentUploads)
-
     uploadIDs.forEach((id) => {
       this._removeUpload(id)
     })","I believe we can <strike>remove</strike>ditch the `_removeUpload` calls here; `removeFile` will remove each upload once all its files were removed.

(remove remove remove)",2018-09-25 14:52:25
875,"@@ -588,6 +590,13 @@ export default class Webcam extends UIPlugin {
   }
 
   install () {
+    if (this.opts.mobileNativeCamera && isMobile()) {","I think folks should be able to decide if they want to force the native camera or not, and they should be the one using `is-mobile`. Having `is-mobile` as a dependency will create all kinds of problems if we forget to keep it up-to-date, and can be very frustrating for our users if they have no way of forcing the native camera even in development.",2022-07-06 13:00:00
998,"@@ -59,42 +63,42 @@ class HTTPCommunicationQueue {
   }
 
   async abortFileUpload (file) {
-    const result = this.#cache.get(file)
+    const result = await this.#cache.get(file)","```suggestion
    const result = this.#cache.get(file)
```",2022-11-03 18:49:28
999,"@@ -59,42 +63,42 @@ class HTTPCommunicationQueue {
   }
 
   async abortFileUpload (file) {
-    const result = this.#cache.get(file)
+    const result = await this.#cache.get(file)
     if (result != null) {
-      // If the createMultipartUpload request never made it through, we don't
+      // If the createMultipartUpload request never was made, we don't
       // need to send the abortMultipartUpload request.
       await this.#abortMultipartUpload(file, result)","```suggestion
      await this.#abortMultipartUpload(file, await result)
```",2022-11-03 18:49:40
31,"@@ -59,6 +59,13 @@ module.exports = class Plugin {
     if (targetElement) {
       this.core.log(`Installing ${callerPluginName} to a DOM element`)
 
+      // attempt to extract meta from form element
+      if (this.opts.getMetaDataFromForm && targetElement.nodeName === 'FORM') {
+        const formMeta = getFormData(targetElement)
+        this.core.log('Adding metadata from form')
+        this.core.log(formMeta)",missing `setMeta` :),2017-06-30 11:18:47
880,"@@ -59,6 +59,8 @@ class FileCard extends Component {
   }
 
   handleCancel = () => {
+    const file = this.props.files[this.props.fileCardFor]","should we align this with `uninstall`? I'm not sure where `fileCardFor` comes from so perhaps this is safer
```suggestion
    const { currentImage } = this.getPluginState()
    const file = this.uppy.getFile(currentImage.id)
```",2022-07-12 09:01:02
918,"@@ -59,7 +59,8 @@
     ""./lib/delay"": ""./lib/delay.js"",
     ""./lib/hasProperty"": ""./lib/hasProperty.js"",
     ""./lib/mimeTypes"": ""./lib/mimeTypes.js"",
-    ""./lib/getDroppedFiles"": ""./lib/getDroppedFiles/index.js""
+    ""./lib/getDroppedFiles"": ""./lib/getDroppedFiles/index.js"",
+    ""./src/microtip.scss"": ""./src/microtip.scss""","It's the only export that uses `/src/`, not great for consistency (but great for backward compatibility so..)",2022-08-17 10:05:29
822,"@@ -59,7 +61,7 @@ This option is passed to [Compressor.js](https://github.com/fengyuanchen/compres
 
 The quality of the output image. It must be a number between `0` and `1`. Be careful to use `1` as it may make the size of the output image become larger.
 
-**Note:** This option only available for `image/jpeg` and `image/webp` images.
+> **Note:** This option only available for `image/jpeg` and `image/webp` images.","```suggestion
> **Note:** This option is only available for `image/jpeg` and `image/webp` images.
```",2022-05-05 10:04:06
340,"@@ -593,6 +593,8 @@ module.exports = class ProviderView {
       )
     }
 
+    const targetViewOptions = Object.assign({}, this.opts, viewOptions)","We can use spread in new code:
```suggestion
    const targetViewOptions = { ...this.opts, ...viewOptions }
```",2019-10-14 10:38:37
341,"@@ -593,6 +593,8 @@ module.exports = class ProviderView {
       )
     }
 
+    const targetViewOptions = Object.assign({}, this.opts, viewOptions)
+    console.log(targetViewOptions)",should get rid of this before merging :),2019-10-14 10:39:23
342,"@@ -593,6 +593,8 @@ module.exports = class ProviderView {
       )
     }
 
+    const targetViewOptions = { ...this.opts, ...viewOptions }
+    console.log(targetViewOptions)","```suggestion
```",2019-10-14 15:24:15
676,"@@ -6,12 +6,16 @@
   ""lint-staged"": {
     ""*.js"": ""eslint"",
     ""*.md"": [
-      ""remark -f -q -i .gitignore"",
+      ""remark -i .gitignore -foq"",
       ""eslint --fix""
     ],
     ""*.ts"": ""eslint --fix""
   },
   ""remarkConfig"": {
+    ""settings"": {
+      ""emphasis"": ""_"",
+      ""strong"": ""*""
+    },","This should be moved into `private/remark-lint-uppy/index.js`

```js
exports.settings = {
  emphasis: '_',
  strong: '*',
  listItemIndent: 'one', // and add this
}
```",2021-10-13 09:23:47
955,"@@ -6,6 +6,11 @@ on:
   pull_request:
     # We want all branches so we configure types to be the GH default again
     types: [ opened, synchronize, reopened ]
+    paths-ignore:
+      - 'examples/**'
+      - 'private/**'
+      - 'website/**'
+      - .github/workflows/*","```suggestion
      - '.github/workflows/**'
```",2022-09-07 08:12:39
895,"@@ -6,6 +6,27 @@ Released: 2022-05-30
 Included in: Uppy v3.0.0-beta
 
 - @uppy/transloadit: remove IE 10 hack (Antoine du Hamel / #3777)
+## 2.3.5","```suggestion

## 2.3.5
```",2022-07-27 16:51:24
563,"@@ -6,6 +6,7 @@ const { h } = require('preact')
 function chunks (list, size) {
   const chunked = []
   let currentChunk = []
+  console.log(list)","nit
```suggestion
```",2021-05-21 15:15:53
351,"@@ -6,7 +6,7 @@ class AddFiles extends Component {
     super(props)
 
     this.triggerFileInputClick = this.triggerFileInputClick.bind(this)
-    this.handleFileInputChange = this.handleFileInputChange.bind(this)
+    this.onHandleFileInputChange = this.onHandleFileInputChange.bind(this)","`handle` and `on` kinda means the same thing in this situation, so i think this should either be `handleFileInputChange` or `onFileInputChange`",2019-11-18 10:11:39
102,"@@ -6,7 +6,9 @@ order: 4
 
 ## Uppy Development
 
-First clone and install the project:
+Fork the repository into your own account first. Here's the [link](https://help.github.com/articles/fork-a-repo/) that tells how to fork a repo.  
+
+After you have successfully forked the repo, clone and install the project:
 
 ```bash
 git clone git@github.com:transloadit/uppy.git",This `git clone` command should also be updated to clone the user's own repository URL,2018-01-15 08:15:40
269,"@@ -6,8 +6,21 @@ jest.mock('../../src/server/helpers/oauth-state', () => {
   return {
     generateState: () => 'some-cool-nice-encrytpion',
     addToState: () => 'some-cool-nice-encrytpion',
-    getFromState: (state) => {
-      return state === 'state-with-invalid-instance-url' ? 'http://localhost:3452' : 'http://localhost:3020'
+    getFromState: (state, key) => {
+      console.log('mummy', state, key)",Rogue console.log,2019-05-29 17:14:55
667,"@@ -6,8 +6,8 @@ ar_SA.strings = {
   addingMoreFiles: ' اضافة المزيد من الملفات',
   allowAccessDescription: 'ارجو السماح للموقع بالتقاط الصور والفديوهات.',
   allowAccessTitle: 'ارجو السماح للكاميرا بالتقاط صورك',
-  authenticateWith: 'الربط مع %{pluginName}',
-  authenticateWithTitle: 'ارجو الربط مع %{pluginName} من اجل اختيار الملفات',
+  authenticateWith: '%{pluginName} الربط مع',
+  authenticateWithTitle: 'من اجل اختيار الملفات %{pluginName} ارجو الربط مع ',","يمكن تحسين هذه الى ""الرجاء الربط""",2021-09-15 21:52:19
231,"@@ -6,9 +6,11 @@
 const RequestClient = require('./RequestClient')
 const Provider = require('./Provider')
 const Socket = require('./Socket')
+const tokenStorage = require('./token-storage')
 
 module.exports = {
   RequestClient,
   Provider,
-  Socket
+  Socket,
+  tokenStorage",does this need to be exported? all the auth token handling is done internally in companion-client isn't it?,2019-03-25 10:34:52
72,"@@ -60,6 +60,15 @@ module.exports = (props) => {
           title: props.title
         })}
       </div>
+      <button class=""UppyButton--circular UppyButton--blue Browser-doneBtn""
+              type=""button""
+              aria-label=""Done picking files""
+              title=""Done picking files""",can we localise these? not sure if we have easy access to a translator instance from `generic-provider-views`,2017-12-03 14:45:56
7,"@@ -60,6 +60,26 @@ export default class Tus10 extends Plugin {
     })
   }
 
+  install () {
+    this.core.emitter.on('next', () => {
+      this.core.log('began uploading!!..')
+      const selectedFiles = this.core.state.selectedFiles","`const { selectedFiles } = this.core.state`
",2016-04-04 15:54:19
508,"@@ -60,6 +61,7 @@ const uppy = new Uppy({
 })
 .use(GoogleDrive, { target: Dashboard, companionUrl: 'https://companion.uppy.io' })
 .use(Dropbox, { target: Dashboard, companionUrl: 'https://companion.uppy.io' })
+.use(Box, { target: Dashboard, companionUrl: 'https://companion.uppy.io' })","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:12:49
56,"@@ -60,7 +62,7 @@
     ""isomorphic-fetch"": ""2.2.1"",
     ""jest"": ""^20.0.4"",
     ""lint-staged"": ""2.0.2"",
-    ""minifyify"": ""7.3.3"",
+    ""minify-stream"": ""^1.1.0"",","`minify-stream` wraps uglify-js in a stream interface, I'm using it to replace `minifyify` (which is unmaintained)",2017-09-29 16:45:13
765,"@@ -600,13 +600,23 @@ class Uploader {
     const filename = this.uploadFileName
     const { client, options } = this.options.s3
 
+    function getPartSize (chunkSize) {
+      // backwards compatibility https://github.com/transloadit/uppy/pull/3511#issuecomment-1050797935
+      // requires min 5MB and max 5GB partSize","nit
```suggestion
      // requires min 5MiB and max 5GiB partSize
```",2022-02-25 15:12:04
764,"@@ -600,13 +600,23 @@ class Uploader {
     const filename = this.uploadFileName
     const { client, options } = this.options.s3
 
+    function getPartSize (chunkSize) {
+      // backwards compatibility https://github.com/transloadit/uppy/pull/3511#issuecomment-1050797935
+      // requires min 5MB and max 5GB partSize
+      // todo remove this logic in the next major semver
+      if (chunkSize == null || chunkSize >= 5368709120 || chunkSize <= 5242880) return undefined","```suggestion
      const fiveGiB = 5_368_709_120
      const fiveMiB = 5_242_880
      if (chunkSize == null || chunkSize >= fiveGiB || chunkSize <= fiveMiB) return undefined
```",2022-02-25 15:11:50
814,"@@ -61,6 +61,8 @@ class UIPlugin extends BasePlugin {
         // hence the check
         if (!this.uppy.getPlugin(this.id)) return
         render(this.render(state), uppyRootElement)
+        targetElement.appendChild(uppyRootElement)
+        this.el = targetElement","I think we can try if this works:
```suggestion
        this.el = uppyRootElement.firstElementChild
```",2022-04-29 14:23:41
512,"@@ -61,6 +63,7 @@
     GoogleDrive: true,
     Instagram: true,
     Dropbox: true,
+    Box: true,","excluding from examples in the meantime
```suggestion
```",2020-11-13 09:13:43
203,"@@ -615,6 +621,7 @@ class Uppy {
 
   reset () {
     this.cancelAll()
+    this.setState({ allowNewUpload: true })","When I press “Cancel” in Dashboard (which calls `cancelAll()`), there’s an “add more files“ screen, but I can’t add more files, since `allowNewUpload` is still `false`.

Same when I remove the file that’s being uploaded. Is this intended?

I think we should probably deprecate `reset()` in favor of `cancelAll()`, since they are basically the same thing?",2018-10-03 21:33:05
91,"@@ -62,14 +63,6 @@
     color: lighten($color-gray, 10%);
   }
   
-  // .uppy-DragDrop-selectedCount {
-  //   text-align: center;
-  //   font-size: 0.75em;
-  //   text-transform: uppercase;
-  //   letter-spacing: 1px;
-  //   margin-top: 10px;
-  // }",🎉 hehe,2017-12-13 21:52:03
976,"@@ -62,6 +65,49 @@ class TransloaditAssembly extends Emitter {
     this.close()
   }
 
+  #connectServerEvent () {
+    this.#sse = new EventSource(this.status.assembly_ssl_url)
+
+    this.#sse.addEventListener('open', () => {
+      if (this.socket) {",why do we disconnect websocket here?,2022-09-28 09:45:01
8,"@@ -62,7 +62,12 @@ export default class Multipart extends Plugin {
           this.core.log(`Download ${file.name} from ${file.uploadURL}`)
           return resolve(file)
         } else {
-          this.core.emitter.emit('core:upload-error', file.id)
+          // OPTION 1: return the full XHR object
+          this.core.emitter.emit('core:upload-error', file.id, xhr);","Please remove semi-colon
",2016-10-06 10:11:44
356,"@@ -62,7 +66,7 @@ script:
 - 'if [ -n ""${LINT-}"" ]; then npm run lint; fi'
 - 'if [ -n ""${LINT-}"" ]; then npm run test:type; fi'
 - 'if [ -n ""${UNIT-}"" ]; then npm run test:unit; fi'
-- 'if [ -n ""${COMPANION-}"" ]; then npm run test:companion; fi'
+- 'if [ -n ""${COMPANION-}"" ] || [ -n ""${COMPANION_NODE6-}"" ]; then npm run test:companion; fi'","Since `npm install` fails on Node 6, we could instead configure the COMPANION_NODE6 build with `nodejs: stable`, and add a line above this one:
```yaml
- 'if [ -n ""${COMPANION_NODE6-}"" ]; then nvm install 6.0.0 && nvm use 6.0.0; fi'
```

so that the latest nodejs will be used during installation but node 6 will be used during tests.",2019-11-24 12:38:22
877,"@@ -62,9 +62,13 @@ class AssemblyOptions {
    * Get Assembly options for a file.
    */
   async #getAssemblyOptions (file) {
-    const options = this.opts
+    if (file == null) return undefined
 
+    const options = this.opts
     const assemblyOptions = await options.getAssemblyOptions(file, options)
+
+    if (file == null) return undefined","Twice the check? Is that the race condition bug again, where file could be removed at any point? ",2022-07-11 09:17:21
630,"@@ -63,6 +63,9 @@ module.exports = class Webcam extends UIPlugin {
     this.id = this.opts.id || 'Webcam'
     this.type = 'acquirer'
     this.capturedMediaFile = null
+    // enableMirror is used to toggle mirroring, for instance when discarding the video,
+    // while `opts.mirror` is used to remember the initial user setting
+    this.enableMirror = opts?.mirror ?? true","Shouldn't this be private instead?
```suggestion
    this.#enableMirror = opts?.mirror ?? true
```",2021-08-04 16:50:43
254,"@@ -63,7 +63,7 @@ module.exports.app = (options = {}) => {
   app.use((req, res, next) => {
     res.header(
       'Access-Control-Allow-Headers',
-      [res.get('Access-Control-Allow-Headers'), 'uppy-auth-token'].join(', ')
+      [res.get('Access-Control-Allow-Headers'), 'uppy-auth-token', 'uppy-client'].join(', ')
     )",uppy-versions?,2019-05-20 15:30:41
942,"@@ -64,15 +64,15 @@ uppy.use(Webcam, {
     'picture',
   ],
   mirror: true,
+  showVideoSourceDropdown: false,
+  facingMode: 'user', // @TODO: remove in the next major","I think it would be more useful to show the deprecation notice here, the TODO is only for us, so it should not appear in the docs.",2022-08-30 14:51:16
452,"@@ -64,6 +64,7 @@ class Uppy {
         connectedToInternet: 'Connected to the Internet',
         // Strings for remote providers
         noFilesFound: 'You have no files or folders here',
+        loadMore: 'Load more',",do we still need this? 🤔 ,2020-07-09 17:26:13
459,"@@ -64,7 +64,11 @@ uppy.use(Webcam, {
     'picture'
   ],
   mirror: true,
-  facingMode: 'user',
+  videoConstraints: {
+    facingMode: 'user',
+    width: { min: 720, ideal: 1280, max: 1920 },
+    width: { min: 480, ideal: 800, max: 1080 },","via @arturi
```suggestion
    height: { min: 480, ideal: 800, max: 1080 },
```",2020-07-13 15:29:06
562,"@@ -64,7 +65,13 @@ module.exports = (props) => {
     handleCancelThumbnail: props.handleCancelThumbnail,
   }
 
-  const rows = chunks(Object.keys(props.files), props.itemsPerRow)
+  const sortByGhostComesFirst = (file1, file2) => {",Does this look sane @aduh95? :-) The whole bit with sorting.,2021-05-21 14:42:20
213,"@@ -64,8 +64,7 @@
   transition: background-color, width .3s ease-out;
 
   &.is-indeterminate {
-    background-color: $color-orange;
-    $stripe-color: darken($color-orange, 10%);","Soo, no orange stripes for encoding then? 🤔",2018-12-06 11:22:24
130,"@@ -643,13 +638,13 @@ class Uppy {
         return
       }
       this.setFileState(file.id, {
-        progress: Object.assign({}, this.getFile(file.id), {
+        progress: {","nice, just noticed this today as well :)",2018-03-12 12:01:33
325,"@@ -647,6 +647,49 @@ describe('src/Core', () => {
       }
     })
 
+    it('should not allow a dupicate file, a file with the same id', () => {
+      const core = new Core()
+      core.addFile({
+        source: 'jest',
+        name: 'foo.jpg',
+        type: 'image/jpeg',
+        data: new File([sampleImage], { type: 'image/jpeg' })
+      })
+      expect(() => {","Parentheses typo, this test is never failing.
Should be:

      expect(() => {
        core.addFile({
          source: 'jest',
          name: 'foo.jpg',
          type: 'image/jpeg',
          data: new File([sampleImage], { type: 'image/jpeg' }),
          meta: {
            notARelativePath: 'folder/a'
          }
        })
      })
        .toThrow('Cannot add the duplicate file \'foo.jpg\', it already exists')

Same on line 707.",2019-08-23 22:58:10
486,"@@ -65,10 +65,9 @@ exports.getIsFolder = (item) => {
   return !item.file_type
 }
 
-exports.getItemName = (item) => {
-  const start = moment(item.start_time || item.recording_start)
-    .clone()
-    .format('YYYY-MM-DD, kk:mm')
+exports.getItemName = (item, userResponse) => {
+  const start = moment.tz(item.start_time || item.recording_start, userResponse.timezone || 'UTC')
+    .format('YYYY-MM-DD, HH:mm')","we display datetimes in user's timezone preferably.
Timestamp is also updated to use standard hours, rather than 24 hour time from 1 to 24 (HH instead of kk)",2020-09-11 21:05:13
101,"@@ -65,3 +67,82 @@ describe('File upload with DragDrop + Tus, DragDrop + XHRUpload, i18n translated
   //     })
   // })
 // })
+
+describe.only('XHRUpload with `limit`', () => {",need to remove the `.only` before merge,2018-01-08 09:23:58
374,"@@ -65,6 +65,7 @@
     ""@uppy/utils"": ""file:packages/@uppy/utils"",
     ""@uppy/webcam"": ""file:packages/@uppy/webcam"",
     ""@uppy/xhr-upload"": ""file:packages/@uppy/xhr-upload"",
+    ""adm-zip"": ""0.4.13"",","In the past we've put build dependencies in `devDependencies` in the root repo, and only put the uppy packages in `dependencies`. it doesn't make a difference functionally but for consistency's sake it would be best to move this to devDependencies too",2020-02-05 11:04:43
16,"@@ -65,6 +66,10 @@ module.exports = class Transloadit extends Plugin {
       })
 
       this.core.setState({ files })
+
+      if (this.opts.wait) {
+        return this.beginWaiting()
+      }
     }).catch((err) => {
       this.core.emit('informer', '⚠️ Transloadit: Could not create assembly', 'error', 0)","Would be cool if the error was accessible somehow. Maybe behind a `more details` link for the user. But i realize that goes beyond the scope of this PR, so maybe we can just dump it to the `console.error` for now short of having sth like that?",2017-04-11 11:08:33
937,"@@ -65,7 +65,10 @@ class AssemblyOptions {
     if (file == null) return undefined
 
     const options = this.opts
-    const assemblyOptions = await options.getAssemblyOptions(file, options)
+    const assemblyOptions = typeof options.assemblyOptions === 'function'
+      ? await options.assemblyOptions(file, options)
+      : options.assemblyOptions
+    console.log(assemblyOptions)","```suggestion
```",2022-08-30 10:05:24
439,"@@ -65,7 +65,11 @@ class AddFiles extends Component {
 
   renderMyDeviceAcquirer = () => {
     return (
-      <div class=""uppy-DashboardTab"" role=""presentation"">
+      <div
+        class=""uppy-DashboardTab""
+        role=""presentation""
+        data-acquirer-id=""Local""",(maybe this should be MyDevice or just removed entirely?),2020-06-24 14:15:55
442,"@@ -65,7 +65,11 @@ class AddFiles extends Component {
 
   renderMyDeviceAcquirer = () => {
     return (
-      <div class=""uppy-DashboardTab"" role=""presentation"">
+      <div
+        class=""uppy-DashboardTab""
+        role=""presentation""
+        data-acquirer-id=""MyDevice""","
```suggestion
        data-uppy-acquirer-id=""MyDevice""
```",2020-06-29 12:38:02
941,"@@ -65,7 +65,9 @@ class AssemblyOptions {
     if (file == null) return undefined
 
     const options = this.opts
-    const assemblyOptions = await options.getAssemblyOptions(file, options)
+    const assemblyOptions = typeof options.assemblyOptions === 'function'",isn't this a breaking change? shouldn't we test for *both* `getAssemblyOptions` and `assemblyOptions` in order to maintain bakcwards compatibility?,2022-08-30 13:26:26
207,"@@ -65,7 +65,9 @@ module.exports = class Transloadit extends Plugin {
     this._onRestored = this._onRestored.bind(this)
     this._getPersistentData = this._getPersistentData.bind(this)
 
-    if (this.opts.params) {
+    if (this.opts.params ||
+        // No params _and_ no custom getAssemblyOptions is an early error.
+        this.opts.getAssemblyOptions === defaultOptions.getAssemblyOptions) {
       AssemblyOptions.validateParams(this.opts.params)","I’m a little stuck understanding, how would this result in an error when `this.opts.params` is not set? It will just not do `AssemblyOptions.validateParams(this.opts.params)` 🤔",2018-10-17 19:22:52
872,"@@ -65,7 +88,7 @@ export default async function pickSemverness (
       `\nHere are the commits that landed on ${name} since previous release:\n${stdout}\n`,
     )
     console.log(
-      `Check the web UI at https://github.com/transloadit/uppy/tree/main/${encodeURI(
+      `Check the web UI at https://github.com/transloadit/uppy/tree/${TARGET_BRANCH}/${encodeURI(","```suggestion
      `Check the web UI at https://github.com/transloadit/uppy/tree/main/${encodeURI(
```",2022-06-09 16:45:39
537,"@@ -651,13 +652,19 @@ module.exports = class Dashboard extends Plugin {
     }
   }
 
-  handleComplete = ({ failed, uploadID }) => {
+  handleComplete = ({ failed }) => {
     if (this.opts.closeAfterFinish && failed.length === 0) {
       // All uploads are done
       this.requestCloseModal()
     }
   }
 
+  _openFileEditorWhenSingleFileAdded = (file) => {","not totally sure about this behaviour when adding multiple files ... it looks like this would only open the file editor for _one_ of the files?

maybe it should auto open for each file in turn? but then we'd probably need a ""skip all"" button in the UI in case users don't want to tweak metadata for a folder of 1000 photos.",2020-12-09 16:11:20
386,"@@ -651,7 +645,7 @@ module.exports = class Dashboard extends Plugin {
   superFocusOnEachUpdate = () => {
     const isFocusInUppy = this.el.contains(document.activeElement)
     // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)
-    const isFocusNowhere = document.activeElement === document.querySelector('body') || document.activeElement === null
+    const isFocusNowhere = document.activeElement === document.body || document.activeElement === null","I'm _pretty_ sure this warning is a bug in the compat lint and not actually accurate, but I guess it doesn't matter in this case :)",2020-03-09 14:41:37
789,"@@ -66,6 +67,10 @@ export default class Compressor extends BasePlugin {
         message: this.i18n('compressingImages'),
       })
 
+      if (file.isRemote) {
+        return Promise.resolve()",I think it would be nice to add a comment explaining why we need to shortcut here.,2022-03-17 00:53:03
375,"@@ -66,8 +66,10 @@ en_US.strings = {
   loading: 'Loading...',
   logOut: 'Log out',
   myDevice: 'My Device',
+  noDuplicates: 'Cannot add the duplicate file %{fileName}, it already exists',",this one should also have quotes i guess :),2020-02-10 09:56:45
773,"@@ -665,7 +506,11 @@ class Uppy {
 
     try {
       const filesArray = Object.keys(files).map(i => files[i])
-      this.#checkRestrictions(newFile, filesArray)
+      this.#restricter.validate(newFile, filesArray, {
+        opts: this.opts,
+        i18n: this.i18n,
+        getFiles: this.getFiles.bind(this),","This is never used?
```suggestion
```",2022-03-03 11:46:47
845,"@@ -67,9 +67,9 @@ const uppy = new Uppy({ autoProceed: false })
 $ npm install @uppy/core @uppy/dashboard @uppy/tus
 ```
 
-We recommend installing from npm and then using a module bundler such as [Webpack](https://webpack.js.org/), [Browserify](http://browserify.org/) or [Rollup.js](http://rollupjs.org/).
+We recommend installing from npm and then using a module bundler such as [Vite](https://vitejs.dev/), [Parcel](https://parceljs.org/), or [Rollup](https://rollupjs.org).","Let's remove this from the readme, to avoid having to maintain a list of bundlers.",2022-05-23 13:20:32
793,"@@ -673,14 +669,18 @@ uppy.getPlugin('Dashboard').setOptions({
 })
 ```
 
-### `uppy.reset()`
+### `uppy.reset()` (alias `uppy.cancelAll()`)
 
 Stop all uploads in progress and clear file selection, set progress to 0. More or less, it returns things to the way they were before any user input.
 
-### `uppy.close()`
+### `uppy.close({ reason = 'user' })`",Shouldn't this also be added for `uppy.cancelAll`?,2022-03-22 08:26:34
262,"@@ -675,7 +675,7 @@ a.uppy-Dashboard-poweredBy {
     float: left;
     margin: 5px $rl-margin;
     width: calc(33.333% - #{$rl-margin} - #{$rl-margin});
-    height: 200px;
+    height: 216px;","```suggestion
    height: 215px;
```
",2019-05-24 09:45:49
891,"@@ -677,6 +677,12 @@ class Uppy {
         return
       }
 
+      const { capabilities } = this.getState()
+      if (newFileIDs.length !== currentUploads[uploadID].fileIDs.leagth","```suggestion
      if (newFileIDs.length !== currentUploads[uploadID].fileIDs.length
```",2022-07-26 21:25:28
241,"@@ -68,6 +73,10 @@ module.exports = function Dashboard (props) {
           }
 
         <div class=""uppy-Dashboard-innerWrap"">
+          <div class=""uppy-Dashboard-drop-files-here-hint"">
+            {props.i18n('dropHint')}",Tiny style nitpick: I’d call it `uppy-Dashboard-dropFilesHereHint`.,2019-04-16 14:34:34
295,"@@ -68,7 +68,7 @@ svg.UppyIcon.retry {
 }
 
 
-// Svg styles that depend upon the state of the file.",Seems grammatically there’s no difference? https://english.stackexchange.com/questions/34291/depend-upon-or-depend-on ;),2019-06-27 16:32:36
445,"@@ -681,6 +681,8 @@ module.exports = class Tus extends Plugin {
     this.uppy.on('reset-progress', this.handleResetProgress)
 
     if (this.opts.autoRetry) {
+      this.uppy.log('[Tus] The `autoRetry` option may be removed in Uppy 2.0. See https://github.com/transloadit/uppy/pull/2347 for alternatives.', 'warning')",maybe not do this because autoretry is the default,2020-06-29 15:26:39
453,"@@ -69,6 +70,7 @@ en_US.strings = {
   noFilesFound: 'You have no files or folders here',
   noInternetConnection: 'No Internet connection',
   noNewAlreadyUploading: 'Cannot add new files: already uploading',
+  noRecentFilesFound: 'No files or folders found from the last %{months_retrieved} months',",do we still need these as well? 🤔 ,2020-07-09 17:27:09
299,"@@ -69,7 +69,8 @@ module.exports = class Webcam extends Plugin {
         'picture'
       ],
       mirror: true,
-      facingMode: 'user'
+      facingMode: 'user',
+      preferredMimeType: null","Since this is for video only, should it be called `preferredVideoMimeType`? If we add it for pictures later, it will likely need to be a different option.",2019-07-05 11:58:08
41,"@@ -699,12 +699,15 @@ class Uppy {
   * @param {string} msg Message to be displayed by the informer
   */
 
-  info (msg, type, duration) {
+  info (message, type, duration) {
+    const isComplexMessage = typeof message === 'object'
+
     this.setState({
       info: {
         isHidden: false,
-        type: type,
-        msg: msg
+        type: type || 'info',
+        message: isComplexMessage ? message.msg : message,",Should the message object also be `message.message` instead of `message.msg`? I like it written out.,2017-08-28 08:03:26
205,"@@ -7,10 +7,13 @@ const mimeToExtensions = {
   'audio/ogg': 'ogg',
   'video/webm': 'webm',
   'audio/webm': 'webm',
+  'video/x-matroska': 'mkv',
   'video/mp4': 'mp4',
   'audio/mp3': 'mp3'
 }
 
 module.exports = function getFileTypeExtension (mimeType) {
+  // Remove the ; bit in 'video/x-matroska;codecs=avc1'
+  mimeType = mimeType.replace(/;.*$/, '')
   return mimeToExtensions[mimeType] || null","Feels like a case-specific solution, but I guess it’s standard to use `;` in this case, so it’ll work for others as well?",2018-10-08 13:53:54
663,"@@ -7,10 +7,38 @@ const Uploader = require('../../src/server/Uploader')
 const socketClient = require('../mocksocket')
 const standalone = require('../../src/standalone')
 
+const { companionOptions } = standalone()
+
 describe('uploader with tus protocol', () => {
+  test('uploader respects uploadUrls whitelist', async () => {","```suggestion
  test('uploader respects uploadUrls', async () => {
```",2021-09-09 09:53:04
913,"@@ -7,13 +7,13 @@ This is a simple, lean example that combines the usage of @uppy/companion and up
 To run this example, make sure you've correctly installed the **repository root**:
 
 ```bash
-npm install
+corepack yarn install","```suggestion
corepack yarn install
corepack yarn build
```",2022-08-16 14:37:10
189,"@@ -7,33 +7,32 @@ set -o nounset
 # Set magic variables for current FILE & DIR
 __dir=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")"" && pwd)""
 __kube=""${__dir}""
+__companion=""$(dirname ""$(dirname ""${__kube}"")"")""
+# Install kubectl
+curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl",Shall we pin the currently used kubectl and hence make version bumps opt-in vs organic?,2018-08-17 05:14:15
554,"@@ -7,6 +7,11 @@ module.exports = class Editor extends Component {
       this.imgElement,
       this.props.opts.cropperOptions
     )
+    this.imgElement.addEventListener('crop', (ev) => {
+      this.rotateRange.value = ev.detail.rotate
+      this.rotateRange.parentNode
+        .setAttribute('aria-label', `${ev.detail.rotate}º`)","Would these be feasible to do using react state updates, vs updating the dom directly?",2021-03-31 09:48:48
824,"@@ -7,6 +7,12 @@ export interface CompressorOptions extends PluginOptions {
   locale?: CompressorLocale
 }
 
+export type GenericEventCallback = () => void;
+
+export interface UppyEventMap {
+  'compressor:complete': GenericEventCallback",Should we consider giving all compressed files as an argument? I think it makes sense. I actually needed it for better e2e tests as well. ,2022-05-05 10:06:04
826,"@@ -7,6 +7,12 @@ export interface CompressorOptions extends PluginOptions {
   locale?: CompressorLocale
 }
 
+export type GenericEventCallback = () => void;
+
+export interface UppyEventMap {
+  'compressor:complete': GenericEventCallback
+}
+","This is not going to work without declaring the module to merge it into the other events

```suggestion
declare module '@uppy/core' {
  export interface UppyEventMap {
    'compressor:complete': () => void
  }
}

```",2022-05-09 10:36:49
198,"@@ -7,6 +7,8 @@ function DashboardContentTitle (props) {
 }
 
 function PanelTopBar (props) {
+  const notOverFileLimit = props.maxNumberOfFiles !== props.totalFileCount",`props.totalFileCount < props.maxNumberOfFiles` makes the intent a bit more clear I think. And a check to see if maxNumberOfFiles even exists?,2018-09-20 09:35:40
601,"@@ -7,6 +7,8 @@ series: 30 Days to Liftoff
 seriesSuffix: 'of 30'
 ---
 
+<!--lint disable no-undefined-references-->
+",Is this necessary? All blog posts before July 2021 are ignored by the linter (well at least I thought that is what I set up),2021-07-07 20:19:33
719,"@@ -7,7 +7,10 @@ module.exports = (api) => {
   return {
     presets: [
       ['@babel/preset-env', {
-        include: ['@babel/plugin-proposal-nullish-coalescing-operator'],
+        include: [
+          '@babel/plugin-proposal-nullish-coalescing-operator',
+          '@babel/plugin-proposal-optional-chaining',","```suggestion
          '@babel/plugin-proposal-optional-chaining', // can be removed in a future semver-major. See https://github.com/transloadit/uppy/pull/3335
```",2021-11-30 05:47:09
13,"@@ -7,7 +7,7 @@ module.exports = (props) => {
       <h1 class=""UppyProvider-authTitle"">
         Please authenticate with <span class=""UppyProvider-authTitleName"">${props.pluginName}</span><br> to select files
       </h1>
-      <a class=""UppyProvider-authBtn"" href=${props.link} target=""_blank"">Authenticate</a>
+      <a class=""UppyProvider-authBtn"" onclick=${props.handleAuth}>Authenticate</a>","🤔 Since this is not a link now, semantically we could turn it into a `<button>`, making sure to include `@include reset-button` in its style declaration in SCSS, which will reset all sorts of browser default button styles.",2017-01-27 23:08:35
272,"@@ -7,7 +7,9 @@
     ""sourceMap"": false,
     ""allowJs"": true,
     ""checkJs"": true,
-    ""noEmitOnError"": true
+    ""noEmitOnError"": true,
+    ""resolveJsonModule"": true,
+    ""esModuleInterop"": true","I suspect this could be the issue to failing Travis tests, since Companion’s `lib` folder is now built weirdly locally for me.

Do we have any tests that test the `lib` folder of Companion, how it’s used when installed from `npm`?",2019-05-30 12:18:34
878,"@@ -70,6 +69,9 @@ const getConfigFromEnv = () => {
         key: process.env.COMPANION_UNSPLASH_KEY,
         secret: process.env.COMPANION_UNSPLASH_SECRET,
       },
+      s3: {
+        getKey: (req, filename) => `${crypto.randomUUID()}-${filename}`,
+      },",You are creating a `s3` key again which I removed in #3781. This should be moved down. ,2022-07-11 10:06:18
588,"@@ -70,7 +70,6 @@ class VirtualList extends Component {
     window.addEventListener('resize', this.handleResize)
   }
 
-  // TODO: can we use a different method here?","maybe we should either keep the TODO or remove the eslint disable, because this method is really deprecated and should be removed, so it's relevant still?",2021-06-28 10:00:17
103,"@@ -700,12 +705,14 @@ module.exports = class Transloadit extends Plugin {
       this.uppy.on('transloadit:complete', onAssemblyFinished)
       this.uppy.on('transloadit:assembly-error', onAssemblyError)
       this.uppy.on('transloadit:import-error', onImportError)
-    }).then(() => {
+    }).then((result) => {","So still returning the result, but not using it?",2018-01-22 22:07:33
261,"@@ -702,13 +702,14 @@ a.uppy-Dashboard-poweredBy {
   height: 50px;
   border-bottom: 0;
   position: relative;
+  flex-shrink: 0;
   display: flex;
   justify-content: center;
   align-items: center;
 
   .uppy-size--md & {
     width: 100%;
-    height: 139px;
+    height: 152px;","```suggestion
    height: 140px;
```
",2019-05-24 09:41:09
258,"@@ -707,7 +707,7 @@ a.uppy-Dashboard-poweredBy {
 
   .uppy-size--md & {
     width: 100%;
-    height: 100px;
+    height: 129px;
     border: 0;","`129px` vs `130px`? I’m guessing there’s a reason, that’s why I’m asking, so I can keep that in the back of my head for future refactors.",2019-05-23 07:27:32
930,"@@ -71,7 +65,7 @@ new Uppy()
   .use(ScreenCapture, { target: Dashboard })
   .use(ImageEditor, { target: Dashboard })
   .use(Transloadit, {
-    service: TRANSLOADIT_SERVICE_URL,
+    service: 'https://api2.transloadit.com',","This is set by default, so probably ok to skip.",2022-08-23 12:25:50
429,"@@ -71,8 +72,7 @@ const get = (req, res) => {
       res.status(response.status).json(response.body)
     }).catch((err) => {
       logger.error(err, 'controller.url.get.error', req.id)
-      // @todo this should send back error (not err)
-      res.json({ err })
+      return res.status(err.status || 500).json({ message: 'failed to fetch URL metadata' })",is this OK for old clients or do we need to check the uppy version and decide to use the old or new response style?,2020-05-18 11:13:04
580,"@@ -711,6 +711,10 @@ this.info({
 
 Subscribe to an uppy-event. See below for the full list of events.
 
+### `uppy.once('event', action)`
+
+Subscribe once to an uppy-event. See below for the full list of events.","```suggestion
Create an event listener that fires once. See below for the full list of events.
```",2021-06-24 09:48:49
633,"@@ -72,6 +76,8 @@ module.exports = class Webcam extends UIPlugin {
       </svg>
     )
 
+    this.#enableMirror = opts?.mirror ?? true","Instead you can put this line somewhere after line 117, it would simplify greatly the assignment and would avoid duplicating the default value (it's already defined line 109):
```suggestion
    this.#enableMirror = this.opts.mirror
```",2021-08-05 13:33:07
345,"@@ -726,3 +726,13 @@ uppy.on('restriction-failed', (file, error) => {
   // do some customized logic like showing system notice to users
 })
 ```
+
+### `reset-progress`
+
+Fired when `uppy.resetProgress()` is called, `totalProgress` and each file has its upload progress reset to zero.","I think we can avoid mentioning `totalProgress` which is otherwise undocumented:
```suggestion
Fired when `uppy.resetProgress()` is called and each file has its upload progress reset to zero.
```

(in the future we could add a `uppy.getTotalProgress()` method to provide a more official way to get to that data)",2019-11-04 09:30:59
570,"@@ -73,8 +73,7 @@ class Uppy {
           0: 'Select %{smart_count}',
           1: 'Select %{smart_count}',
         },
-        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',
-        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',
+        allFilesFromFolderNamed: 'All files from folder %{name}',","Again, trying to think if a change like this could be breaking: https://github.com/transloadit/uppy/pull/2397",2021-06-15 22:48:13
536,"@@ -733,8 +734,12 @@ class Uppy {
 
     this.setState({ files })
 
-    newFiles.forEach((newFile) => {
+    newFiles.forEach((newFile, i) => {
       this.emit('file-added', newFile)
+
+      if (i + 1 === newFiles.length) {
+        this.emit('final-file-added', newFile)
+      }","I think `final-file-added` event looks geared towards a very particular use case, and could be more general. I'd expect it's pretty rare that a developer actually wants to receive only the last file in a particular set that the user added at once. We could instead give them access to the whole list of newly added files. Perhaps like this:

```js
this.emit('files-added', newFiles)
```

This still allows you to do the same thing as final-file-added:
```js
uppy.on('files-added', (list) => {
  const last = list[list.length - 1]
})
```
but also _more_ things.",2020-12-09 16:07:05
642,"@@ -74,7 +74,7 @@ class DashboardModal extends React.Component {
   }
 }
 
-DashboardModal.propTypes = { // Only check this prop type in the browser.
+DashboardModal.propTypes = {","I think we should keep this comment.
```suggestion
DashboardModal.propTypes = { // Only check this prop type in the browser.
```",2021-08-17 13:22:40
825,"@@ -74,9 +76,12 @@ class UIPlugin extends BasePlugin {
       }
 
       render(this.render(this.uppy.getState()), uppyRootElement)
-      this.el = uppyRootElement.firstElementChild
+      this.el = uppyRootElement
       targetElement.appendChild(uppyRootElement)
 
+      // Set the text direction if the page has not defined one.
+      uppyRootElement.dir = this.opts.direction || getTextDirection(uppyRootElement) || 'ltr'","could update this to use a more appropriate operator while we're here ;)
```suggestion
      uppyRootElement.dir = this.opts.direction ?? getTextDirection(uppyRootElement) ?? 'ltr'
```",2022-05-09 10:30:59
821,"@@ -74,9 +76,13 @@ class UIPlugin extends BasePlugin {
       }
 
       render(this.render(this.uppy.getState()), uppyRootElement)
-      this.el = uppyRootElement.firstElementChild
+      this.el = uppyRootElement
       targetElement.appendChild(uppyRootElement)
 
+      // Set the text direction if the page has not defined one.
+      const direction = this.opts.direction || getTextDirection(uppyRootElement) || 'ltr'
+      uppyRootElement.dir = direction","```suggestion
      uppyRootElement.dir = this.opts.direction || getTextDirection(uppyRootElement) || 'ltr'
```",2022-05-05 09:59:19
420,"@@ -743,9 +743,8 @@ module.exports = class Transloadit extends Plugin {
 
   _onTusError (err) {
     if (err && /^tus: /.test(err.message)) {
-      const url = err.originalRequest && err.originalRequest.responseURL
-        ? err.originalRequest.responseURL
-        : null
+      const xhr = err.originalRequest ? err.originalRequest.getUnderlyingObject() : null
+      const url = xhr && xhr.responseURL ? xhr.responseURL : null","tus-js-client v2 introduces a HTTP abstraction layer, so the code to access the URL is a bit different now.",2020-05-04 13:21:46
641,"@@ -75,3 +75,16 @@ declare class Dashboard extends UIPlugin<DashboardOptions> {
 }
 
 export default Dashboard
+
+// Events
+
+export type DashboardFileEditStartCallback<TMeta> = (file: UppyFile<TMeta>) => void;
+export type DashboardFileEditCompleteCallback<TMeta> = (file: UppyFile<TMeta>) => void;
+declare module '@uppy/core' {",Why do we need to declare this module?,2021-08-16 10:53:10
98,"@@ -75,6 +75,7 @@ module.exports = class Dashboard extends Plugin {
       defaultTabIcon: defaultTabIcon,
       showProgressDetails: false,
       hideUploadButton: false,
+      hideProgressAfterFinish: false,",The docs should also be updated with the new option.,2018-01-01 22:41:52
121,"@@ -75,6 +76,19 @@ By default Dashboard will be rendered as a modal, which is opened via clicking o
 
 String with a CSS selector for a button that will trigger opening Dashboard modal. Multiple buttons or links can be used, if it’s a class selector (`.uppy-choose`, for example).
 
+### `plugins: []`
+
+List of plugin IDs that should be shown in the Dashboard's top bar. For example, to show the Webcam plugin:
+",Wouldn’t you be able to install StatusBar or similar the same way? So its not just for `acquire` plugins?,2018-02-13 17:36:29
285,"@@ -75,9 +80,45 @@ module.exports = class RequestClient {
     return res.json()
   }
 
+  preflight (path) {
+    return new Promise((resolve, reject) => {
+      if (this.preflightDone) {
+        return resolve(this.allowedHeaders.slice())
+      }
+
+      fetch(this._getUrl(path), {
+        method: 'OPTIONS'","I'm actually getting an error on this because `OPTIONS` is not in the CORS whitelist …
![image](https://user-images.githubusercontent.com/1006268/59565599-fba49d00-9055-11e9-934f-bd9171b4d8d5.png)

Request headers:
![image](https://user-images.githubusercontent.com/1006268/59565601-02331480-9056-11e9-9713-74fc66592a27.png)

Response headers:
![image](https://user-images.githubusercontent.com/1006268/59565607-0f500380-9056-11e9-9a3e-4452b6aa25fc.png)

If this is the case we may need a new separate endpoint that we can just GET after all :(",2019-06-16 14:44:56
600,"@@ -751,16 +751,6 @@ uppy.on('file-removed', (file, reason) => {
 })
 ```
 
-```js
-uppy.on('file-removed', (file, reason) => {
-  removeFileFromUploadingCounterUI(file)
-
-  if (reason === 'removed-by-user') {
-    sendDeleteRequestForFile(file)
-  }
-})
-```
-",What's the reason for removing this? It looks unrelated.,2021-07-07 20:18:12
526,"@@ -767,6 +767,22 @@ uppy.on('upload', (data) => {
 })
 ```
 
+### `progress`
+
+Fired each time the total upload progress is updated:
+
+**Parameters**
+- `progress` - An integer representing the total upload progress.","```suggestion
- `progress` - An integer (0-100) representing the total upload progress.
```
Think it'd be best to stress here that this is 0-100 and not 0.0-1.0, because it's a little unusual.",2020-11-19 14:24:05
527,"@@ -767,6 +767,22 @@ uppy.on('upload', (data) => {
 })
 ```
 
+### `progress`
+
+Fired each time the total upload progress is updated:
+
+**Parameters**
+- `progress` - An integer representing the total upload progress.
+
+**Example**
+
+```javascript
+uppy.on('progress', (progress) => {
+  // progress: integer (total progress percentage)
+  console.log(progress)
+})
+```
+
 ### `upload-progress`
 
 Fired each time file upload progress is available:","```suggestion
Fired each time an individual file upload progress is available:
```",2020-11-20 15:11:32
785,"@@ -77,11 +73,21 @@ class Uppy {
       infoTimeout: 5000,
     }
 
+    // backwards-compatability for `allowMultipleUploads`
+    // TODO: remove `allowMultipleUploads` in the next major
+    const getAllowMultipleUploadBatches = () => {","Why add backwards compatibility? Afaik we already said that this was a breaking change in 2.0.0: 

https://github.com/transloadit/uppy/blob/companion-s3-optional-acl/website/src/docs/migration-guides.md#rename-allowmultipleuploads-to-allowmultipleuploadbatches",2022-03-16 07:05:14
435,"@@ -77,14 +77,6 @@ jobs:
         script: bin/travis-deploy-companion
         on:
           branch: master
-    - name: 'Run Companion tests (Node.js 6)'
-      node_js: 12
-      services:
-        - docker
-      script:
-        - nvm install 6.0.0
-        - nvm use 6.0.0
-        - npm run test:companion",Can we keep this but run it on `node_js: 10.0.0`?,2020-06-08 15:57:40
500,"@@ -77,6 +78,10 @@ If both width and height are given, only width is taken into account.
 >
 > See issue [#979](https://github.com/transloadit/uppy/issues/979) and [#1096](https://github.com/transloadit/uppy/pull/1096) for details on this feature.
 
+### `thumbnailtype: 'image/jpeg'`
+
+MIME type of the resulting thumbnail. Default thumbnail MIME type is `image/jpeg`. ","Maybe we should elaborate on why it might be useful to change the MIME type? PNG, transparency.",2020-10-29 13:15:27
622,"@@ -77,6 +79,7 @@ module.exports = class ImageEditor extends UIPlugin {
     this.setPluginState() // so that UI re-renders and we see the updated locale
   }
 
+  // eslint-disable-next-line class-methods-use-this","Alternatively we could remove this method from the class and declare it as a function instead, if it's only used internally.",2021-07-22 09:48:37
838,"@@ -77,7 +77,7 @@ module.exports.app = (optionsArg = {}) => {
 
   // create singleton redis client
   if (options.redisUrl) {
-    redis.client(merge({ url: options.redisUrl }, options.redisOptions || {}))
+    redis.client(options)",Will this still use `redisOptions` properly?,2022-05-23 06:30:59
421,"@@ -779,7 +778,7 @@ module.exports = class Transloadit extends Plugin {
         // were added to the Assembly, so we can properly complete it. All that state is handled by
         // Golden Retriever. So, Golden Retriever is required to do resumability with the Transloadit plugin,
         // and we disable Tus's default resume implementation to prevent bad behaviours.
-        resume: false,
+        storeFingerprintForResuming: false,",The resume option is removed but you want the storeFingerprintForResuming option here if I understand the comment above correctly.,2020-05-04 13:22:13
431,"@@ -78,6 +79,12 @@ class TransloaditAssembly extends Emitter {
 
       this.emit('connect')
     })
+
+    socket.on('connect_failed', () => {
+      this._onError(new NetworkError('Transloadit Socket.io connection error'))
+      this.socket = null
+    })
+","Added handling of socket.io’s `connect_failed`, but should the same be done for WebSocket that we use with Companion @ifedapoolarewaju?",2020-05-27 07:38:59
58,"@@ -783,25 +783,33 @@ class Uppy {
   /**
    * Logs stuff to console, only if `debug` is set to true. Silent in production.
    *
-   * @return {String|Object} to log
+   * @param {String|Object} msg to log
+   * @param {String} type optional `error` or `warning`
    */
   log (msg, type) {
+    let message = `[Uppy] [${Utils.getTimeStamp()}] ${msg}`
+
+    global.uppyLog = global.uppyLog + '\n' + 'DEBUG LOG: ' + msg","This now always happens, even if opts.debug is false. Is that intentional?",2017-10-02 06:44:50
145,"@@ -783,6 +813,9 @@ module.exports = class Transloadit extends Plugin {
         // Disable tus-js-client fingerprinting, otherwise uploading the same file at different times
         // will upload to the same assembly.
         resume: false,
+        // Disable Uppy Server's retry optimisation; we need to change the endpoint on retry
+        // so it can't just reuse the same tus.Upload instance server-side.
+        useFastRemoteRetry: false,
         // Only send assembly metadata to the tus endpoint.","wow, this stuff is getting complex with every feature 😱",2018-05-09 21:18:00
738,"@@ -79,11 +79,6 @@ class TransloaditAssembly extends Emitter {
       this.emit('connect')
     })
 
-    socket.on('connect_failed', () => {","Since it never fires, outdated event?",2022-01-10 17:27:19
691,"@@ -79,6 +78,7 @@ module.exports = {
     'global-require': ['warn'],
     'import/no-unresolved': ['warn'],
     'import/order': ['warn'],
+    'max-classes-per-file': ['warn'],","This is [new](https://github.com/transloadit/eslint-config-transloadit#newly-enforced-rules), setting it to warn for now, hopefully we can fix this in later, smaller, custom rolled PRs, and save this one for automation and getting the upgrade out the door.",2021-10-28 11:52:54
11,"@@ -8,12 +8,12 @@ export default class Provider {
   constructor (opts) {
     this.opts = opts
     this.provider = opts.provider
-    this.id = this.provider
+    this.id = opts.id || this.provider","in case you want to rename one of the plugins when instantiating, from options?",2016-12-20 05:35:00
357,"@@ -8,14 +8,27 @@
  */
 module.exports = function generateFileID (file) {
   // filter is needed to not join empty values with `-`","Filter is not used now, comment not needed?",2019-11-26 15:32:13
306,"@@ -8,7 +8,7 @@ const Dropbox = require('@uppy/dropbox')
 const Tus = require('@uppy/tus')
 
 const isOnTravis = !!(process.env.TRAVIS && process.env.CI)
-const companionUrl = isOnTravis ? 'http://companion.test:3030' : 'http://localhost:3030'
+const companionUrl = isOnTravis ? 'http://companion.test:3030' : 'http://localhost:3020'",wdio runs Companion on :3030. can't we use that here?,2019-07-22 12:20:01
200,"@@ -8,7 +8,7 @@ const ThumbnailGenerator = require('@uppy/thumbnail-generator')
 const findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements')
 const toArray = require('@uppy/utils/lib/toArray')
 const prettyBytes = require('prettier-bytes')
-const ResizeObserver = require('resize-observer-polyfill')
+const ResizeObserver = require('resize-observer-polyfill').default","I think we need to do: `require('resize-observer-polyfill').default || require('resize-observer-polyfill')`, to support both the transpiled version of its ES module format and its CommonJS format. A bit like we did here (although for a different related reason): 

https://github.com/transloadit/uppy/blob/4684a3e1f3bb43ed59c4ffcda73093cdbe1ddf0d/packages/%40uppy/form/src/index.js#L3-L5",2018-09-25 11:26:55
305,"@@ -80,10 +80,10 @@ de_DE.strings = {
   retry: 'Erneut versuchen',
   retryUpload: 'Upload erneut versuchen',
   saveChanges: 'Änderungen speichern',
-  selectXFiles: {
-    '0': '%{smart_count} Datei auswählen',
-    '1': '%{smart_count} Dateien auswählen',
-    '2': '%{smart_count} Dateien auswählen'
+  selectX: {
+    '0': 'Wählen Sie %{smart_count}',
+    '1': 'Wählen Sie %{smart_count}',
+    '2': 'Wählen Sie %{smart_count}'","@tim-kos could you check this one? `Select 1` or `Select 5`, meaning files or folders.",2019-07-16 15:14:31
438,"@@ -803,6 +810,11 @@ module.exports = class Dashboard extends Plugin {
       theme = this.opts.theme
     }
 
+    if (!['files', 'folders', 'both'].includes(this.opts.browserUploadType)) {","`.includes()` may not be available in IE 10/11, could this use indexOf or just three `===` checks instead?",2020-06-24 11:22:29
293,"@@ -807,7 +807,6 @@ module.exports = class Dashboard extends Plugin {
       showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,
       proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,
       currentWidth: pluginState.containerWidth,
-      isWide: pluginState.containerWidth > 400,",Thanks for removing unused stuff! Good catch.,2019-06-24 16:09:33
928,"@@ -81,11 +81,13 @@ Alternatively, you can also use a pre-built bundle from Transloadit’s CDN: Edg
 <script src=""https://releases.transloadit.com/uppy/v3.0.0-beta.5/uppy.min.js""></script>","```suggestion
```",2022-08-22 16:29:35
138,"@@ -81,6 +81,10 @@
   height: 100%;
 }
 
+.uppy-StatusBar-contentPadding {
+  margin-right: 0.3em;","I would use `1ch` in this case since it's horizontal text relative sizing (`ch` is relative to the character width, `em` to the character height).",2018-04-16 13:52:44
926,"@@ -81,6 +81,10 @@ export default class Tus extends BasePlugin {
     /** @type {import("".."").TusOptions} */
     this.opts = { ...defaultOptions, ...opts }
 
+    if ('metaFields' in opts) {","```suggestion
    if (opts?.allowedMetaFields === undefined && 'metaFields' in opts) {
```",2022-08-22 13:38:37
637,"@@ -81,6 +81,7 @@ module.exports = function Dashboard (props) {
       onDrop={props.handleDrop}
     >
       <div
+        aria-hidden=""true""",Why was this added?,2021-08-12 10:37:58
854,"@@ -81,7 +81,7 @@ const getConfigFromEnv = () => {
         useAccelerateEndpoint:
           process.env.COMPANION_AWS_USE_ACCELERATE_ENDPOINT === 'true',
         expires: parseInt(process.env.COMPANION_AWS_EXPIRES || '300', 10),
-        acl: process.env.COMPANION_AWS_DISABLE_ACL === 'true' ? null : (process.env.COMPANION_AWS_ACL || 'public-read'), // todo default to no ACL in next major and remove COMPANION_AWS_DISABLE_ACL
+        acl: process.env.COMPANION_AWS_ACL,",Do we keep a document with all the breaking changes we are landing? Alternatively we could split all the breaking changes in different commits/PRs so it will appear on the CHANGELOGs.,2022-05-30 09:36:15
763,"@@ -82,7 +82,18 @@ module.exports.app = (options = {}) => {
   const app = express()
 
   if (options.metrics) {
-    app.use(middlewares.metrics())
+    app.use(middlewares.metrics({ path: options.server.path }))
+
+    // backward compatibility
+    // TODO remove in next major semver
+    const buildUrl = getURLBuilder(options)
+    if (options.server.path) {","```suggestion
    if (companionOptions.server.path) {
      const buildUrl = getURLBuilder(companionOptions)
```",2022-02-25 14:05:39
176,"@@ -83,10 +84,11 @@
     ""build"": ""npm-run-all --parallel build:js build:css --serial build:gzip size"",
     ""clean"": ""rm -rf packages/*/lib packages/@uppy/*/lib && rm -rf packages/uppy/dist"",
     ""lint:fix"": ""npm run lint -- --fix"",
+    ""lint:companion"": ""eslint --ignore-path packages/@uppy/companion/.eslintignore -c packages/@uppy/companion/.eslintrc.json packages/@uppy/companion/."",",shouldn't eslint use the `.eslintrc.json` in that directory when we run it on the entire project? :thinking: ,2018-07-16 10:30:46
792,"@@ -838,6 +838,7 @@ class Uppy {
     return this.#runUpload(uploadID)
   }
 
+  // todo what is the point of the reset method when we have cancelAll or vice versa?","```suggestion
  // todo remove in next major. what is the point of the reset method when we have cancelAll or vice versa?
```",2022-03-22 06:14:36
17,"@@ -85,36 +103,35 @@ module.exports = class Tus10 extends Plugin {
 
     // Create a new tus upload
     return new Promise((resolve, reject) => {
-      const upload = new tus.Upload(file.data, {
+      var optsTus = Object.assign({}, tusDefaultOptions, this.opts)",Nit: can you change this to `const`?,2017-04-18 12:02:12
561,"@@ -85,6 +85,9 @@ const options = {
 }
 
 app.use('/companion', companion.app(options))
+
+// Optional: if you want Prometheus metrics:
+app.use(companion.metrics())",Would it make sense to expose a `metrics: true` option in `companion.app({})` instead? I imagine you would normally want to mount the metrics endpoint on `/companion/` anyways,2021-04-12 07:32:49
455,"@@ -86,6 +86,11 @@ class FileCard extends Component {
   render () {
     const file = this.props.files[this.props.fileCardFor]
 
+    let showEditButton
+    this.props.editors.forEach((target) => {
+      showEditButton = this.props.getPlugin(target.id).сanEditFile(file)",❓Questionable way of looping through editors and calling `сanEditFile` to show the edit button. Is there a better way?,2020-07-13 09:11:23
457,"@@ -86,6 +86,11 @@ class FileCard extends Component {
   render () {
     const file = this.props.files[this.props.fileCardFor]
 
+    let showEditButton
+    this.props.editors.forEach((target) => {
+      showEditButton = this.props.getPlugin(target.id).сanEditFile(file)
+    })","I think the looping stuff is probably the only way, but it could use `.some()` instead of `.forEach()`, so it will also stop looping as soon as it finds a match:
```suggestion
    const showEditButton = this.props.editors.some((target) => {
      const plugin = this.props.getPlugin(target.id)
      plugin.сanEditFile(file)
    })
```

(Also this is a minor thing, but I would probably put this entire code in the Dashboard plugin class itself and pass it in as a prop, so you can do `this.props.canEditFile(file)` instead of writing the loop in the render code. Then it doesn't depend directly on other plugins. If we ever end up doing testing for the components it will be easier that way)",2020-07-13 09:36:21
867,"@@ -86,7 +86,7 @@ export default () => {
     // .use(Unsplash, { target: Dashboard, companionUrl: COMPANION_URL })
     .use(RemoteSources, {
       companionUrl: COMPANION_URL,
-      sources: ['Box', 'Dropbox', 'Facebook', 'GoogleDrive', 'Instagram', 'OneDrive', 'Unsplash', 'Url'],
+      sources: ['Box', 'Dropbox', 'Webcam', 'Facebook', 'GoogleDrive', 'Instagram', 'OneDrive', 'Unsplash', 'Url'],
     })
     .use(Webcam, {","Is it expected that Webcam is both in RemoteSources and as standalone?
Also, optional nit, can we sort the list to be in alphabetical order.",2022-06-07 05:54:57
61,"@@ -867,6 +867,7 @@ class Uppy {
 
   info (message, type, duration) {
     const isComplexMessage = typeof message === 'object'
+    duration = typeof duration === 'undefined' ? 3000 : duration",how about a default parameter instead?,2017-10-24 07:29:41
678,"@@ -87,31 +89,22 @@ module.exports = class DragDrop extends UIPlugin {
     event.target.value = null
   }
 
-  handleDrop (event) {
-    if (this.opts.onDrop) this.opts.onDrop(event)
-
+  handleDragOver (event) {
+    this.opts?.onDragOver(event)",should be moved to the bottom. ,2021-10-18 15:37:17
557,"@@ -87,6 +88,9 @@ module.exports = () => {
     .use(ScreenCapture, { target: Dashboard })
     .use(Form, { target: '#upload-form' })
     .use(ImageEditor, { target: Dashboard })
+    .use(DomTarget, {","```suggestion
    .use(DropTarget, {
```",2021-03-31 11:54:45
116,"@@ -87,7 +87,6 @@ class Uppy {
     this.upload = this.upload.bind(this)
 
     this.emitter = ee()
-    this.on = this.emitter.on.bind(this.emitter)","`on` likely still needs a bind, similar to `this.resetProgress = this.resetProgress.bind(this)` correct?",2018-02-07 09:22:07
907,"@@ -87,7 +87,7 @@ export default () => {
     // .use(Unsplash, { target: Dashboard, companionUrl: COMPANION_URL, companionAllowedHosts })
     .use(RemoteSources, {
       companionUrl: COMPANION_URL,
-      sources: ['Box', 'Dropbox', 'Facebook', 'GoogleDrive', 'Instagram', 'OneDrive', 'Unsplash', 'Url'],
+      sources: ['Box', 'Dropbox', 'Facebook', 'GoogleDrive', 'Instagram', 'OneDrive', 'Unsplash', 'Zoom', 'Url'],",Isn't  that be causing problems if devs don't have Zoom credentials in their `.env`?,2022-08-15 10:23:10
69,"@@ -87,9 +87,9 @@ module.exports = class Plugin {
       this.el = plugin.render(this.core.state)
       targetElement.appendChild(this.el)
 
-      this.target = targetElement
+      this.target = this.el","I'm not sure what the effects of this change would be. if we do this we could remove `this.target` entirely and use `this.el` everywhere instead.

It seems like these two lines could stay the same. Or is there a reason to change this here that I'm missing?",2017-11-17 16:11:38
965,"@@ -88,11 +88,13 @@ export default Dashboard
 
 export type DashboardFileEditStartCallback<TMeta extends IndexedObject<any>> = (file?: UppyFile<TMeta>) => void;
 export type DashboardFileEditCompleteCallback<TMeta extends IndexedObject<any>> = (file?: UppyFile<TMeta>) => void;
+export type DashboardShowPlanelCallback = (id: UIPlugin<DashboardOptions>['id']) => void;","ID can be any string so I don't think we need to do something fancy here.

```suggestion
export type DashboardShowPlanelCallback = (id: string) => void;
```",2022-09-14 08:03:28
289,"@@ -88,12 +88,11 @@ class TransloaditAssembly extends Emitter {
 
     socket.on('assembly_upload_finished', (file) => {
       this.emit('upload', file)
-      this._fetchStatus({ diff: false })
+      this.status.uploads.push(file)
     })
 
     socket.on('assembly_uploading_finished', () => {
       this.emit('executing')
-      this._fetchStatus({ diff: false })","uploading_finished and upload_meta_data_extracted can fire very quickly after another, and there is not much difference in the Assembly status that's useful to us. I kept only the Assembly fetch after metadata is extracted, which ensures that we'll have all the correct `uploads.*.meta` properties on the client side.",2019-06-24 10:19:20
164,"@@ -88,5 +94,8 @@ module.exports = class RequestClient {
       .then(this.onReceiveResponse)
       // @todo validate response status before calling json
       .then((res) => res.json())
+      .catch((err) => {
+        throw new Error(`Could not detele ${this._getUrl(path)}. ${err}`)",s/detele/delete,2018-06-11 09:08:57
567,"@@ -88,6 +88,18 @@ Optionally, specify a string of text that explains something about the upload fo
 
 Localize text that is shown to the user.
 
+### `onDragOver: undefined`","`undefined` bit will end up in the ancor/hash url, so I try to avoid that. One way to deal with this is to put arguments in a list below the title, like here: https://uppy.io/docs/uppy/#uppy-log",2021-06-11 16:37:00
414,"@@ -88,7 +88,7 @@ class Uploader {
         this._paused = true
         if (this.tus) {
           const shouldTerminate = !!this.tus.url
-          this.tus.abort(shouldTerminate)
+          this.tus.abort(shouldTerminate).catch(() => {})","The `abort` function now returns a Promise. And if `shouldTerminate` is true, this Promise can be rejected. So, to avoid a unhandled promise rejection, I added a dummy handler. Since a possible error also wasn't handled before, I think it's OK to not handle it in this case as well.",2020-05-03 15:44:59
163,"@@ -886,16 +886,22 @@ class Uppy {
    * @param {object} instance The plugin instance to remove.
    */
   removePlugin (instance) {
-    const list = this.plugins[instance.type]
+    this.emit('plugin-removed', instance)","the event name suggests it's already been done, but actually the plugin is _about_ to be removed. It does need to be emitted at this time but maybe we can name it differently (`remove-plugin`, `plugin-remove`, idk)",2018-06-11 08:58:36
30,"@@ -89,6 +89,18 @@ module.exports = class Plugin {
     }
   }
 
+  setMetaFromTargetForm () {
+    const el = findDOMElement(this.opts.target)
+    const formMetaData = getMetaFromForm(el)
+    if (formMetaData) {
+      this.core.log('Adding metadata from form:')
+      this.core.log(formMetaData)
+      this.core.setMeta(formMetaData)
+    } else {
+      this.core.log('Couldn’t extract metadata from form')
+    }
+  }","I'm not sure about putting `setMetaFromTargetForm` on the Plugin class, since it's not for use by every plugin…Maybe the plugins could manually do

```js
this.core.setMeta(getMetaFromForm(this.target))
```

in their `install()` methods? that's not a _lot_ of code to duplicate.",2017-06-29 11:48:07
611,"@@ -89,6 +89,7 @@ class Uppy {
         enterTextToSearch: 'Enter text to search for images',
         backToSearch: 'Back to Search',
         emptyFolderAdded: 'No files were added from empty folder',
+        folderAlreadyAdded: 'The folder was already added',",Should we specify the name of the folder?,2021-07-15 16:34:16
412,"@@ -89,6 +90,6 @@
     ""test:watch"": ""npm test -- --watch""
   },
   ""engines"": {
-    ""node"": "">=6.0.0""
+    ""node"": "">=10.0.0""",i would do this in a separate PR because it also needs a travis.yml update (and maybe docs?),2020-04-29 12:35:03
448,"@@ -9,11 +9,29 @@ const instagram = require('./instagram')
 const instagramGraph = require('./instagram/graph')
 const facebook = require('./facebook')
 const onedrive = require('./onedrive')
+const zoom = require('./zoom')
 const { getURLBuilder } = require('../helpers/utils')
 const logger = require('../logger')
 // eslint-disable-next-line
 const Provider = require('./Provider')
 
+// leave here for now until Purest Providers gets updated with Zoom provider",I opened a pr here https://github.com/simov/purest-providers/pull/1 but it doesn't look like Purest providers has been updated in a few years. this was required to get the auth flow working,2020-07-02 21:43:10
248,"@@ -9,13 +9,12 @@
 			""titleBar.activeForeground"": ""#ffffff"",
 			""titleBar.activeBackground"": ""#ff009d"",
 		},
-		""files.exclude"": {
+		""search.exclude"": {
 			""website/public/"": true,","sorry, I meant to commit this to master",2019-04-25 11:18:31
722,"@@ -9,13 +9,13 @@ WORKDIR /app
 ADD package.json package-*.json yarn.* /tmp/
 RUN cd /tmp && apk --update add  --virtual native-dep \
   make gcc g++ python3 libgcc libstdc++ git && \
-  corepack yarn install && \
+  npm install && \","Moved to https://github.com/transloadit/uppy/pull/3355.
```suggestion
  corepack yarn install && \
```",2021-12-09 15:48:11
723,"@@ -9,13 +9,13 @@ WORKDIR /app
 ADD package.json package-*.json yarn.* /tmp/
 RUN cd /tmp && apk --update add  --virtual native-dep \
   make gcc g++ python3 libgcc libstdc++ git && \
-  corepack yarn install && \
+  npm install && \
   apk del native-dep
 RUN mkdir -p /app && cd /app && ln -nfs /tmp/node_modules
 RUN apk add bash
 COPY . /app
 ENV PATH ""${PATH}:/app/node_modules/.bin""
-RUN corepack yarn run build
+RUN npm run build","```suggestion
RUN corepack yarn run build
```",2021-12-09 15:48:22
83,"@@ -9,7 +13,10 @@ module.exports = (props) => {
            type=""file"" 
            name=""files[]"" 
            multiple=""true""
-           onchange=${props.handleInputChange} />`
+           onchange=${props.handleInputChange} 
+           ref=${(input) => {
+             inputEl = input
+           }} />`","this `<input>` element was made a separate element so that we could store a reference to it in the `input` variable, but that is not necessary when we have `ref`. it could be inlined in the `${input}` line below.",2017-12-13 21:34:54
865,"@@ -9,7 +9,7 @@ export interface UrlOptions extends PluginOptions, RequestClientOptions {
 }
 
 declare class Url extends UIPlugin<UrlOptions> {
-  public addFile(url: string): undefined | string | never
+  public addFile(url: string, optionalMeta: any = undefined): undefined | string | never","It should at least be an object with strings or numbers as keys, but anything as a value

```suggestion
  public addFile(url: string, meta?: IndexedObject<any>): undefined | string | never
```

can be imported like so:

```ts
import type { IndexedObject } from '@uppy/core'
```",2022-06-02 15:31:47
693,"@@ -9,7 +9,7 @@ tagline: ""uploader for AWS S3""
 ---
 
 The `@uppy/aws-s3` plugin can be used to upload files directly to an S3 bucket.
-Uploads can be signed using either [Companion][companion docs] or a custom signing function.
+Uploads can be signed using either \[Companion]\[companion docs] or a custom signing function.",These shouldnt be escaped but it's probably just because of what you pointed out below,2021-10-28 14:02:14
702,"@@ -9,8 +9,7 @@ WORKDIR /app
 
 RUN apk --update add  --virtual native-dep \
   make gcc g++ python libgcc libstdc++ git && \
-  npm install -g corepack && \
-  corepack yarn install && \
+  npm install","We are not pulling the lock file in the container, let's use npm instead of Yarn since we have to install it anyway.",2021-11-02 13:48:57
359,"@@ -90,6 +90,12 @@
   margin-right: 12px;
 }
 
+.uppy-Webcam-recordingLength {
+  position: absolute;
+  right: 20px;
+  color: $gray-600;","```suggestion
color: $gray-600;
font-family: SFMono-Regular, Menlo, Monaco, Consolas, ""Liberation Mono"", ""Courier New"", monospace;
```

How about using a mono-spaced font, so the numbers don’t jump when they change? They jump slightly for me in Firefox on MacOS.",2019-11-26 17:56:04
112,"@@ -90,6 +91,19 @@ module.exports = class XHRUpload extends Plugin {
       formPost.append(item, file.meta[item])
     })
 
+    let data = opts.data
+    if (typeof opts.data === 'function') {
+      data = opts.data(file)
+    }
+
+    if (data != null) {
+      (typeof data === 'object')
+        ? Object.keys(data).forEach((key) => {
+          formPost.append(key, data[key])
+        })","What's wrong with a if here? Also, `Object.entries` is more appropriate if you need both the key and the value.
```js
Object.entries(data).forEach(entry => formPost.append(...entry))
```
You will probably want to deal with nested objects somehow (probably worth throwing since it's really an invalid behavior and will result in `""[object Object]""` being sent)",2018-02-01 10:57:15
113,"@@ -90,6 +91,19 @@ module.exports = class XHRUpload extends Plugin {
       formPost.append(item, file.meta[item])
     })
 
+    let data = opts.data
+    if (typeof opts.data === 'function') {
+      data = opts.data(file)
+    }
+
+    if (data != null) {
+      (typeof data === 'object')
+        ? Object.keys(data).forEach((key) => {
+          formPost.append(key, data[key])
+        })
+        : formPost.append('data', data)","I think we should just require that `data` is an object, and not allow single values.",2018-02-01 13:53:16
406,"@@ -90,7 +96,13 @@ module.exports = class XHRUpload extends Plugin {
        * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)
        */
       getResponseError (responseText, response) {
-        return new Error('Upload error')
+        let error = new Error('Upload error')
+
+        if (isNetworkError(response)) {
+          error = new NetworkError(error)",should we be passing the `xhr` object to the `NetworkError` here as well?,2020-04-17 12:53:02
608,"@@ -90,9 +92,8 @@ async function getMinifiedSize (pkg, name) {
   if (excludes[name]) {
     b.exclude(excludes[name])
   }
-  b.plugin('tinyify')
 
-  const bundle = await promisify(b.bundle).call(b)
+  const { code:bundle } = await promisify(b.bundle).call(b).then(buf => minify(buf.toString(), { toplevel: true }))","Assigning `bundle` variable to `code`? A tad confusing, but maybe I’m just not used to `:`.",2021-07-14 07:15:48
280,"@@ -909,6 +911,8 @@ class Uppy {
       throw new Error(msg)
     }
 
+    this.log(`Using ${pluginId} v${Plugin.VERSION}`)","might want to check if it exists, most userland plugins won't have it for example",2019-06-07 12:06:53
945,"@@ -92,27 +92,29 @@ If you are using CommonJS, you might need to add some tooling for everything to
 
 See the [Robodog migration guide](#Migrate-from-Robodog-to-Uppy-plugins).
 
-### `@uppy/core`
+### Uppy packages
 
-#### Remove `AggregateError` polyfill.
+#### `@uppy/core`","I think I prefer not increasing the amount of headers, I made it this way as it looked good on our website, header levels too deep don't look too nice with the current website. I think it's fine to just have ""Known issues"" below the packages. ",2022-08-31 09:18:44
812,"@@ -92,48 +92,48 @@ cs_CZ.strings = {
   startRecording: 'Spustit nahrávání videa',
   stopRecording: 'Zastavit nahrávání videa',
   takePicture: 'Pořídit fotografii',
-  timedOut: 'Stav nahrávání se nezměnil %{seconds} sekund, ruším nahrávání.',
+  timedOut:  'Stav nahrávání se nezměnil %{seconds} sekund, nahrávání se ukončuje.',","```suggestion
  timedOut: 'Stav nahrávání se nezměnil %{seconds} sekund, nahrávání se ukončuje.',
```",2022-04-27 11:52:18
361,"@@ -923,7 +933,9 @@ module.exports = class Dashboard extends Plugin {
       this.uppy.use(ThumbnailGenerator, {
         id: `${this.id}:ThumbnailGenerator`,
         thumbnailWidth: this.opts.thumbnailWidth,
-        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload
+        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,
+        // If we don't block on thumbnails, we can lazily generate them
+        lazy: !this.opts.waitForThumbnailsBeforeUpload","Should we add a warning to the ThumbnailGenerator that if `{ waitForThumbnailsBeforeUpload: true, lazy: true }`, - then thumbnails will never get generated?

Otherwise I'd probably remove the .lazy option altogether. Cause:
`lazy: !this.opts.waitForThumbnailsBeforeUpload` is the most common use case,
`{ waitForThumbnailsBeforeUpload: true, lazy: true }` won't work, and
`{ waitForThumbnailsBeforeUpload: false, lazy: false }` - is valid, but I can't see the use case.",2019-12-01 19:42:24
899,"@@ -93,7 +93,6 @@ const meta = async (req, res) => {
     return res.json(urlMeta)
   } catch (err) {
     logger.error(err, 'controller.url.meta.error', req.id)
-    // @todo send more meaningful error message and status code to client if possible",Do we give up on sending a more meaningful error message?,2022-08-02 22:49:40
888,"@@ -93,8 +93,7 @@ const meta = async (req, res) => {
     return res.json(urlMeta)
   } catch (err) {
     logger.error(err, 'controller.url.meta.error', req.id)
-    // @todo send more meaningful error message and status code to client if possible
-    return res.status(err.status || 500).json({ message: 'failed to fetch URL metadata' })
+    return res.status(err.status || 500).json({ message: err.message || 'failed to fetch URL metadata' })","not sure if we want to expose any error message to the client. maybe the current implementation is just fine? If we want to pass more specific error messages, I think we should classify and i18n them, so the user doesn't just see something like `Request to https://secret/url?key=abcdef"" failed with status 404`",2022-07-26 13:06:02
57,"@@ -934,7 +942,15 @@ class Uppy {
    *
    * @return {Promise}
    */
-  upload (forceUpload) {
+  upload () {
+    if (!this.plugins.uploader) {
+      this.log('No uploader type plugins are used', 'warning')
+    }
+
+    if (Object.keys(this.state.files).length === 0) {
+      this.log('No files have been added', 'warning')
+    }","We could do this for now, but this is not always a mistake (eg. transloadit plugin w/ an assembly that imports from somewhere). ",2017-09-30 22:02:14
477,"@@ -94,32 +94,32 @@ exports.getMimeType = (item) => {
 }
 
 exports.getId = (item) => {
-  if (item.file_type && item.file_type === 'TIMELINE') {
-    return `${encodeURIComponent(item.meeting_id)}__TIMELINE`
+  if (item.file_type && item.file_type === 'CC') {
+    return `${encodeURIComponent(item.meeting_id)}__CC__${encodeURIComponent(item.recording_start)}`",we do this to differentiate between the multiple cc files for when the recording is stopped / restarted multiple times within a single meeting ,2020-09-04 16:54:12
995,"@@ -94,92 +89,80 @@ export default class RequestClient {
     return `${this.hostname}/${url}`
   }
 
-  #errorHandler (method, path) {
-    return (err) => {
-      if (!err?.isAuthError) {
-        // eslint-disable-next-line no-param-reassign
-        err = new ErrorWithCause(`Could not ${method} ${this.#getUrl(path)}`, { cause: err })
+  /*
+    Preflight was added to avoid breaking change between older Companion-client versions and",nice comment :),2022-11-03 13:55:17
885,"@@ -943,7 +943,9 @@ uppy.on('upload-error', (file, error, response) => {
 
 ### `upload-retry`
 
-Fired when an upload has been retried (after an error, for example).
+Fired when an upload has been retried (after an error, for example). This is not fired when the user click on retry-all.
+
+> ⚠️ Note that this method is event is not triggered when the user retry all uploads. (it trigger a retry-all event)","```suggestion
Fired when an upload has been retried (after an error, for example).

> ⚠️ Note that this method is event is not triggered when the user retries all uploads, it will trigger the `retry-all` event intstead.
```",2022-07-25 11:52:43
886,"@@ -945,6 +945,8 @@ uppy.on('upload-error', (file, error, response) => {
 
 Fired when an upload has been retried (after an error, for example).
 
+> ⚠️ Note that this method is event is not triggered when the user retries all uploads, it will trigger the `retry-all` event intstead.","```suggestion
> ⚠️ This event is not triggered when the user retries all uploads, it will trigger the `retry-all` event instead.
```",2022-07-25 13:37:25
616,"@@ -95,13 +87,14 @@ class FileCard extends Component {
     const showEditButton = this.props.canEditFile(file)
 
     return (
-      <div
+      <form","The reason we use less semantic stuff in Uppy and don‘t use `<form>` is because some people embed Uppy in a form, which might lead to conflicts. As far as I know, you can’t nest forms.",2021-07-17 05:11:54
962,"@@ -95,3 +100,59 @@ jobs:
         run: gh pr comment ${{ github.event.pull_request.number }} --body ""Release job failed, please take action.""
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+
+  docker:","```suggestion
  # see also companion-deploy.yml
  docker:
```",2022-09-12 13:49:27
44,"@@ -95,6 +103,10 @@ module.exports = class Plugin {
     }
   }
 
+  focus () {
+    return
+  }",Do we need `focus` for something after all?,2017-09-07 19:04:36
40,"@@ -95,7 +95,7 @@ class Uppy {
       meta: Object.assign({}, this.opts.meta),
       info: {
         isHidden: true,
-        type: '',
+        type: 'info',
         msg: ''",This property name was changed to `message` further down but not here,2017-08-28 08:02:35
224,"@@ -96,6 +100,10 @@ const resultPromise = transloadit.upload(files, {
     template_id: ''
   }
 })
+resultPromise.then((bundle) => {
+  bundle.transloadit // Array of Assembly statuses
+  bundle.results // Array of all Assembly results
+})
 ```
 ",👍 ,2019-02-04 20:49:41
55,"@@ -96,6 +97,16 @@ module.exports = class Tus10 extends Plugin {
           updatedFiles[file] = updatedFile
         })
         this.core.setState({files: updatedFiles})
+        return
+      case 'retryAll':
+        inProgressUpdatedFiles.forEach((file) => {
+          const updatedFile = Object.assign({}, updatedFiles[file], {
+            isPaused: false,
+            error: null
+          })
+          updatedFiles[file] = updatedFile
+        })
+        this.core.setState({files: updatedFiles})","Ye, this only touches core. I think all of these `case`s would make more sense to do in core, controlled by events. (`core:pause-all`, `core:resume-all`, `core:retry-all`) Same for `case 'toggle':`, which seems to respond to `core:upload-pause`.",2017-09-29 14:14:44
370,"@@ -96,7 +96,7 @@ const uppy = Uppy({
 
 You can also provide your own logger object: it should expose `debug`, `warn` and `error` methods, as shown in the examples below.
 
-By default `logger` is set to `nullLogger`, which does nothing:
+Here’s an example of `logger` that does nothing:","```suggestion
Here’s an example of a `logger` that does nothing:
```",2020-01-20 12:33:48
296,"@@ -96,9 +96,18 @@ module.exports = class AwsS3Multipart extends Plugin {
   createMultipartUpload (file) {
     this.assertHost()
 
+    let metadata = {}
+
+    Object.keys(file.meta).map(key => {
+      if (file.meta[key] !== null) {","I think it'd be best if we also ignored `undefined` here, else the toString() line will crash:
```suggestion
      if (file.meta[key] != null) {
```",2019-07-01 08:42:59
543,"@@ -979,6 +979,13 @@ class Uppy {
       }
     })
 
+    // If file is a google doc uploaded by companion
+    // file.size is null
+    if (data.bytesTotal === data.bytesUploaded && !file.size) {","some nitpicks 😇 
you've actually addressed a broader issue here, as photos from instagram and facebook also don't have a size. so we can be a bit more accurate in the comment by mentioning remote providers in general:

```suggestion
    // Remote providers sometimes don't tell us the file size,
    // but we can know how many bytes we uploaded once the upload is complete.
    if (data.bytesTotal === data.bytesUploaded && file.size == null) {
```

i'd also change the `!file.size` to `file.size == null`: we care about unknown file sizes here, not 0-sized files, best to be explicit about it.",2021-02-24 13:06:32
134,"@@ -98,6 +99,10 @@ module.exports = class Instagram extends Plugin {
   }
 
   getItemName (item) {
+    if (item && item['created_time']) {
+      let date = new Date(item['created_time'] * 1000).toUTCString()
+      return `Instagram ${date}`
+    }","yes, it's nice. I'm not sure why I didn't add it earlier. @arturi ",2018-03-16 12:46:55
705,"@@ -98,7 +98,7 @@ Then, add the Companion WebSocket server for realtime upload progress, using the
 ```js
 const server = app.listen(PORT)
 
-companion.socket(server, options)
+companion.socket(server)
 ```
 
 This takes your `server` instance and [Options](#Options) as parameters.",This line also needs to be removed.,2021-11-09 11:28:23
936,"@@ -98,7 +98,7 @@ export default class Webcam extends UIPlugin {
       ],
       mirror: true,
       showVideoSourceDropdown: false,
-      facingMode: 'user',
+      facingMode: 'user', // @TODO: remove in the next major",This should be deprecated in `index.d.ts`.,2022-08-29 19:03:09
77,"@@ -987,7 +956,7 @@ class Uppy {
   createUpload (fileIDs) {",i think `createUpload` and `removeUpload` should also be private,2017-12-09 16:07:42
104,"@@ -99,6 +99,7 @@
     ""webdriverio"": ""^4.10.1""
   },
   ""dependencies"": {
+    ""@xkeshi/image-compressor"": ""^0.5.3"",","the latest is `1.0.0`, not `0.5.3` 😉 ",2018-01-25 13:28:51
944,"@@ -99,6 +99,9 @@ export default class Webcam extends UIPlugin {
       mirror: true,
       showVideoSourceDropdown: false,
       facingMode: 'user', // @TODO: remove in the next major
+      videoConstraints: {
+        facingMode: 'user',
+      },","We should keep it as `undefined`, otherwise it would be a breaking change for users that rely on the deprecated option.
```suggestion
      videoConstraints: undefined,
```",2022-08-30 20:52:07
68,"@@ -99,7 +99,7 @@ module.exports = function fileItem (props) {
         }
       </h4>
       <div class=""UppyDashboardItem-status"">
-        ${file.data.size && html`<div class=""UppyDashboardItem-statusSize"">${prettyBytes(file.data.size)}</div>`}
+        ${isNaN(file.data.size) ? '' : html`<div class=""UppyDashboardItem-statusSize"">${prettyBytes(file.data.size)}</div>`}","We are trying to support IE 10-11, so we’ll need a polyfill for this one, I think.",2017-11-13 18:12:45
587,"@@ -99,8 +99,6 @@ const getConfigFromEnv = () => {
     secret: getSecret('COMPANION_SECRET') || generateSecret(),
     preAuthSecret: getSecret('COMPANION_PREAUTH_SECRET') || generateSecret(),
     debug: process.env.NODE_ENV && process.env.NODE_ENV !== 'production',
-    // TODO: this is a temporary hack to support distributed systems.
-    // it is not documented, because it should be changed soon.","Maybe we should not remove the whole comment, just the TODO. The comment still provides insight into what this variable does. e.g. instead we could write something like ""cookieDomain is kind of a hack to support distributed systems. This should be improved but we never got so far.""",2021-06-28 09:51:10
344,"@@ -99,9 +99,9 @@ module.exports = class Tus extends Plugin {
    *
    * @param {string} fileID
    */
-  resetUploaderReferences (fileID) {
+  resetUploaderReferences (fileID, shouldTerminate) {","In the S3 plugin I used an options object `{ abort: true }` for this:

https://github.com/transloadit/uppy/blob/84c3eda830bb4cd07e6ae8da2f9f53ffcc07ff3b/packages/%40uppy/aws-s3-multipart/src/index.js#L56-L60

might be good to do the same here for consistency reasons?",2019-10-23 11:43:57
